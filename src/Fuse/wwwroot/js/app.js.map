{"version":3,"sources":["Scripts/Coalesce/coalesce.utilities.ts","Scripts/Coalesce/coalesce.ko.base.ts","Scripts/Coalesce/coalesce.ko.utilities.ts","Scripts/Coalesce/coalesce.ko.bindings.ts","Scripts/Generated/Ko.Role.g.ts","Scripts/Generated/Ko.RoleClaim.g.ts","Scripts/Generated/Ko.RoleClaimList.g.ts","Scripts/Generated/Ko.RoleList.g.ts","Scripts/Generated/Ko.User.g.ts","Scripts/Generated/Ko.UserClaim.g.ts","Scripts/Generated/Ko.UserClaimList.g.ts","Scripts/Generated/Ko.UserList.g.ts","Scripts/Generated/Ko.UsersRoles.g.ts","Scripts/Generated/Ko.UsersRolesList.g.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,sDAAsD;AACtD,qBAAqB;AAErB,wBAAwB;AACxB,CAAC,CAAC,SAAS,CAAC,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,CAAC;AAE9B,IAAO,QAAQ,CAsKd;AAtKD,WAAO,QAAQ;IACX,0BAA0B;IAC1B,IAAc,SAAS,CAwHtB;IAxHD,WAAc,SAAS;QACnB,IAAI,kBAAkB,GAAG,CAAC,CAAC;QAC3B,IAAI,SAAS,GAAG,CAAC,CAAC;QAClB,IAAI,cAAc,GAAG,IAAI,CAAC;QAE1B,sBAA6B,MAAW;YACpC,IAAI,OAAO,MAAM,KAAK,QAAQ;gBAAE,MAAM,0CAA0C,CAAC;YACjF,sFAAsF;YACtF,IAAI,aAAa,GAAG,kCAAkC,CAAC;YACvD,IAAI,OAAO,GAAG,CAAC,aAAa,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,CAAC;YAClE,OAAO,CAAC,OAAO,IAAI,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;QAC7D,CAAC;QANe,sBAAY,eAM3B,CAAA;QAAA,CAAC;QAEF,+CAA+C;QAC/C,uBAA8B,KAAc;YACxC,IAAI,CAAC,KAAK,EAAE;gBACR,YAAY,CAAC,kBAAkB,CAAC,CAAC;gBACjC,kBAAkB,GAAG,CAAC,CAAC;gBACvB,CAAC,CAAC,eAAe,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;aACnC;YACD,cAAc,GAAG,KAAK,CAAC;QAC3B,CAAC;QAPe,uBAAa,gBAO5B,CAAA;QAAA,CAAC;QAEF;YACI,IAAI,cAAc,EAAE;gBAChB,SAAS,EAAE,CAAC;gBACZ,IAAI,SAAS,KAAK,CAAC,EAAE;oBACjB,YAAY,CAAC,kBAAkB,CAAC,CAAC;oBACjC,kBAAkB,GAAG,CAAC,CAAC;oBACvB,CAAC,CAAC,eAAe,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;iBACnC;aACJ;QACL,CAAC;QATe,kBAAQ,WASvB,CAAA;QAAA,CAAC;QAEF;YACI,qDAAqD;YACrD,IAAI,cAAc,EAAE;gBAChB,SAAS,EAAE,CAAC;gBACZ,IAAI,kBAAkB,KAAK,CAAC,EAAE;oBAC1B,kBAAkB,GAAG,UAAU,CAAC,WAAW,EAAE,GAAG,CAAC,CAAC;iBACrD;aACJ;QACL,CAAC;QARe,kBAAQ,WAQvB,CAAA;QAAA,CAAC;QAEF;YACI,CAAC,CAAC,eAAe,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;YAC/B,0CAA0C;YAC1C,gGAAgG;QACpG,CAAC;QAED,+BAA+B;QAC/B,yBAAgC,MAAc;YAC1C,IAAI,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;YACnD,IAAI,aAAa,GAAG,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YACxC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,aAAa,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBAC3C,IAAI,cAAc,GAAG,aAAa,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;gBACjD,IAAI,cAAc,CAAC,CAAC,CAAC,IAAI,MAAM,EAAE;oBAC7B,OAAO,kBAAkB,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC;iBAChD;aACJ;YACD,IAAI,MAAM,KAAK,IAAI,IAAI,MAAM,KAAK,IAAI,IAAI,MAAM,KAAK,IAAI,EAAE;gBACvD,sDAAsD;gBACtD,IAAI,KAAK,GAAG,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;gBAChD,IAAI,QAAQ,GAAG,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;gBACvC,IAAI,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;oBACvB,OAAO,kBAAkB,CAAC,QAAQ,CAAC,CAAC;iBACvC;aACJ;YACD,OAAO,IAAI,CAAC;QAChB,CAAC;QAlBe,yBAAe,kBAkB9B,CAAA;QAED,yBAAgC,GAAW,EAAE,SAAiB,EAAE,UAAkB;YAC9E,UAAU,GAAG,kBAAkB,CAAC,UAAU,CAAC,CAAC;YAC5C,IAAI,IAAI,GAAG,QAAQ,CAAC,IAAI,CAAC;YACzB,GAAG,GAAG,GAAG,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;YAC5B,IAAI,GAAG,CAAC,OAAO,CAAC,SAAS,GAAG,GAAG,CAAC,IAAI,CAAC,EAAE;gBACnC,IAAI,MAAM,GAAG,GAAG,CAAC,SAAS,CAAC,CAAC,EAAE,GAAG,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC;gBACtD,IAAI,MAAM,GAAG,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC;gBACnD,MAAM,GAAG,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;gBACnD,MAAM,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;gBACjF,GAAG,GAAG,MAAM,GAAG,SAAS,GAAG,GAAG,GAAG,UAAU,GAAG,MAAM,CAAC;aACxD;iBACI;gBACD,IAAI,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC;oBACpB,GAAG,IAAI,GAAG,GAAG,SAAS,GAAG,GAAG,GAAG,UAAU,CAAC;;oBAE1C,GAAG,IAAI,GAAG,GAAG,SAAS,GAAG,GAAG,GAAG,UAAU,CAAC;aACjD;YACD,OAAO,GAAG,GAAG,IAAI,CAAC;QACtB,CAAC;QAlBe,yBAAe,kBAkB9B,CAAA;QAED,+BAAsC,MAAc;YAChD,IAAI,MAAM;gBAAE,OAAO,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;;gBAC/D,OAAO,MAAM,CAAC;QACvB,CAAC;QAHe,+BAAqB,wBAGpC,CAAA;QAED,0BAAiC,MAAc;YAC3C,IAAI,MAAM;gBAAE,OAAO,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;;gBAC/D,OAAO,MAAM,CAAC;QACvB,CAAC;QAHe,0BAAgB,mBAG/B,CAAA;QAED,mDAAmD;QACnD,iEAAiE;QACjE;YACI,CAAC,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,IAAI;gBAClC,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,EAAY,CAAC,CAAC;YACnD,CAAC,CAAC,CAAC;YAEH,CAAC,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,IAAI;gBAChC,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,EAAY,CAAC,CAAC;YAC1C,CAAC,CAAC,CAAC;YAEH,CAAC,CAAC,gBAAgB,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,IAAI;gBACtC,IAAuB,IAAK,CAAC,OAAO,EAAE;oBAClC,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC;iBACtC;qBAAM;oBACH,CAAC,CAAC,IAAI,CAAC,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC;iBACjC;YACL,CAAC,CAAC,CAAC;QACP,CAAC;QAhBe,yBAAe,kBAgB9B,CAAA;IACL,CAAC,EAxHa,SAAS,GAAT,kBAAS,KAAT,kBAAS,QAwHtB;IAED,IAAc,YAAY,CAyCzB;IAzCD,WAAc,YAAY;QACtB,yBAAgC,OAAe;YAC3C,OAAO,GAAG;;;gDAG0B;gBACpC,OAAO,GAAG;;;;aAIT,CAAC;YAEF,sBAAsB;YACtB,CAAC,CAAC,eAAe,CAAC,CAAC,MAAM,EAAE,CAAC;YAC5B,sBAAsB;YACtB,CAAC,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;QAC9B,CAAC;QAfe,4BAAe,kBAe9B,CAAA;QAED,oBAA2B,KAAa,EAAE,OAAe,EAAE,QAAiB,EAAE,SAAkB;YAC5F,OAAO,GAAG;;;2CAGqB;gBAC/B,KAAK,GAAG;;;yCAGqB;gBAC7B,OAAO,GAAG;;2CAEqB;gBAC/B,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;;qBAET,CAAC;gBACV,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;;qBAER,CAAC,GAAG;;aAEZ,CAAC;YAEF,eAAe,CAAC,OAAO,CAAC,CAAC;QAC7B,CAAC;QAtBe,uBAAU,aAsBzB,CAAA;IACL,CAAC,EAzCa,YAAY,GAAZ,qBAAY,KAAZ,qBAAY,QAyCzB;AACL,CAAC,EAtKM,QAAQ,KAAR,QAAQ,QAsKd;AC5KD,sDAAsD;AAGtD,IAAO,QAAQ,CA2oCd;AA9oCD,sDAAsD;AAGtD,WAAO,QAAQ;IASV,CAAC;IAMF;QAGI,+BAAY,YAAoC;YAAhD,iBAEC;YAES,SAAI,GAAG,UAA8C,IAAY;gBAA1D,iBAoBhB;gBAnBG,IAAM,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC;gBACrB,IAAM,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,UAAU,CAAQ,IAAI,CAAC,CAAC;gBACjD,IAAI,QAAsC,CAAC;gBAC3C,QAAQ,GAAG,EAAE,CAAC,QAAQ,CAAQ;oBAC1B,eAAe,EAAE,IAAI;oBACrB,IAAI,EAAE;wBACF,IAAI,QAAQ,GAAG,GAAG,EAAE,CAAC;wBACrB,IAAI,QAAQ,KAAK,IAAI;4BAAE,OAAO,QAAQ,CAAC;wBAEvC,IAAI,KAAI,CAAC,YAAY,IAAI,KAAI,CAAC,YAAY,CAAC,IAAc,CAAC,EAAE;4BACxD,OAAO,KAAI,CAAC,YAAY,CAAC,IAAc,CAAC,EAAE,CAAC;yBAC9C;wBAED,OAAO,IAAI,CAAC;oBAChB,CAAC;oBACD,KAAK,EAAE,GAAG;iBACb,CAAwC,CAAC;gBAC1C,QAAQ,CAAC,GAAG,GAAG,GAAG,CAAC;gBACnB,OAAO,QAAQ,CAAC;YACpB,CAAC,CAAA;YAED;;cAEE;YACK,QAAG,GAAG,UAAC,IAAgB;gBAC1B,OAAQ,KAAY,CAAC,GAAG,GAAG,IAAI,CAAC,CAAC;YACrC,CAAC,CAAA;YA9BG,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;QACrC,CAAC;QA8BL,4BAAC;IAAD,CAnCA,AAmCC,IAAA;IAED;QAAoC,sCAAqB;QAAzD;YAAA,qEAcC;YAbG,mDAAmD;YAC5C,gBAAU,GAAG,KAAI,CAAC,IAAI,CAAS,YAAY,CAAC,CAAC;YACpD,+DAA+D;YACxD,iBAAW,GAAG,KAAI,CAAC,IAAI,CAAS,aAAa,CAAC,CAAC;YACtD,iFAAiF;YAC1E,uBAAiB,GAAG,KAAI,CAAC,IAAI,CAAU,mBAAmB,CAAC,CAAC;YAEnE,mFAAmF;YAC5E,eAAS,GAAG,KAAI,CAAC,IAAI,CAAuC,WAAW,CAAC,CAAC;YAChF,2DAA2D;YACpD,iBAAW,GAAG,KAAI,CAAC,IAAI,CAAsB,aAAa,CAAC,CAAC;YACnE,8DAA8D;YACvD,kBAAY,GAAG,KAAI,CAAC,IAAI,CAAsB,cAAc,CAAC,CAAC;;QACzE,CAAC;QAAD,yBAAC;IAAD,CAdA,AAcC,CAdmC,qBAAqB,GAcxD;IAED;QAAqE,0CAAqB;QAA1F;YAAA,qEAsDC;YArDG,yJAAyJ;YAClJ,mBAAa,GAAG,KAAI,CAAC,IAAI,CAAS,eAAe,CAAC,CAAC;YAE1D,uHAAuH;YAChH,qBAAe,GAAG,KAAI,CAAC,IAAI,CAAU,iBAAiB,CAAC,CAAC;YAE/D,2IAA2I;YACpI,gCAA0B,GAAG,KAAI,CAAC,IAAI,CAAU,4BAA4B,CAAC,CAAC;YAErF,mEAAmE;YAC5D,wBAAkB,GAAG,KAAI,CAAC,IAAI,CAAU,oBAAoB,CAAC,CAAC;YAErE,4HAA4H;YACrH,2BAAqB,GAAG,KAAI,CAAC,IAAI,CAAU,uBAAuB,CAAC,CAAC;YAE3E;;;cAGE;YACK,6BAAuB,GAAG,KAAI,CAAC,IAAI,CAAU,yBAAyB,CAAC,CAAC;YAE/E;;;cAGE;YACK,qCAA+B,GAAG,KAAI,CAAC,IAAI,CAAU,iCAAiC,CAAC,CAAC;YAE/F;;;cAGE;YACK,2BAAqB,GAAG,KAAI,CAAC,IAAI,CAAU,uBAAuB,CAAC,CAAC;YAE3E;;;;cAIE;YACK,kCAA4B,GAAG,KAAI,CAAC,IAAI,CAAU,8BAA8B,CAAC,CAAC;YAEzF;;;cAGE;YACK,mBAAa,GAAG,KAAI,CAAC,IAAI,CAAsB,eAAe,CAAC,CAAC;YAEvE;;;;;cAKE;YACK,uBAAiB,GAAG,KAAI,CAAC,IAAI,CAA4C,mBAAmB,CAAC,CAAC;;QACzG,CAAC;QAAD,6BAAC;IAAD,CAtDA,AAsDC,CAtDoE,kBAAkB,GAsDtF;IAtDY,+BAAsB,yBAsDlC,CAAA;IAED;QAAiH,8CAAqB;QAAtI;;QACA,CAAC;QAAD,iCAAC;IAAD,CADA,AACC,CADgH,kBAAkB,GAClI;IADY,mCAA0B,6BACtC,CAAA;IAED;QAAyE,8CAAqB;QAA9F;;QACA,CAAC;QAAD,iCAAC;IAAD,CADA,AACC,CADwE,kBAAkB,GAC1F;IADY,mCAA0B,6BACtC,CAAA;IAED;QAAsC,oCAAqB;QAA3D;YAAA,qEAMC;YAJG;;cAEE;YACK,kBAAY,GAAG,KAAI,CAAC,IAAI,CAAgB,cAAc,CAAC,CAAC;;QACnE,CAAC;QAAD,uBAAC;IAAD,CANA,AAMC,CANqC,qBAAqB,GAM1D;IANY,yBAAgB,mBAM5B,CAAA;IAED;QAAyB,8BAAuB;QAAhD;YAAA,qEAMC;YALG,0EAA0E;YAC1D,SAAG,GAAG,IAAI,gBAAgB,EAAE,CAAC;YAC7B,eAAS,GAAG,IAAI,sBAAsB,CAAgB,KAAI,CAAC,CAAC;YAC5D,mBAAa,GAAG,IAAI,0BAA0B,CAAkD,KAAI,CAAC,CAAC;YACtG,mBAAa,GAAG,IAAI,0BAA0B,CAAgB,KAAI,CAAC,CAAC;;QACxF,CAAC;QAAD,iBAAC;IAAD,CANA,AAMC,CANwB,kBAAkB,GAM1C;IAED,IAAM,eAAe,GAAc,cAAc,IAAI,SAAS,CAAC,MAAM;QAAE,MAAM,qCAAqC,CAAC,CAAC,OAAO,IAAI,CAAC,CAAC,CAAC,CAAC;IACnI,IAAM,WAAW,GAAQ,eAAe,CAAC;IACzC,WAAW,CAAC,GAAG,GAAG,WAAW,CAAC;IAEjB,4BAAmB,GAAG,IAAI,UAAU,EAAE,CAAC;IACpD,SAAA,mBAAmB,CAAC,GAAG,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;IAE3C,SAAA,mBAAmB,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;IACvC,SAAA,mBAAmB,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;IACpC,SAAA,mBAAmB,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC;IAC5C,SAAA,mBAAmB,CAAC,SAAS,CAAC,UAAC,GAAG,EAAE,OAAO,IAAK,OAAA,KAAK,CAAC,OAAO,CAAC,EAAd,CAAc,CAAC,CAAC;IAChE,SAAA,mBAAmB,CAAC,WAAW,CAAC,UAAA,GAAG,IAAI,OAAA,QAAQ,CAAC,SAAS,CAAC,QAAQ,EAAE,EAA7B,CAA6B,CAAC,CAAC;IACtE,SAAA,mBAAmB,CAAC,YAAY,CAAC,UAAA,GAAG,IAAI,OAAA,QAAQ,CAAC,SAAS,CAAC,QAAQ,EAAE,EAA7B,CAA6B,CAAC,CAAC;IAEvE,SAAA,mBAAmB,CAAC,SAAS,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;IACjD,SAAA,mBAAmB,CAAC,SAAS,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;IACpD,SAAA,mBAAmB,CAAC,SAAS,CAAC,0BAA0B,CAAC,IAAI,CAAC,CAAC;IAC/D,SAAA,mBAAmB,CAAC,SAAS,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC;IACxD,SAAA,mBAAmB,CAAC,SAAS,CAAC,qBAAqB,CAAC,IAAI,CAAC,CAAC;IAC1D,SAAA,mBAAmB,CAAC,SAAS,CAAC,uBAAuB,CAAC,IAAI,CAAC,CAAC;IAC5D,SAAA,mBAAmB,CAAC,SAAS,CAAC,+BAA+B,CAAC,KAAK,CAAC,CAAC;IACrE,SAAA,mBAAmB,CAAC,SAAS,CAAC,qBAAqB,CAAC,IAAI,CAAC,CAAC;IAC1D,SAAA,mBAAmB,CAAC,SAAS,CAAC,4BAA4B,CAAC,IAAI,CAAC,CAAC;IACjE,SAAA,mBAAmB,CAAC,SAAS,CAAC,iBAAiB,GAAG,WAAW,CAAC;IAE9D,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC;QACf,QAAQ,EAAE;YACN,IAAI,EAAE,KAAK;YACX,IAAI,EAAE,IAAI;YACV,UAAU,EAAE,IAAI;SACnB;KACJ,CAAC,CAAC;IAoCH;QAqBI,sBAAuB,MAAe;YAAf,WAAM,GAAN,MAAM,CAAS;YAlBtC,4DAA4D;YAC5C,SAAI,GAAW,MAAM,CAAC;YAEtC,uDAAuD;YAChD,WAAM,GAAgC,EAAE,CAAC,UAAU,CAAU,IAAI,CAAC,CAAC;YAE1E,mEAAmE;YAC5D,cAAS,GAA0C,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;YAE9E,4CAA4C;YACrC,cAAS,GAAgC,EAAE,CAAC,UAAU,CAAU,KAAK,CAAC,CAAC;YAE9E,6CAA6C;YACtC,YAAO,GAA+B,EAAE,CAAC,UAAU,CAAS,IAAI,CAAC,CAAC;YAEzE,wDAAwD;YACjD,kBAAa,GAAuC,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;YAMrE,yBAAoB,GAAG,UAAC,IAAe,IAA6G,CAAC,CAAC;QAJtH,CAAC;QAMjC,qCAAc,GAAxB,UAAyB,QAAgB,EAAE,QAAoC,EAAE,MAAgB;YAAjG,iBAoCC;YAnCG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;YACrB,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;YACjB,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;YACzB,OAAO,CAAC,CAAC,IAAI,CAAC;gBACV,MAAM,EAAE,IAAI,CAAC,IAAI;gBACjB,GAAG,EAAE,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,UAAU,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,aAAa,GAAG,GAAG,GAAG,IAAI,CAAC,IAAI;gBAC1F,IAAI,EAAE,QAAQ;gBACd,SAAS,EAAE,EAAE,eAAe,EAAE,IAAI,EAAE;aACvC,CAAC;iBACG,IAAI,CAAC,UAAC,IAAe;gBAClB,yEAAyE;gBACzE,kFAAkF;gBAClF,6CAA6C;gBAC7C,IAAI,KAAI,CAAC,MAAM,YAAY,aAAa;oBACpC,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;gBAE/B,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;gBACrB,KAAI,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;gBACjB,KAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;gBACzB,KAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,CAAC;gBAChC,KAAI,CAAC,YAAY,CAAC,IAAI,EAAE,QAAQ,EAAE,MAAM,CAAC,CAAC;YAC9C,CAAC,CAAC;iBACD,IAAI,CAAC,UAAC,GAAG;gBACN,IAAI,QAAQ,GAAG,eAAe,CAAC;gBAC/B,IAAI,GAAG,CAAC,YAAY,IAAI,GAAG,CAAC,YAAY,CAAC,OAAO;oBAAE,QAAQ,GAAG,GAAG,CAAC,YAAY,CAAC,OAAO,CAAC;gBACtF,KAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;gBAC1B,KAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;gBAEvB,IAAI,KAAI,CAAC,MAAM,CAAC,cAAc,CAAC,iBAAiB,EAAE,EAAE;oBAChD,KAAI,CAAC,MAAM,CAAC,cAAc,CAAC,SAAS,EAAE,CAAC,KAAI,CAAC,MAAM,EAAE,2BAAyB,KAAI,CAAC,IAAI,UAAK,QAAU,CAAC,CAAC;iBAC1G;YACL,CAAC,CAAC;iBACD,MAAM,CAAC;gBACJ,KAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;YAC1B,CAAC,CAAC,CAAC;QACX,CAAC;QACL,mBAAC;IAAD,CAhEA,AAgEC,IAAA;IAhEqB,qBAAY,eAgEjC,CAAA;IAED;QAA4F,oCAA8B;QAA1H;YAAA,qEAoBC;YAnBG,mBAAmB;YACZ,UAAI,GAAsC,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;YACrE,iCAAiC;YAC1B,cAAQ,GAAsC,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;YACzE,gEAAgE;YACzD,gBAAU,GAAsC,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;YAC3E,uBAAuB;YAChB,eAAS,GAAsC,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;YAE1E,mEAAmE;YAC5D,eAAS,GAA0C,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;YAEpE,0BAAoB,GAAG,UAAC,IAAe;gBAC7C,IAAM,UAAU,GAAG,IAAkB,CAAC;gBACtC,KAAI,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;gBAC3B,KAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;gBACnC,KAAI,CAAC,UAAU,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;gBACvC,KAAI,CAAC,SAAS,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC;YACzC,CAAC,CAAA;;QACL,CAAC;QAAD,uBAAC;IAAD,CApBA,AAoBC,CApB2F,YAAY,GAoBvG;IApBqB,yBAAgB,mBAoBrC,CAAA;IAED;QAiCI;YAAA,iBAEC;YAhCM,cAAS,GAAkC,cAAQ,OAAO,EAAE,CAAC,CAAC,CAAC,CAAA;YAEtE,kFAAkF;YAClF,6CAA6C;YACtC,mBAAc,GAAG,EAAE,CAAC,QAAQ,CAAC;gBAChC,IAAI,KAAK,GAAG,gBAAc,KAAI,CAAC,KAAO,CAAC;gBAEvC,kGAAkG;gBAElG,IAAI,GAAG,GAAG,KAAI,CAAC,SAAS,EAAE,CAAC;gBAC3B,KAAK,IAAI,GAAG,IAAI,GAAG,EAAE;oBACjB,IAAI,GAAG,CAAC,GAAG,CAAC,KAAK,IAAI,IAAI,GAAG,CAAC,GAAG,CAAC,KAAK,SAAS,EAAE;wBAC7C,KAAK,IAAI,iBAAe,GAAG,SAAI,kBAAkB,CAAC,GAAG,CAAC,GAAG,CAAC,CAAG,CAAA;qBAChE;iBACJ;gBACD,OAAO,KAAK,CAAC;YACjB,CAAC,EAAE,IAAI,EAAE,EAAE,eAAe,EAAE,IAAI,EAAE,CAAC,CAAC;YAEpC;;;cAGE;YACK,cAAS,GAAG,UAAC,IAA0B;gBAC1C,KAAI,CAAC,cAAc,CAAC,SAAS,CAAC;oBAC1B,IAAI,IAAI,CAAC,QAAQ,EAAE,EAAE;wBACjB,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;qBACzB;gBACL,CAAC,CAAC,CAAA;YACN,CAAC,CAAA;YAGG,IAAI,CAAC,KAAK,GAAG,QAAQ,CAAC,SAAS,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;QACvD,CAAC;QACL,iBAAC;IAAD,CApCA,AAoCC,IAAA;IApCqB,mBAAU,aAoC/B,CAAA;IAED;QAAA;QAEA,CAAC;QAAD,oBAAC;IAAD,CAFA,AAEC,IAAA;IAFqB,sBAAa,gBAElC,CAAA;IAED;QAueI,uBAAY,MAAwE;YAApF,iBASC;YApdD,yDAAyD;YAC/C,iBAAY,GAAW,CAAC,CAAC;YACnC,wEAAwE;YAC9D,gBAAW,GAAW,CAAC,CAAC;YAGlC,sCAAsC;YAC5B,kBAAa,GAAgC,EAAE,CAAC;YAE1D;;cAEE;YACK,aAAQ,GAAW,EAAE,CAAC;YAkB7B,mFAAmF;YAC5E,qBAAgB,GAAyC,IAAI,CAAC;YACrE;;;cAGE;YACK,SAAI,GAAQ,CAAC,CAAC;YAErB,oGAAoG;YAC7F,YAAO,GAAgC,EAAE,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;YACnE,0EAA0E;YACnE,iBAAY,GAAsC,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;YAU7E,gFAAgF;YACzE,cAAS,GAAgC,EAAE,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;YACrE,mFAAmF;YAC5E,eAAU,GAAgC,EAAE,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;YACtE,mFAAmF;YAC5E,eAAU,GAAgC,EAAE,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;YACtE,kFAAkF;YAC3E,cAAS,GAAgC,EAAE,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;YACrE,uFAAuF;YAChF,cAAS,GAAgC,EAAE,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;YAErE,0EAA0E;YACnE,qBAAgB,GAAG,cAAY,OAAA,KAAI,CAAC,UAAU,CAAC,CAAC,KAAI,CAAC,UAAU,EAAE,CAAC,EAAnC,CAAmC,CAAC;YAE1E,yEAAyE;YAClE,oBAAe,GAAG,cAAY,OAAA,KAAI,CAAC,SAAS,CAAC,CAAC,KAAI,CAAC,SAAS,EAAE,CAAC,EAAjC,CAAiC,CAAC;YAEvE,0EAA0E;YACnE,qBAAgB,GAAG,cAAY,OAAA,KAAI,CAAC,UAAU,CAAC,CAAC,KAAI,CAAC,UAAU,EAAE,CAAC,EAAnC,CAAmC,CAAC;YAE1E;;;cAGE;YACK,iBAAY,GAAG;gBAClB,IAAI,KAAI,CAAC,gBAAgB,IAAI,KAAI,CAAC,gBAAgB,EAAE,EAAE;oBAClD,CAAC,CAAC,IAAI,CAAC,KAAI,CAAC,gBAAgB,EAAE,EAAE,UAAC,CAAC,EAAE,GAAG;wBACnC,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;oBAC1B,CAAC,CAAC,CAAC;iBACN;gBACD,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;gBACtB,OAAO,IAAI,CAAC,CAAC,2BAA2B;YAC5C,CAAC,CAAC;YAGF,sFAAsF;YAC/E,WAAM,GAAoC,IAAI,CAAC;YACtD,+FAA+F;YACxF,aAAQ,GAAoC,IAAI,CAAC;YAExD,8CAA8C;YACvC,aAAQ,GAAgC,EAAE,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;YACpE,uDAAuD;YAC7C,qBAAgB,GAA+B,EAAE,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;YAE1E;;;cAGE;YACK,YAAO,GAAG,cAAe,OAAA,KAAI,CAAC,MAAM,IAAI,IAAI,IAAI,KAAI,CAAC,MAAM,EAAE,CAAC,MAAM,IAAI,CAAC,EAAhD,CAAgD,CAAC;YAEjF;;cAEE;YACK,aAAQ,GAAG;gBACd,IAAI,KAAI,CAAC,MAAM;oBAAE,KAAI,CAAC,MAAM,CAAC,eAAe,EAAE,CAAC;gBAC/C,IAAI,KAAI,CAAC,QAAQ;oBAAE,KAAI,CAAC,QAAQ,CAAC,eAAe,EAAE,CAAC;gBACnD,OAAO,KAAI,CAAC,OAAO,EAAE,CAAC;YAC1B,CAAC,CAAC;YAKF,qCAAqC;YAC9B,cAAS,GAAgC,EAAE,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;YACrE,2CAA2C;YACpC,aAAQ,GAAgC,EAAE,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;YACpE,6CAA6C;YACtC,YAAO,GAA6B,EAAE,CAAC,YAAY,CAAC;gBACvD,OAAO,KAAI,CAAC,cAAc,CAAC,WAAW,EAAE,GAAG,KAAI,CAAC,cAAc,GAAG,iBAAiB,GAAG,CAAE,KAAY,CAAC,KAAI,CAAC,cAAc,CAAC,CAAC,EAAE,CAAC;YAChI,CAAC,CAAC,CAAC;YAqBH,8EAA8E;YACvE,wBAAmB,GAA8B,EAAE,CAAC,QAAQ,CAAC;gBAChE,IAAI,KAAI,CAAC,QAAQ,EAAE;oBAAE,OAAO,IAAI,CAAC;gBACjC,IAAI,KAAI,CAAC,gBAAgB,EAAE,GAAG,CAAC;oBAAE,OAAO,IAAI,CAAC;gBAC7C,OAAO,KAAK,CAAC;YACjB,CAAC,CAAC,CAAC;YAEH,mCAAmC;YACnC,iEAAiE;YACvD,wBAAmB,GAAG,UAAC,QAAiB;gBAC9C,IAAI,QAAQ;oBACR,KAAI,CAAC,gBAAgB,CAAC,KAAI,CAAC,gBAAgB,EAAE,GAAG,CAAC,CAAC,CAAC;;oBAEnD,KAAI,CAAC,gBAAgB,CAAC,KAAI,CAAC,gBAAgB,EAAE,GAAG,CAAC,CAAC,CAAC;gBAEvD,IAAI,KAAI,CAAC,MAAM,YAAY,aAAa,EAAE;oBACtC,KAAI,CAAC,MAAM,CAAC,mBAAmB,CAAC,QAAQ,CAAC,CAAC;iBAC7C;YACL,CAAC,CAAC;YAEF;;;cAGE;YACK,SAAI,GAAG,UAAC,QAA+B;gBAC1C,IAAI,CAAC,KAAI,CAAC,SAAS,EAAE,EAAE;oBACnB,IAAI,KAAI,CAAC,QAAQ,EAAE,EAAE;wBACjB,IAAI,KAAI,CAAC,cAAc,CAAC,kBAAkB,EAAE;4BAAE,KAAI,CAAC,cAAc,CAAC,WAAW,EAAE,CAAC,KAAI,CAAC,CAAC;wBACtF,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;wBAEpB,IAAI,GAAG,GAAG,KAAG,KAAI,CAAC,cAAc,CAAC,UAAU,EAAE,GAAG,KAAI,CAAC,aAAa,uBAAkB,KAAI,CAAC,QAAQ,SAAI,KAAI,CAAC,UAAU,CAAC,cAAc,EAAI,CAAA;wBAEvI,OAAO,CAAC,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,MAAM,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,KAAI,CAAC,SAAS,EAAE,EAAE,SAAS,EAAE,EAAE,eAAe,EAAE,IAAI,EAAE,EAAE,CAAC;6BACpG,IAAI,CAAC,UAAC,IAAgB;4BACnB,KAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;4BACpB,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;4BACxB,IAAI,KAAI,CAAC,cAAc,CAAC,qBAAqB,EAAE,EAAE;gCAC7C,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;6BACvC;4BACD,8CAA8C;4BAC9C,KAAK,IAAI,CAAC,IAAI,KAAI,CAAC,aAAa,EAAE;gCAC9B,KAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,KAAI,CAAC,CAAC;6BAC/B;wBACL,CAAC,CAAC;6BACD,IAAI,CAAC,UAAC,GAAc;4BACjB,IAAI,QAAQ,GAAG,eAAe,CAAC;4BAC/B,IAAM,IAAI,GAAsB,GAAG,CAAC,YAAY,CAAA;4BAChD,IAAI,IAAI,IAAI,IAAI,CAAC,OAAO;gCAAE,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC;4BAClD,KAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC;4BAE5B,+CAA+C;4BAC/C,IAAI,IAAI,IAAI,IAAI,CAAC,MAAM,EAAE;gCACrB,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;6BACvC;4BACD,IAAI,KAAI,CAAC,cAAc,CAAC,iBAAiB,EAAE;gCACvC,KAAI,CAAC,cAAc,CAAC,SAAS,EAAE,CAAC,KAAI,EAAE,2BAA2B,GAAG,QAAQ,CAAC,CAAC;wBACtF,CAAC,CAAC;6BACD,MAAM,CAAC;4BACJ,KAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;4BACrB,IAAI,OAAM,CAAC,QAAQ,CAAC,IAAI,UAAU,EAAE;gCAChC,QAAQ,CAAC,KAAI,CAAC,CAAC;6BAClB;4BACD,IAAI,KAAI,CAAC,cAAc,CAAC,kBAAkB,EAAE;gCAAE,KAAI,CAAC,cAAc,CAAC,YAAY,EAAE,CAAC,KAAI,CAAC,CAAC;wBAC3F,CAAC,CAAC,CAAC;qBACV;yBACI;wBACD,qGAAqG;wBACrG,sDAAsD;wBACtD,KAAI,CAAC,YAAY,EAAE,CAAC;wBACpB,OAAO,KAAK,CAAC;qBAChB;iBACJ;YACL,CAAC,CAAA;YAGD,+HAA+H;YACxH,SAAI,GAAG,UAAC,EAAQ,EAAE,QAAwC;gBAC7D,IAAI,CAAC,EAAE,EAAE;oBACL,EAAE,GAAG,CAAE,KAAY,CAAC,KAAI,CAAC,cAAc,CAAC,CAAC,EAAE,CAAC;iBAC/C;gBACD,IAAI,EAAE,EAAE;oBACJ,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;oBACrB,KAAI,CAAC,cAAc,CAAC,WAAW,EAAE,CAAC,KAAI,CAAC,CAAC;oBAExC,IAAI,GAAG,GAAG,KAAG,KAAI,CAAC,cAAc,CAAC,UAAU,EAAE,GAAG,KAAI,CAAC,aAAa,aAAQ,EAAE,kBAAa,KAAI,CAAC,QAAQ,SAAI,KAAI,CAAC,UAAU,CAAC,cAAc,EAAI,CAAA;oBAE5I,OAAO,CAAC,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,SAAS,EAAE,EAAE,eAAe,EAAE,IAAI,EAAE,EAAE,CAAC;yBAC3E,IAAI,CAAC,UAAC,IAAgB;wBACnB,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;wBACxB,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;wBACpC,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;wBACpB,IAAI,OAAM,CAAC,QAAQ,CAAC,IAAI,UAAU;4BAAE,QAAQ,CAAC,KAAI,CAAC,CAAC;oBACvD,CAAC,CAAC;yBACD,IAAI,CAAC,UAAC,GAAc;wBACjB,KAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;wBACrB,IAAM,IAAI,GAAsB,GAAG,CAAC,YAAY,CAAA;wBAChD,IAAI,QAAQ,GAAG,iBAAiB,GAAG,KAAI,CAAC,SAAS,GAAG,aAAa,GAAG,EAAE,CAAC;wBACvE,IAAI,IAAI,IAAI,IAAI,CAAC,OAAO;4BAAE,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC;wBAElD,KAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC;wBAC5B,IAAI,KAAI,CAAC,cAAc,CAAC,iBAAiB,EAAE;4BACvC,KAAI,CAAC,cAAc,CAAC,SAAS,EAAE,CAAC,KAAI,EAAE,QAAQ,CAAC,CAAC;oBACxD,CAAC,CAAC;yBACD,MAAM,CAAC;wBACJ,KAAI,CAAC,cAAc,CAAC,YAAY,EAAE,CAAC,KAAI,CAAC,CAAC;wBACzC,KAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;oBAC1B,CAAC,CAAC,CAAC;iBACV;YACL,CAAC,CAAC;YAEF,8DAA8D;YACvD,eAAU,GAAG,UAAC,QAA+B;gBAChD,IAAI,SAAS,GAAG,CAAE,KAAY,CAAC,KAAI,CAAC,cAAc,CAAC,CAAC,EAAE,CAAC;gBACvD,IAAI,SAAS,EAAE;oBACX,OAAO,CAAC,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,MAAM,EAAE,GAAG,EAAE,KAAI,CAAC,cAAc,CAAC,UAAU,EAAE,GAAG,KAAI,CAAC,aAAa,GAAG,UAAU,GAAG,SAAS,EAAE,SAAS,EAAE,EAAE,eAAe,EAAE,IAAI,EAAE,EAAE,CAAC;yBACvJ,IAAI,CAAC,UAAC,IAAgB;wBACnB,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;wBAExB,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,IAAI,KAAI,CAAC,cAAc,CAAC,uBAAuB,EAAE,EAAE;4BACtE,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;yBACvC;wBAED,uCAAuC;wBACvC,IAAI,KAAI,CAAC,gBAAgB,IAAI,KAAI,CAAC,MAAM,EAAE;4BACtC,IAAI,sBAAsB,GAAG,CAAC,IAAI,CAAC,MAAM,IAAI,IAAI,IAAI,KAAI,CAAC,cAAc,CAAC,+BAA+B,EAAE,CAAC,CAAC;4BAC5G,IAAI,CAAC,sBAAsB,EAAE;gCACzB,sJAAsJ;gCACtJ,OAAO,CAAC,IAAI,CAAC,yJAAyJ,CAAC,CAAA;6BAC1K;iCAAM;gCACH,KAAI,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;gCAC5B,KAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,KAAI,CAAC,gBAAgB,EAAE,CAAC,OAAO,CAAC,KAAI,CAAC,EAAE,CAAC,CAAC,CAAC;gCACvE,KAAI,CAAC,MAAM,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;6BAChC;yBACJ;oBACL,CAAC,CAAC;yBACD,IAAI,CAAC,UAAC,GAAc;wBACjB,IAAI,QAAQ,GAAG,2BAA2B,CAAC;wBAC3C,IAAM,IAAI,GAAsB,GAAG,CAAC,YAAY,CAAA;wBAChD,IAAI,IAAI,IAAI,IAAI,CAAC,OAAO;4BAAE,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC;wBAElD,KAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC;wBAC5B,IAAI,KAAI,CAAC,cAAc,CAAC,iBAAiB,EAAE;4BACvC,KAAI,CAAC,cAAc,CAAC,SAAS,EAAE,CAAC,KAAI,EAAE,QAAQ,CAAC,CAAC;oBACxD,CAAC,CAAC;yBACD,MAAM,CAAC;wBACJ,IAAI,OAAM,CAAC,QAAQ,CAAC,IAAI,UAAU,EAAE;4BAChC,QAAQ,CAAC,KAAI,CAAC,CAAC;yBAClB;oBACL,CAAC,CAAC,CAAC;iBACV;qBAAM;oBACH,+CAA+C;oBAC/C,IAAI,KAAI,CAAC,gBAAgB,IAAI,KAAI,CAAC,MAAM,EAAE;wBACtC,KAAI,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;wBAC5B,KAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,KAAI,CAAC,gBAAgB,EAAE,CAAC,OAAO,CAAC,KAAI,CAAC,EAAE,CAAC,CAAC,CAAC;wBACvE,KAAI,CAAC,MAAM,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;qBAChC;oBACD,IAAI,OAAM,CAAC,QAAQ,CAAC,IAAI,UAAU,EAAE;wBAChC,QAAQ,CAAC,KAAI,CAAC,CAAC;qBAClB;iBACJ;YACL,CAAC,CAAC;YAEF;;cAEE;YACK,+BAA0B,GAAG,UAAC,QAAqB,EAAE,OAAgB;gBACxE,IAAI,OAAO,OAAO,IAAI,QAAQ,EAAE;oBAC5B,OAAO,GAAG,mBAAmB,CAAC;iBACjC;gBACD,IAAI,OAAO,CAAC,OAAO,CAAC,EAAE;oBAClB,OAAO,KAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;iBACpC;YACL,CAAC,CAAC;YAEF,wGAAwG;YAC9F,mBAAc,GAAG,UACvB,SAA8B,EAC9B,aAA6C,EAC7C,WAA4B,EAC5B,WAAwB,EACxB,aAA0B,EAC1B,SAAc;gBAGd,IAAI,SAAS,GAAG,CAAE,KAAY,CAAC,KAAI,CAAC,cAAc,CAAC,CAAC,EAAE,CAAC;gBAEvD,IAAI,SAAS,IAAI,OAAO,EAAE;oBACtB,IAAI,OAAO,GAAG,IAAI,WAAW,EAAE,CAAC;oBAChC,OAAO,CAAC,MAAM,GAAG,KAAI,CAAC;oBACtB,OAAO,CAAC,gBAAgB,GAAG,aAAa,CAAC;oBACzC,OAAO,CAAC,cAAc,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;oBAC7C,OAAO,CAAC,WAAW,CAAS,CAAC,SAAS,CAAC,CAAC;oBACxC,OAAO,CAAC,aAAa,CAAS,CAAC,SAAS,CAAC,CAAC;oBAC3C,OAAO,OAAO,CAAC,IAAI,CAAC;wBAChB,qCAAqC;wBACrC,OAAO,CAAC,cAAc,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;wBAC7C,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;oBAChC,CAAC,CAAC,CAAC;iBACN;qBAAM,IAAI,SAAS,IAAI,SAAS,EAAE;oBAC/B,IAAI,YAAY,GAAG,aAAa,EAAE,CAAC,MAAM,CAAC,UAAC,CAAM,IAAK,OAAA,CAAC,CAAC,WAAW,CAAC,EAAE,KAAK,SAAS,IAAI,CAAC,CAAC,aAAa,CAAC,EAAE,KAAK,SAAS,EAAlE,CAAkE,CAAC,CAAC;oBAC1H,IAAI,YAAY,CAAC,MAAM,IAAI,CAAC,EAAE;wBAC1B,MAAM,qBAAmB,WAAW,CAAC,QAAQ,EAAE,+BAA0B,WAAW,SAAI,SAAS,WAAM,aAAa,SAAI,SAAS,MAAG,CAAA;qBACvI;yBAAM;wBACH,kFAAkF;wBAClF,IAAI,WAAW,GAAG,YAAY,CAAC,CAAC,CAAC,CAAC;wBAClC,OAAO,WAAW,CAAC,UAAU,EAAE,CAAC;qBACnC;iBACJ;YACL,CAAC,CAAC;YAEF,4FAA4F;YAClF,uBAAkB,GAAG,UAC3B,SAAiB,EACjB,aAA6C,EAC7C,WAA4B,EAC5B,WAAwB,EACxB,aAA0B,EAC1B,SAAc;gBAEd,IAAI,CAAC,KAAI,CAAC,SAAS,EAAE,IAAI,KAAI,CAAC,cAAc,CAAC,0BAA0B,EAAE,EAAE;oBAEvE,6DAA6D;oBAC7D,IAAI,SAAS,IAAI,OAAO,IAAI,SAAS,IAAI,SAAS;wBAAE,OAAO;oBAE3D,KAAI,CAAC,cAAc,CAAQ,SAAS,EAAE,aAAa,EAAE,WAAW,EAAE,WAAW,EAAE,aAAa,EAAE,SAAS,CAAC,CAAC;iBAC5G;YACL,CAAC,CAAC;YAGF;;;cAGE;YACK,WAAM,GAAG,UAAC,QAA8B;gBAC3C,IAAI,OAAM,CAAC,QAAQ,CAAC,IAAI,UAAU,IAAI,CAAC,KAAI,CAAC,aAAa,CAAC,MAAM,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,IAAI,QAAQ,EAAb,CAAa,CAAC,CAAC,MAAM,EAAE;oBACzF,KAAI,CAAC,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;oBAClC,OAAO,IAAI,CAAC;iBACf;gBACD,OAAO,KAAK,CAAC;YACjB,CAAC,CAAC;YAEF,kEAAkE;YAC3D,aAAQ,GAAG;gBACd,IAAI,CAAC,KAAI,CAAC,SAAS,EAAE,EAAE;oBACnB,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;oBACnB,IAAI,KAAI,CAAC,cAAc,CAAC,eAAe,EAAE,EAAE;wBACvC,eAAe;wBACf,IAAI,KAAI,CAAC,WAAW;4BAAE,YAAY,CAAC,KAAI,CAAC,WAAW,CAAC,CAAC;wBACrD,KAAI,CAAC,WAAW,GAAG,UAAU,CAAC;4BAC1B,KAAI,CAAC,WAAW,GAAG,CAAC,CAAC;4BACrB,yCAAyC;4BACzC,IAAI,KAAI,CAAC,QAAQ,EAAE,EAAE;gCACjB,KAAI,CAAC,QAAQ,EAAE,CAAC;6BACnB;iCAAM,IAAI,KAAI,CAAC,cAAc,CAAC,eAAe,EAAE,EAAE;gCAC9C,KAAI,CAAC,IAAI,EAAE,CAAC;6BACf;wBACL,CAAC,EAAE,KAAI,CAAC,cAAc,CAAC,aAAa,EAAE,CAAC,CAAC;qBAC3C;iBACJ;YACL,CAAC,CAAA;YAED;;cAEE;YACK,eAAU,GAAG,UAAC,QAAc;gBAC/B,2BAA2B;gBAC3B,CAAC,CAAC,eAAe,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;gBACjC,wBAAwB;gBACxB,KAAI,CAAC,cAAc,CAAC,WAAW,EAAE,CAAC,KAAI,CAAC,CAAC;gBACxC,OAAO,CAAC,CAAC,IAAI,CAAC;oBACV,MAAM,EAAE,KAAK;oBACb,GAAG,EAAE,KAAI,CAAC,cAAc,CAAC,WAAW,EAAE,GAAG,KAAI,CAAC,cAAc,GAAG,aAAa;oBAC5E,IAAI,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE;oBACtB,SAAS,EAAE,EAAE,eAAe,EAAE,IAAI,EAAE;iBACvC,CAAC;qBACG,IAAI,CAAC,UAAC,IAAI;oBACP,aAAa;oBACb,QAAQ,CAAC,YAAY,CAAC,UAAU,CAAC,OAAO,GAAG,KAAI,CAAC,gBAAgB,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;oBACrF,YAAY;oBACZ,IAAI,SAAS,GAAG,KAAI,CAAC,cAAc,CAAC,eAAe,CAAC,GAAG,EAAE,CAAC;oBAC1D,KAAI,CAAC,cAAc,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;oBAC3C,EAAE,CAAC,aAAa,CAAC,KAAI,EAAE,QAAQ,CAAC,cAAc,CAAC,cAAc,CAAC,CAAC,CAAC;oBAChE,KAAI,CAAC,cAAc,CAAC,eAAe,CAAC,SAAS,CAAC,CAAC;oBAC/C,kBAAkB;oBAClB,CAAC,CAAC,eAAe,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;oBACjC,0CAA0C;oBAC1C,CAAC,CAAC,eAAe,CAAC,CAAC,EAAE,CAAC,iBAAiB,EAAE;wBACrC,IAAI,OAAM,CAAC,QAAQ,CAAC,IAAI,UAAU;4BAAE,QAAQ,CAAC,KAAI,CAAC,CAAC;oBACvD,CAAC,CAAC,CAAC;gBACP,CAAC,CAAC;qBACD,MAAM,CAAC;oBACJ,KAAI,CAAC,cAAc,CAAC,YAAY,EAAE,CAAC,KAAI,CAAC,CAAC;gBAC7C,CAAC,CAAC,CAAC;YACX,CAAC,CAAA;YAyBG,IAAI,CAAC,MAAM,GAAG,MAAM,IAAI,IAAI,CAAC;YAE7B,+CAA+C;YAC/C,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,UAAC,QAAiB;gBACtC,IAAI,KAAI,CAAC,MAAM,YAAY,aAAa,EAAE;oBACtC,KAAI,CAAC,MAAM,CAAC,mBAAmB,CAAC,QAAQ,CAAC,CAAC;iBAC7C;YACL,CAAC,CAAC,CAAA;QACN,CAAC;QAlcD,sBAAI,6CAAkB;YAJtB;;;cAGE;iBACF,cAA2B,OAAO,IAAI,CAAC,cAAc,CAAC,kBAAkB,EAAE,CAAA,CAAC,CAAC;iBAC5E,UAAuB,KAAK,IAAI,IAAI,CAAC,cAAc,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAA,CAAC,CAAC;;;WADH;QAO5E,sBAAI,4CAAiB;YAJrB;;;cAGE;iBACF,cAA0B,OAAO,IAAI,CAAC,cAAc,CAAC,iBAAiB,EAAE,CAAA,CAAC,CAAC;iBAC1E,UAAsB,KAAK,IAAI,IAAI,CAAC,cAAc,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAA,CAAC,CAAC;;;WADH;QAsB1E,sBAAI,gDAAqB;YAJzB;;;cAGE;iBACF,cAA8B,OAAO,IAAI,CAAC,cAAc,CAAC,eAAe,EAAE,CAAA,CAAC,CAAC;iBAC5E,UAA0B,KAAK,IAAI,IAAI,CAAC,cAAc,CAAC,eAAe,CAAC,KAAK,CAAC,CAAA,CAAC,CAAC;;;WADH;QAsY5E;;;UAGE;QACQ,sCAAc,GAAxB;YAEI,IAAI,UAAU,GAAG,IAAI,CAAC,cAAc,CAAC,iBAAiB,CAAC,IAAI,EAAE,CAAC;YAC9D,IAAI,UAAU,KAAK,IAAI,EAAE;gBACrB,IAAI,CAAC,UAAU,GAAG,IAAI,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAA;aACnD;iBAAM;gBACH,IAAI,UAAU,YAAY,QAAQ,CAAC,UAAU,EAAE;oBAC3C,IAAI,CAAC,UAAU,GAAG,UAAU,CAAA;iBAC/B;qBAAM;oBACH,IAAI,CAAC,UAAU,GAAG,IAAI,UAAU,EAAE,CAAC;iBACtC;aACJ;YAED,IAAI,IAAI,CAAC,cAAc,CAAC,4BAA4B,CAAC,IAAI,EAAE,EAAE;gBACzD,IAAI,CAAC,eAAe,EAAE,CAAC;aAC1B;QACL,CAAC;QAYL,oBAAC;IAAD,CAjfA,AAifC,IAAA;IAjfqB,sBAAa,gBAiflC,CAAA;IAED;QAgTI;YAAA,iBAeC;YAnSD;;cAEE;YACK,gBAAW,GAAW,EAAE,CAAC;YAEhC;;cAEE;YACK,WAAM,GAAQ,IAAI,CAAC;YAE1B,8EAA8E;YACvE,aAAQ,GAAW,EAAE,CAAC;YAS7B,qEAAqE;YAC9D,UAAK,GAAmC,EAAE,CAAC,eAAe,CAAC,EAAE,CAAC,CAAC;YAEtE;;;cAGE;YACK,SAAI,GAAG,UAAC,QAAc;gBACzB,KAAI,CAAC,cAAc,CAAC,WAAW,EAAE,CAAC,KAAI,CAAC,CAAC;gBACxC,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;gBAErB,IAAI,GAAG,GAAG,KAAI,CAAC,cAAc,CAAC,UAAU,EAAE,GAAG,KAAI,CAAC,aAAa,GAAG,QAAQ,GAAG,KAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;gBAEtG,OAAO,CAAC,CAAC,IAAI,CAAC;oBACV,MAAM,EAAE,KAAK;oBACb,GAAG,EAAE,GAAG;oBACR,SAAS,EAAE,EAAE,eAAe,EAAE,IAAI,EAAE;iBACvC,CAAC;qBACG,IAAI,CAAC,UAAC,IAAgB;oBACnB,IAAM,IAAI,GAAG,IAAI,CAAC,IAAI,IAAI,EAAE,CAAC;oBAE7B,QAAQ,CAAC,iBAAiB,CAAC,YAAY,CAAC,KAAI,CAAC,KAAK,EAAE,IAAI,EAAE,KAAI,CAAC,YAAY,EAAE,KAAI,CAAC,SAAS,EAAE,KAAI,EAAE,IAAI,CAAC,CAAC;oBACzG,CAAC,CAAC,IAAI,CAAC,KAAI,CAAC,KAAK,EAAE,EAAE,UAAC,CAAC,EAAE,KAAK;wBAC1B,KAAK,CAAC,QAAQ,GAAG,KAAI,CAAC,QAAQ,CAAC;oBACnC,CAAC,CAAC,CAAC;oBACH,KAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;oBACxB,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;oBACjC,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;oBAC/B,KAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;oBACrB,KAAI,CAAC,OAAO,CAAC,OAAM,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;oBACrE,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;oBACpB,IAAI,OAAM,CAAC,QAAQ,CAAC,IAAI,UAAU;wBAAE,QAAQ,CAAC,KAAI,CAAC,CAAC;gBACvD,CAAC,CAAC;qBACD,IAAI,CAAC,UAAC,GAAG;oBACN,IAAI,QAAQ,GAAG,eAAe,CAAC;oBAC/B,IAAI,GAAG,CAAC,YAAY,IAAI,GAAG,CAAC,YAAY,CAAC,OAAO;wBAAE,QAAQ,GAAG,GAAG,CAAC,YAAY,CAAC,OAAO,CAAC;oBACtF,KAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;oBACvB,KAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;oBAErB,IAAI,KAAI,CAAC,cAAc,CAAC,iBAAiB,EAAE;wBACvC,KAAI,CAAC,cAAc,CAAC,SAAS,EAAE,CAAC,KAAI,EAAE,wBAAwB,GAAG,KAAI,CAAC,SAAS,GAAG,UAAU,GAAG,QAAQ,CAAC,CAAC;gBACjH,CAAC,CAAC;qBACD,MAAM,CAAC;oBACJ,KAAI,CAAC,cAAc,CAAC,YAAY,EAAE,CAAC,KAAI,CAAC,CAAC;oBACzC,KAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;gBAC1B,CAAC,CAAC,CAAC;YACX,CAAC,CAAC;YAGF,wHAAwH;YACjH,gBAAW,GAAG,UAAC,IAAsC,EAAE,QAAiB;gBAC3E,IAAI,KAAK,GAAG,KAAI,CAAC,UAAU,CAAC,cAAc,EAAE,CAAC;gBAE7C,IAAM,KAAK,GAAG,UAAC,IAAY,EAAE,KAAU;oBACnC,IAAI,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,SAAS,IAAI,KAAK,KAAK,EAAE,EAAE;wBACvD,OAAO;qBACV;oBACD,KAAK,IAAI,MAAI,IAAI,SAAI,kBAAkB,CAAC,KAAK,CAAG,CAAC;gBACrD,CAAC,CAAC;gBAEF,KAAK,CAAC,UAAU,EAAE,KAAI,CAAC,QAAQ,CAAC,CAAC;gBAEjC,IAAI,IAAI,IAAI,YAAY;oBAAE,OAAO,KAAK,CAAC;gBAEvC,IAAI,KAAI,CAAC,WAAW;oBAAE,KAAK,IAAI,GAAG,GAAG,KAAI,CAAC,WAAW,CAAC;gBAEtD,KAAK,CAAC,QAAQ,EAAE,KAAI,CAAC,MAAM,EAAE,CAAC,CAAC;gBAE/B,IAAI,KAAI,CAAC,MAAM,EAAE;oBACb,KAAK,IAAI,GAAG,IAAI,KAAI,CAAC,MAAM,EAAE;wBACzB,KAAK,CAAC,YAAU,GAAK,EAAE,KAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC;qBAC5C;iBACJ;gBAED,IAAI,IAAI,IAAI,QAAQ;oBAAE,OAAO,KAAK,CAAC;gBAEnC,IAAI,IAAI,IAAI,MAAM;oBAAE,MAAM,iBAAiB,GAAG,IAAI,CAAC;gBAEnD,KAAK,CAAC,MAAM,EAAE,KAAI,CAAC,IAAI,EAAE,CAAC,CAAC;gBAC3B,KAAK,CAAC,UAAU,EAAE,QAAQ,IAAI,KAAI,CAAC,QAAQ,EAAE,CAAC,CAAC;gBAC/C,KAAK,CAAC,SAAS,EAAE,KAAI,CAAC,OAAO,EAAE,CAAC,CAAC;gBACjC,KAAK,CAAC,mBAAmB,EAAE,KAAI,CAAC,iBAAiB,EAAE,CAAC,CAAC;gBAErD,OAAO,KAAK,CAAC;YACjB,CAAC,CAAC;YAKF,yCAAyC;YAClC,eAAU,GAAG;gBAChB,IAAI,IAAI,GAAG,KAAI,CAAC,UAAU,EAAE,CAAC;gBAC7B,KAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBACtB,OAAO,IAAI,CAAC;YAChB,CAAC,CAAC;YAEF,uBAAuB;YAChB,eAAU,GAAG,UAAC,IAAW;gBAC5B,OAAO,IAAI,CAAC,UAAU,EAAE,CAAC;YAC7B,CAAC,CAAC;YAEF,mCAAmC;YAC5B,cAAS,GAAgC,EAAE,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;YAErE,0CAA0C;YACnC,aAAQ,GAAgC,EAAE,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;YAEpE,uGAAuG;YAChG,aAAQ,GAAG,UAAC,QAAc;gBAC7B,KAAI,CAAC,cAAc,CAAC,WAAW,EAAE,CAAC,KAAI,CAAC,CAAC;gBACxC,OAAO,CAAC,CAAC,IAAI,CAAC;oBACV,MAAM,EAAE,KAAK;oBACb,GAAG,EAAE,KAAI,CAAC,cAAc,CAAC,UAAU,EAAE,GAAG,KAAI,CAAC,aAAa,GAAG,SAAS,GAAG,KAAI,CAAC,WAAW,CAAC,QAAQ,CAAC;oBACnG,SAAS,EAAE,EAAE,eAAe,EAAE,IAAI,EAAE;iBACvC,CAAC;qBACG,IAAI,CAAC,UAAC,IAAwB;oBAC3B,KAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,IAAI,CAAC,CAAC,CAAC;oBAC7B,KAAI,CAAC,OAAO,CAAC,OAAM,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;oBACrE,IAAI,OAAM,CAAC,QAAQ,CAAC,IAAI,UAAU;wBAAE,QAAQ,EAAE,CAAC;gBACnD,CAAC,CAAC;qBACD,IAAI,CAAC,UAAC,GAAG;oBACN,IAAI,QAAQ,GAAG,eAAe,CAAC;oBAC/B,IAAI,MAAM,GAAuB,GAAG,CAAC,YAAY,CAAC;oBAClD,IAAI,MAAM,IAAI,MAAM,CAAC,OAAO;wBAAE,QAAQ,GAAG,MAAM,CAAC,OAAO,CAAC;oBACxD,KAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;oBACvB,IAAI,KAAI,CAAC,cAAc,CAAC,iBAAiB,EAAE;wBACvC,KAAI,CAAC,cAAc,CAAC,SAAS,EAAE,CAAC,KAAI,EAAE,yBAAyB,GAAG,KAAI,CAAC,SAAS,GAAG,UAAU,GAAG,QAAQ,CAAC,CAAC;gBAClH,CAAC,CAAC;qBACD,MAAM,CAAC;oBACJ,KAAI,CAAC,cAAc,CAAC,YAAY,EAAE,CAAC,KAAI,CAAC,CAAC;gBAC7C,CAAC,CAAC,CAAC;YACX,CAAC,CAAC;YAEF,0DAA0D;YACnD,UAAK,GAAsC,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;YACtE,gEAAgE;YACzD,eAAU,GAAsC,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;YAC3E,uBAAuB;YAChB,cAAS,GAAsC,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;YAC1E,sDAAsD;YAC/C,SAAI,GAA+B,EAAE,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;YAC3D,iCAAiC;YAC1B,aAAQ,GAA+B,EAAE,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;YAChE,+DAA+D;YACxD,YAAO,GAAsC,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;YACxE,qFAAqF;YAC9E,WAAM,GAA+B,EAAE,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;YAE9D,4DAA4D;YACrD,oBAAe,GAA8B,EAAE,CAAC,QAAQ,CAAC,cAAM,OAAA,KAAI,CAAC,IAAI,EAAE,GAAG,CAAC,KAAI,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC,EAArC,CAAqC,CAAC,CAAC;YAE7G,6DAA6D;YACtD,wBAAmB,GAA8B,EAAE,CAAC,QAAQ,CAAC,cAAM,OAAA,KAAI,CAAC,IAAI,EAAE,GAAG,CAAC,EAAf,CAAe,CAAC,CAAC;YAE3F,8BAA8B;YACvB,aAAQ,GAAG;gBACd,IAAI,KAAI,CAAC,eAAe,EAAE,EAAE;oBACxB,KAAI,CAAC,IAAI,CAAC,KAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC;iBAC9B;YACL,CAAC,CAAC;YAEF,kCAAkC;YAC3B,iBAAY,GAAG;gBAClB,IAAI,KAAI,CAAC,mBAAmB,EAAE,EAAE;oBAC5B,KAAI,CAAC,IAAI,CAAC,KAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC;iBAC9B;YACL,CAAC,CAAC;YAGF,2EAA2E;YACpE,YAAO,GAA+B,EAAE,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;YAE/D,4EAA4E;YACrE,sBAAiB,GAA+B,EAAE,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;YAEzE,0FAA0F;YACnF,kBAAa,GAAG,UAAC,KAAa;gBACjC,IAAI,KAAI,CAAC,OAAO,EAAE,IAAI,KAAK,IAAI,CAAC,KAAI,CAAC,iBAAiB,EAAE,EAAE;oBACtD,KAAI,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;oBACjB,KAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC;iBACjC;qBAAM,IAAI,CAAC,KAAI,CAAC,OAAO,EAAE,IAAI,KAAI,CAAC,iBAAiB,EAAE,IAAI,KAAK,EAAE;oBAC7D,KAAI,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;oBACjB,KAAI,CAAC,iBAAiB,CAAC,EAAE,CAAC,CAAC;iBAC9B;qBAAM;oBACH,KAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;oBACpB,KAAI,CAAC,iBAAiB,CAAC,EAAE,CAAC,CAAC;iBAC9B;YACL,CAAC,CAAC;YAEF,yEAAyE;YAClE,sBAAiB,GAA6B,EAAE,CAAC,QAAQ,CAAS;gBACrE,IAAI,GAAG,GAAG,KAAI,CAAC,cAAc,CAAC,UAAU,EAAE,GAAG,KAAI,CAAC,aAAa,GAAG,eAAe,GAAG,KAAI,CAAC,WAAW,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;gBACpH,OAAO,GAAG,CAAC;YACf,CAAC,EAAE,IAAI,EAAE,EAAE,eAAe,EAAE,IAAI,EAAE,CAAC,CAAC;YAEpC,yDAAyD;YAClD,gBAAW,GAAG,UAAC,QAAqB;gBACvC,gCAAgC;gBAChC,CAAC,CAAC,aAAa,CAAC,CAAC,MAAM,EAAE,CAAC;gBAC1B,6CAA6C;gBAC7C,CAAC,CAAC,MAAM,CAAC;qBACJ,MAAM,CAAC,8CAA8C,CAAC,CAAC;gBAC5D,CAAC,CAAC,aAAa,CAAC;qBACX,IAAI,CAAC,QAAQ,EAAE,KAAI,CAAC,cAAc,CAAC,UAAU,EAAE,GAAG,KAAI,CAAC,aAAa,GAAG,YAAY,CAAC,CAAC,IAAI,CAAC,QAAQ,EAAE,MAAM,CAAC;qBAC3G,MAAM,CAAC,8DAA8D,CAAC,CAAC;gBAE5E,6BAA6B;gBAC7B,CAAC,CAAC,8BAA8B,CAAC,CAAC,MAAM,CAAC;oBACrC,gBAAgB;oBAChB,IAAI,SAAS,GAAG,CAAC,CAAC,8BAA8B,CAAC,CAAC,CAAC,CAAQ,CAAC;oBAC5D,IAAI,IAAI,GAAG,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;oBAC9B,IAAI,IAAI,EAAE;wBACN,IAAI,QAAQ,GAAG,IAAI,QAAQ,EAAE,CAAC;wBAC9B,QAAQ,CAAC,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;wBAC9B,KAAI,CAAC,cAAc,CAAC,WAAW,EAAE,CAAC,KAAI,CAAC,CAAC;wBACxC,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;wBACrB,CAAC,CAAC,IAAI,CAAC;4BACH,GAAG,EAAE,KAAI,CAAC,cAAc,CAAC,UAAU,EAAE,GAAG,KAAI,CAAC,aAAa,GAAG,YAAY;4BACzE,IAAI,EAAE,QAAQ;4BACd,WAAW,EAAE,KAAK;4BAClB,WAAW,EAAE,KAAK;4BAClB,IAAI,EAAE,MAAM;yBACR,CAAC;6BACJ,IAAI,CAAC,UAAC,IAAI;4BACP,KAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;4BACtB,IAAI,OAAM,CAAC,QAAQ,CAAC,IAAI,UAAU;gCAAE,QAAQ,EAAE,CAAC;wBACnD,CAAC,CAAC;6BACD,IAAI,CAAC,UAAC,IAAI;4BACP,IAAI,KAAI,CAAC,cAAc,CAAC,iBAAiB,EAAE;gCACvC,KAAI,CAAC,cAAc,CAAC,SAAS,EAAE,CAAC,KAAI,EAAE,mBAAmB,CAAC,CAAC;wBACnE,CAAC,CAAC;6BACD,MAAM,CAAC;4BACJ,KAAI,CAAC,IAAI,EAAE,CAAC;4BACZ,KAAI,CAAC,cAAc,CAAC,YAAY,EAAE,CAAC,KAAI,CAAC,CAAC;wBAC7C,CAAC,CAAC,CAAC;qBACV;oBACD,kBAAkB;oBAClB,CAAC,CAAC,aAAa,CAAC,CAAC,MAAM,EAAE,CAAC;gBAC9B,CAAC,CAAC,CAAC;gBACH,yBAAyB;gBACzB,CAAC,CAAC,8BAA8B,CAAC,CAAC,KAAK,EAAE,CAAC;YAC9C,CAAC,CAAC;YAEM,gBAAW,GAAW,CAAC,CAAC;YAEhC,iGAAiG;YAC1F,gBAAW,GAAG,UAAC,YAAqB;gBACvC,IAAI,KAAI,CAAC,WAAW,EAAE;oBAClB,YAAY,CAAC,KAAI,CAAC,WAAW,CAAC,CAAC;iBAClC;gBACD,KAAI,CAAC,WAAW,GAAG,UAAU,CAAC;oBAC1B,KAAI,CAAC,WAAW,GAAG,CAAC,CAAC;oBACrB,KAAI,CAAC,IAAI,EAAE,CAAC;gBAChB,CAAC,EAAE,YAAY,IAAI,GAAG,CAAC,CAAC;YAC5B,CAAC,CAAA;YAGG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC;gBACpB,IAAI,KAAI,CAAC,QAAQ,EAAE,EAAE;oBACjB,KAAI,CAAC,IAAI,EAAE,CAAC;iBACf;YACL,CAAC,CAAC,CAAC;YACH,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC;gBAChB,qFAAqF;gBACrF,IAAI,KAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,KAAI,CAAC,SAAS,EAAE,EAAE;oBACtC,KAAI,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;iBACzB;YACL,CAAC,CAAC,CAAC;YACH,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,cAAQ,IAAI,KAAI,CAAC,QAAQ,EAAE;gBAAE,KAAI,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAC7E,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,cAAQ,IAAI,KAAI,CAAC,QAAQ,EAAE;gBAAE,KAAI,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;YAC3E,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC,cAAQ,IAAI,KAAI,CAAC,QAAQ,EAAE;gBAAE,KAAI,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;QACzF,CAAC;QAlRD,sBAAI,gDAAiB;YAJrB;;;cAGE;iBACF,cAA0B,OAAO,IAAI,CAAC,cAAc,CAAC,iBAAiB,EAAE,CAAA,CAAC,CAAC;iBAC1E,UAAsB,KAAK,IAAI,IAAI,CAAC,cAAc,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAA,CAAC,CAAC;;;WADH;QAmR9E,wBAAC;IAAD,CAhUA,AAgUC,IAAA;IAhUqB,0BAAiB,oBAgUtC,CAAA;AACL,CAAC,EA3oCM,QAAQ,KAAR,QAAQ,QA2oCd;AC9oCD,sDAAsD;AAEtD,IAAO,QAAQ,CAkLd;AApLD,sDAAsD;AAEtD,WAAO,QAAQ;IACX,IAAc,iBAAiB,CAgL9B;IAhLD,WAAc,iBAAiB;QAE3B,qBAAwB,KAAU,EAAE,OAAe;YAC/C,IAAM,MAAM,GAAwB,EAAE,CAAC;YACvC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACnC,IAAM,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;gBACtB,IAAM,GAAG,GAAG,EAAE,CAAC,MAAM,CAAE,IAAY,CAAC,OAAO,CAAC,CAAC,CAAC;gBAE9C,gEAAgE;gBAChE,8EAA8E;gBAC9E,IAAI,GAAG,IAAI,IAAI;oBAAE,MAAM,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,GAAG,IAAI,CAAC;aAClD;YACD,OAAO,MAAM,CAAC;QAClB,CAAC;QAED,yBACI,eAAoB,EACpB,YAAe,EACf,iBAAyB,EACzB,cAAiD,EACjD,OAA6B,EAC7B,gBAAgF;YAFhF,+BAAA,EAAA,qBAAiD;YACjD,wBAAA,EAAA,cAA6B;YAC7B,iCAAA,EAAA,uBAAgF;YAEhF,IAAI,YAAsB,CAAC;YAC3B,IAAI,OAAO,EAAE;gBACT,IAAM,KAAG,GAAG,EAAE,CAAC,MAAM,CAAE,YAAoB,CAAC,OAAO,CAAC,CAAC,CAAC;gBACtD,IAAI,cAAc,EAAE;oBAChB,YAAY,GAAG,cAAc,CAAC,KAAG,CAAC,QAAQ,EAAE,CAAC,CAAC;iBACjD;qBAAM;oBACH,IAAI,CAAC,gBAAgB;wBAAE,MAAM,iFAAiF,CAAA;oBAC9G,IAAM,aAAa,GAAG,eAAe,CAAC,MAAM,CAAC,UAAA,IAAI,IAAI,OAAA,gBAAgB,CAAC,IAAI,EAAE,KAAG,CAAC,EAA3B,CAA2B,CAAC,CAAC;oBAElF,IAAI,aAAa,CAAC,MAAM,GAAG,CAAC,EAAE;wBAC1B,iDAAiD;wBACjD,MAAM,wCAAsC,OAAO,6BAA0B,CAAA;qBAChF;yBAAM;wBACH,YAAY,GAAG,aAAa,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;qBACrE;iBACJ;aACJ;iBAAM;gBACH,YAAY,GAAG,eAAe,CAAC,iBAAiB,CAAC,CAAC;aACrD;YAED,OAAO,YAAY,CAAC;QACxB,CAAC;QAED,6DAA6D;QAC7D,sBACI,aAAyC,EACzC,aAAkB,EAClB,OAAe,EACf,cAA2B,EAC3B,MAAW,EACX,sBAAsC,EACtC,gBAAgF;YADhF,uCAAA,EAAA,6BAAsC;YACtC,iCAAA,EAAA,uBAAgF;YAGhF,IAAI,eAAe,GAAG,aAAa,EAAE,IAAI,EAAE,CAAC;YAE5C,iDAAiD;YACjD,2EAA2E;YAC3E,uFAAuF;YACvF,uEAAuE;YACvE,6FAA6F;YAC7F,qEAAqE;YAErE,mFAAmF;YACnF,+EAA+E;YAC/E,+EAA+E;YAC/E,qHAAqH;YACrH,oHAAoH;YACpH,sIAAsI;YACtI,IAAI,UAAU,GAAa,EAAE,CAAC;YAE9B,yDAAyD;YACzD,6FAA6F;YAC7F,IAAI,cAAc,GAA+B,IAAI,CAAC;YACtD,IAAI,gBAAgB,IAAI,IAAI,IAAI,OAAO,EAAE;gBACrC,cAAc,GAAG,WAAW,CAAC,eAAe,EAAE,OAAO,CAAC,CAAC;aAC1D;YAED,8FAA8F;YAC9F,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,aAAa,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBAC3C,IAAI,MAAM,GAAG,aAAa,CAAC,CAAC,CAAC,CAAC;gBAC9B,IAAI,YAAY,GAAG,eAAe,CAAC,eAAe,EAAE,MAAM,EAAE,CAAC,EAAE,cAAc,EAAE,OAAO,EAAE,gBAAgB,CAAC,CAAC;gBAE1G,IAAI,YAAY,IAAI,IAAI,EAAE;oBACtB,qEAAqE;oBACrE,kEAAkE;oBAClE,IAAI,OAAO,GAAG,IAAI,cAAc,EAAE,CAAC;oBACnC,OAAO,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;oBAC5B,OAAO,CAAC,MAAM,GAAG,MAAM,CAAC;oBACxB,OAAO,CAAC,gBAAgB,GAAG,aAAa,CAAC;oBACzC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;iBAC5B;qBAAM;oBACH,2CAA2C;oBAC3C,iFAAiF;oBACjF,UAAU,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;oBAE9B,uFAAuF;oBACvF,0DAA0D;oBAE1D,IAAI,CAAC,CAAC,YAAY,YAAY,SAAA,aAAa,CAAC,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE,EAAE;wBACrE,YAAY,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;qBACpC;oBAED,IAAI,CAAC,sBAAsB,EAAE;wBACzB,oHAAoH;wBACpH,yGAAyG;wBACzG,iFAAiF;wBACjF,iHAAiH;wBACjH,eAAe,CAAC,MAAM,CAAC,eAAe,CAAC,OAAO,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC,CAAC;qBACpE;iBACJ;aACJ;YAED,kCAAkC;YAClC,IAAI,CAAC,sBAAsB,EAAE;gBACzB,uFAAuF;gBACvF,yGAAyG;gBAEzG,8DAA8D;gBAC9D,+FAA+F;gBAC/F,kEAAkE;gBAClE,UAAU,CAAC,OAAO,OAAlB,UAAU,EAAY,eAAe,EAAE;aAC1C;YAED,IAAI,UAAU,CAAC,MAAM,IAAI,eAAe,CAAC,MAAM;gBAC3C,EAAE,CAAC,KAAK,CAAC,aAAa,CAAC,UAAU,EAAE,eAAe,CAAC,CAAC,KAAK,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,MAAM,IAAI,UAAU,EAAtB,CAAsB,CAAC,EAAE;gBACxF,8GAA8G;gBAC9G,8FAA8F;gBAE9F,cAAc;aACjB;iBAAM;gBACH,iDAAiD;gBACjD,+EAA+E;gBAC/E,yGAAyG;gBACzG,aAAa,CAAC,UAAU,CAAC,CAAC;aAC7B;QACL,CAAC;QA5Fe,8BAAY,eA4F3B,CAAA;QAGD,6BACI,aAAyC,EACzC,aAA+C,EAC/C,OAAgB,EAChB,gBAAgF;YAAhF,iCAAA,EAAA,uBAAgF;YAEhF,IAAI,sBAAsB,GAAG,EAAE,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;YACtD,IAAI,eAAe,GAAG,aAAa,EAAE,CAAC,KAAK,EAAE,CAAC;YAE9C,yDAAyD;YACzD,6FAA6F;YAC7F,IAAI,cAAc,GAA+B,IAAI,CAAC;YACtD,IAAI,gBAAgB,IAAI,IAAI,IAAI,OAAO,EAAE;gBACrC,cAAc,GAAG,WAAW,CAAC,eAAe,EAAE,OAAO,CAAC,CAAC;aAC1D;YAED,KAAK,IAAI,GAAC,GAAG,CAAC,EAAE,GAAC,GAAG,sBAAsB,CAAC,MAAM,EAAE,GAAC,EAAE,EAAE;gBACpD,IAAI,MAAM,GAAG,sBAAsB,CAAC,GAAC,CAAC,CAAC;gBACvC,IAAI,YAAY,GAAG,eAAe,CAAC,eAAe,EAAE,MAAM,EAAE,GAAC,EAAE,cAAc,EAAE,OAAO,EAAE,gBAAgB,CAAC,CAAC;gBAE1G,IAAI,YAAY,IAAI,IAAI,EAAE;oBACtB,wCAAwC;oBACxC,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;iBAC9B;qBAAM;oBACH,6DAA6D;oBAC7D,eAAe,CAAC,MAAM,CAAC,eAAe,CAAC,OAAO,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC,CAAC;iBACpE;aACJ;YAED,8DAA8D;YAC9D,KAAK,IAAI,CAAC,IAAI,eAAe,EAAE;gBAC3B,aAAa,CAAC,MAAM,CAAC,aAAa,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;aACtE;QACL,CAAC;QAjCe,qCAAmB,sBAiClC,CAAA;IACL,CAAC,EAhLa,iBAAiB,GAAjB,0BAAiB,KAAjB,0BAAiB,QAgL9B;AACL,CAAC,EAlLM,QAAQ,KAAR,QAAQ,QAkLd;ACpLD,sDAAsD;AAoBtD,0EAA0E;AAC1E,EAAE,CAAC,eAAe,CAAC,WAAW,GAAG;IAC7B,IAAI,EAAE,UAAU,OAAO,EAAE,aAAa,EAAE,WAAW,EAAE,SAAS,EAAE,cAAc;QAC1E,IAAM,GAAG,GAAG,WAAW,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACnC,IAAM,SAAS,GAAG,QAAQ,CAAC,SAAS,CAAC,gBAAgB,CAAC,WAAW,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,CAAC;QACpF,IAAM,OAAO,GAAG,QAAQ,CAAC,SAAS,CAAC,gBAAgB,CAAC,WAAW,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC;QAEhF,IAAM,eAAe,GAAG,WAAW,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;QACxG,IAAM,MAAM,GAAG,WAAW,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;QAC7E,IAAM,SAAS,GAAG,WAAW,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;QACtF,IAAM,aAAa,GAAoD,WAAW,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;QACxG,IAAM,MAAM,GAA+C,WAAW,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;QACxH,IAAM,aAAa,GAAG,WAAW,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;QAClG,IAAM,WAAW,GAAG,WAAW,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,2CAA2C;QACxI,IAAM,UAAU,GAAG,WAAW,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;QACxF,IAAM,WAAW,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,QAAQ,CAAC;QAC/D,IAAM,QAAQ,GAAG,WAAW,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;QAEnD,IAAI,CAAC,GAAG;YAAE,MAAM,+CAA+C,CAAC;QAChE,IAAI,CAAC,SAAS;YAAE,MAAM,qDAAqD,CAAC;QAC5E,IAAI,CAAC,OAAO;YAAE,MAAM,mDAAmD,CAAC;QACxE,IAAI,SAAS,IAAI,CAAC,aAAa;YAC3B,MAAM,2EAA2E;kBAC/E,4FAA4F,CAAC;QAQnG,qBAAqB;QACrB,CAAC,CAAC,OAAO,CAAC;aACL,OAAO,CAAiB;YACrB,KAAK,EAAE,QAAQ,CAAC,mBAAmB,CAAC,GAAG,CAAC,YAAY,EAAE,IAAI,SAAS;YACnE,IAAI,EAAE;gBACF,GAAG,EAAE,GAAG;gBACR,QAAQ,EAAE,MAAM;gBAChB,KAAK,EAAE,GAAG;gBACV,IAAI,EAAE,UAAU,MAAW;oBACvB,IAAI,IAAI,GAAQ;wBACZ,MAAM,EAAE,MAAM,CAAC,IAAI;wBACnB,IAAI,EAAE,MAAM,CAAC,IAAI;wBACjB,QAAQ,EAAE,QAAQ;qBACrB,CAAC;oBAEF,IAAI,CAAC,SAAS,EAAE;wBACZ,2FAA2F;wBAC3F,kFAAkF;wBAClF,yHAAyH;wBAEzH,kGAAkG;wBAClG,gGAAgG;wBAChG,IAAI,CAAC,MAAM,GAAG,OAAO,GAAG,GAAG,GAAG,SAAS,CAAC;qBAC3C;oBAAA,CAAC;oBAEF,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,WAAW,CAAC,GAAG,CAAC,OAAO,CAAC;wBACrD,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,CAAC;oBACrC,OAAO,IAAI,CAAC;gBAChB,CAAC;gBACD,cAAc,EAAE,UAAU,IAAS,EAAE,MAAW;oBAE5C,oFAAoF;oBACpF,oGAAoG;oBACpG,IAAI,OAAO,GAAI,IAAI,CAAC,IAAc,CAAC,GAAG,CAAC,UAAA,IAAI;wBACvC,OAAO;4BACH,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC;4BACjB,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC,QAAQ,EAAE;4BACnD,UAAU,EAAE,IAAI;yBACL,CAAC;oBACpB,CAAC,CAAC,CAAC;oBAGH,sFAAsF;oBACtF,kFAAkF;oBAClF,oEAAoE;oBAEpE,uCAAuC;oBACvC,yBAAyB;oBACzB,mBAAmB;oBACnB,0FAA0F;oBAC1F,+BAA+B;oBAC/B,QAAQ;oBACR,6BAA6B;oBAC7B,GAAG;oBAEH,OAAO;wBACH,OAAO,EAAE,OAAO;wBAChB,UAAU,EAAE;4BACR,IAAI,EAAE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,SAAS;yBACnC;qBACJ,CAAC;gBACN,CAAC;gBACD,KAAK,EAAE,CAAC,WAAW,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,QAAQ,EAAE;aAClF;YACD,WAAW,EAAE,WAAW;YACxB,UAAU,EAAE,UAAU;YACtB,aAAa,EAAE,aAAa;YAC5B,cAAc,EAAE,UAAU,IAAS;gBAC/B,OAAO,MAAM,CAAC,OAAO,CAAC,KAAK,EACvB,OAAO,IAAI,CAAC,IAAI,IAAI,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;oBACtC,OAAO,IAAI,IAAI,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAC1C,CAAC;YACN,CAAC;YACD,iBAAiB,EAAE,UAAU,IAAS;gBAClC,OAAO,MAAM,CAAC,OAAO,CAAC,KAAK,EACvB,OAAO,IAAI,CAAC,IAAI,IAAI,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;oBACtC,OAAO,IAAI,IAAI,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAC1C,CAAC;YACN,CAAC;SACJ,CAAC;aACD,EAAE,CAAC,QAAQ,EAAE,UAAU,CAAC;YACrB,0BAA0B;YAC1B,IAAI,KAAK,GAAW,CAAC,CAAC,OAAO,CAAC,CAAC,GAAG,EAAY,CAAC;YAE/C,sFAAsF;YACtF,oDAAoD;YACpD,IAAI,aAAa,EAAE,EAAE,IAAI,KAAK,IAAI,CAAC,aAAa,EAAE,EAAE,IAAI,KAAK,CAAC,EAAE;gBAE5D,0EAA0E;gBAC1E,oEAAoE;gBAEpE,IAAI,MAAM,EAAE;oBACR,kDAAkD;oBAClD,IAAI,SAAS,EAAE;wBACX,IAAI,YAAY,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;wBAC9C,IAAI,YAAY,IAAI,YAAY,CAAC,MAAM,GAAG,CAAC,EAAE;4BACzC,IAAI,MAAM,GAAI,YAAY,CAAC,CAAC,CAAgB,CAAC,UAAU,CAAC;4BAExD,IAAI,SAAS,GAAG,MAAM,EAAE,CAAC;4BACzB,IAAI,SAAS,YAAY,aAAa,EAAE;gCACpC,SAAS,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;gCAC9B,IAAI,MAAM,CAAC,eAAe;oCAAE,MAAM,CAAC,eAAe,EAAE,CAAC;6BACxD;iCAAM;gCACH,MAAM,CAAC,IAAI,aAAa,CAAC,MAAM,CAAC,CAAC,CAAC;6BACrC;yBACJ;6BAAM;4BACH,MAAM,CAAC,IAAI,CAAC,CAAC;yBAChB;qBACJ;yBACI;wBACD,4DAA4D;wBAC5D,wDAAwD;wBACxD,MAAM,CAAC,IAAI,CAAC,CAAC;qBAChB;iBACJ;gBAED,cAAc;gBACd,IAAI,KAAK,EAAE;oBACP,aAAa,EAAE,CAAC,KAAK,CAAC,CAAC;iBAC1B;qBAAM;oBACH,aAAa,EAAE,CAAC,IAAI,CAAC,CAAC;iBACzB;aACJ;QACL,CAAC,CAAC,CAAC;QAEP,IAAI,WAAW,EAAE;YACb,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,EAAE,CAAC,OAAO,EAAE;gBAChC,CAAC,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;YAC/B,CAAC,CAAC,CAAC;SACN;QAED,6BAA6B;QAC7B,IAAM,cAAc,GAAG,EAAE,CAAC,eAAe,CAAC,gBAAgB,CAAC,CAAC;QAC5D,IAAI,CAAC,cAAc,CAAC,IAAI;YAAE,MAAM,oCAAoC,CAAA;QACpE,cAAc,CAAC,IAAI,CAAC,OAAO,EAAE,aAAa,EAAE,WAAW,EAAE,SAAS,EAAE,cAAc,CAAC,CAAA;QAEnF,oFAAoF;QACpF,CAAC,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC;IAC9F,CAAC;IACD,MAAM,EAAE,UAAU,OAAO,EAAE,aAAa,EAAE,WAAW,EAAE,SAAS,EAAE,cAAc;QAC5E,6EAA6E;QAC7E,IAAI,WAAW,GAAG,WAAW,CAAC,GAAG,CAAC,aAAa,CAAC,IAAI,KAAK,CAAC;QAC1D,IAAI,KAAK,GAAG,aAAa,EAAE,EAAE,CAAC;QAC9B,IAAI,YAAY,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,CAAC;QACpC,IAAI,SAAS,GAAG,WAAW,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;QACpF,IAAI,SAAS,GAAG,QAAQ,CAAC,SAAS,CAAC,gBAAgB,CAAC,WAAW,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,CAAC;QAClF,IAAI,OAAO,GAAG,QAAQ,CAAC,SAAS,CAAC,gBAAgB,CAAC,WAAW,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC;QAC9E,IAAI,MAAM,GAA4B,WAAW,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAA;QAE/D,+BAA+B;QAC/B,IAAI,MAAqC,CAAC;QAC1C,IAAI,oBAAoB,GAAG,KAAK,CAAC;QAEjC,IAAI,KAAK,EAAE;YACP,IAAI,OAAO,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC,QAAQ,EAAE,CAAC,OAAO,CAAC,IAAI,EAAE,KAAK,CAAC,GAAG,IAAI,CAAC,CAAC;YAC/F,IAAI,OAAO,CAAC,MAAM,GAAG,CAAC;gBAAE,MAAM,GAAG,OAAO,CAAC,CAAC,CAAsB,CAAC;SACpE;aAAM;YACH,IAAI,OAAO,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,gBAAgB,GAAG,KAAK,GAAG,IAAI,CAAC,CAAC;YAC/D,IAAI,OAAO,CAAC,MAAM,GAAG,CAAC;gBAAE,MAAM,GAAG,OAAO,CAAC,CAAC,CAAsB,CAAC;SACpE;QAED,IAAI,CAAC,MAAM,EAAE;YACT,MAAM,GAAG,IAAI,MAAM,EAAE,CAAC;YACtB,MAAM,CAAC,KAAK,GAAG,KAAK,CAAC;YACrB,MAAM,CAAC,QAAQ,GAAG,IAAI,CAAC;YACvB,MAAM,CAAC,eAAe,GAAG,IAAI,CAAC;YAE9B,CAAC,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;YAC1B,oBAAoB,GAAG,IAAI,CAAC;SAC/B;QAGD,IAAI,KAAK,KAAK,IAAI,IAAI,WAAW,EAAE;YAC/B,CAAC,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;SACxC;aAAM;YACH,8BAA8B;YAC9B,IAAI,eAAe,GAAG,EAAE,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;YACxC,IAAI,KAAK,IAAI,eAAe,EAAE;gBAC1B,mFAAmF;gBACnF,IAAI,EAAE,GAAG,EAAE,CAAC,MAAM,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC,CAAC;gBAC7C,IAAI,IAAI,GAAG,EAAE,CAAC,MAAM,CAAC,eAAe,CAAC,SAAS,CAAC,CAAC,CAAC;gBAEjD,uFAAuF;gBACvF,2FAA2F;gBAC3F,2EAA2E;gBAC3E,IAAI,IAAI,IAAI,EAAE,IAAI,EAAE,IAAI,KAAK,EAAE;oBAC3B,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC;oBACnB,oBAAoB,GAAG,IAAI,CAAC;iBAC/B;aACJ;SACJ;QAED,mDAAmD;QACnD,IAAI,oBAAoB,EAAE;YAEtB,sFAAsF;YACtF,mFAAmF;YACnF,kDAAkD;YAClD,IAAI,aAAa,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;YAClD,IAAI,aAAa,IAAI,aAAa,CAAC,EAAE,IAAI,MAAM,CAAC,KAAK,EAAE;gBACnD,aAAa,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC;aACpC;YAED,CAAC,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;SAC3C;IACL,CAAC;CACJ,CAAC;AAEF,oFAAoF;AACpF,EAAE,CAAC,eAAe,CAAC,mBAAmB,GAAG;IACrC,IAAI,EAAE,UAAS,OAAO,EAAE,aAAa,EAAE,WAAW,EAAE,SAAS,EAAE,cAAc;QACzE,IAAM,GAAG,GAAG,WAAW,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACnC,IAAM,aAAa,GAAoD,WAAW,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;QAExG,wFAAwF;QACxF,IAAM,OAAO,GAAG,QAAQ,CAAC,SAAS,CAAC,gBAAgB,CAAC,WAAW,CAAC,GAAG,CAAC,aAAa,CAAC,IAAI,WAAW,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC;QAClH,IAAM,SAAS,GAAG,QAAQ,CAAC,SAAS,CAAC,gBAAgB,CAAC,WAAW,CAAC,GAAG,CAAC,eAAe,CAAC,IAAI,WAAW,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,CAAC;QAExH,IAAI,CAAC,GAAG;YAAE,MAAM,uDAAuD,CAAC;QACxE,IAAI,CAAC,aAAa;YAAE,MAAM,kEAAkE;kBACtF,yFAAyF,CAAC;QAChG,IAAI,CAAC,OAAO;YAAE,MAAM,2DAA2D,CAAC;QAChF,IAAI,CAAC,SAAS;YAAE,MAAM,6DAA6D,CAAC;QAEpF,IAAM,eAAe,GAAG,WAAW,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;QACxG,IAAM,MAAM,GAAG,WAAW,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;QAC7E,IAAM,aAAa,GAAG,WAAW,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;QAClG,IAAM,WAAW,GAAG,WAAW,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;QAC5F,IAAM,UAAU,GAAG,WAAW,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;QACxF,IAAM,WAAW,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,QAAQ,CAAC;QAC/D,IAAM,QAAQ,GAAG,WAAW,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;QAQnD,qBAAqB;QACrB,CAAC,CAAC,OAAO,CAAC;aACL,OAAO,CAAiB;YACrB,KAAK,EAAE,QAAQ,CAAC,mBAAmB,CAAC,GAAG,CAAC,YAAY,EAAE,IAAI,SAAS;YACnE,IAAI,EAAE;gBACF,GAAG,EAAE,GAAG;gBACR,QAAQ,EAAE,MAAM;gBAChB,KAAK,EAAE,GAAG;gBACV,IAAI,EAAE,UAAU,MAAW;oBACvB,IAAI,IAAI,GAAQ;wBACZ,MAAM,EAAE,MAAM,CAAC,IAAI;wBACnB,IAAI,EAAE,MAAM,CAAC,IAAI;qBACpB,CAAC;oBACF,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,WAAW,CAAC,GAAG,CAAC,OAAO,CAAC;wBACrD,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,CAAC;oBACrC,OAAO,IAAI,CAAC;gBAChB,CAAC;gBACD,cAAc,EAAE,UAAU,IAAS,EAAE,MAAW;oBAC5C,oFAAoF;oBACpF,oGAAoG;oBACpG,IAAI,OAAO,GAAI,IAAI,CAAC,IAAc,CAAC,GAAG,CAAC,UAAA,IAAI;wBACvC,OAAO;4BACH,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC;4BACjB,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC,QAAQ,EAAE;4BACnD,UAAU,EAAE,IAAI;yBACL,CAAC;oBACpB,CAAC,CAAC,CAAC;oBAEH,OAAO;wBACH,OAAO,EAAE,OAAO;wBAChB,UAAU,EAAE;4BACR,IAAI,EAAE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,SAAS;yBACnC;qBACJ,CAAC;gBACN,CAAC;gBACD,KAAK,EAAE,CAAC,WAAW,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,QAAQ,EAAE;aAClF;YACD,sFAAsF;YACtF,wBAAwB;YACxB,WAAW,EAAE,WAAW;YACxB,aAAa,EAAE,aAAa;YAC5B,UAAU,EAAE,UAAU;YACtB,cAAc,EAAE,UAAU,IAAS;gBAC/B,IAAI,IAAI,CAAC,OAAO,EAAE;oBACd,sCAAsC;oBACtC,IAAI,aAAa,GAAG,CAAC,CAAC,eAAe,GAAG,IAAI,CAAC,OAAO,GAAG,IAAI;wBACvD,MAAM,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC,OAAO,IAAI,CAAC,IAAI,IAAI,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;0BACtE,SAAS,CAAC,CAAC;oBACjB,OAAO,aAAa,CAAC;iBACxB;gBACD,OAAO,MAAM,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC,OAAO,IAAI,CAAC,IAAI,IAAI,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;YACpF,CAAC;YACD,iBAAiB,EAAE,UAAU,IAAS;gBAClC,kBAAkB;gBAClB,4CAA4C;gBAC5C,gEAAgE;gBAChE,kEAAkE;gBAClE,uBAAuB;gBACvB,2BAA2B;gBAC3B,GAAG;gBACH,OAAO,eAAe,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,CAAC,CAAC;YAC/D,CAAC;SACJ,CAAC;aACD,EAAE,CAAC,QAAQ,EAAE,UAAU,CAAC;YACrB,IAAI,CAAC,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,uBAAuB,CAAC;gBAAE,OAAO;YACrD,CAAC,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,uBAAuB,EAAE,IAAI,CAAC,CAAC;YAE/C,0BAA0B;YAC1B,IAAI,aAAa,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;YAC/C,IAAI,MAAM,GAAoD,aAAa,EAAE,CAAC;YAC9E,IAAI,MAAM,EAAE,IAAI,aAAa,IAAI,MAAM,EAAE,CAAC,MAAM,IAAI,aAAa,CAAC,MAAM,EAAE;gBACtE,yCAAyC;gBACzC,wIAAwI;gBACxI,IAAI,aAAa,CAAC,MAAM,GAAG,MAAM,EAAE,CAAC,MAAM,EAAE;oBACxC,kBAAkB;oBAClB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,aAAa,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;wBAC3C,IAAI,YAAY,GAAG,aAAa,CAAC,CAAC,CAAC,CAAC;wBACpC,IAAI,KAAK,GAAG,KAAK,CAAC;wBAClB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;4BACtC,IAAI,KAAK,GAAG,MAAM,EAAE,CAAC,CAAC,CAAC,CAAC;4BACxB,KAAK,GAAG,KAAK,IAAI,CAAC,KAAK,CAAC,IAAI,IAAI,YAAY,CAAC,EAAE,CAAC,CAAC;yBACpD;wBACD,IAAI,CAAC,KAAK,EAAE;4BACR,2BAA2B;4BAC3B,MAAM,CAAC,IAAI,CAAC,IAAI,aAAa,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC,CAAC;yBAC3D;qBACJ;iBACJ;qBAAM,IAAI,aAAa,CAAC,MAAM,GAAG,MAAM,EAAE,CAAC,MAAM,EAAE;oBAC/C,mBAAmB;oBACnB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;wBACtC,IAAI,KAAK,GAAG,MAAM,EAAE,CAAC,CAAC,CAAC,CAAC;wBACxB,IAAI,KAAK,GAAG,KAAK,CAAC;wBAClB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,aAAa,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;4BAC3C,IAAI,YAAY,GAAG,aAAa,CAAC,CAAC,CAAC,CAAC;4BACpC,KAAK,GAAG,KAAK,IAAI,CAAC,KAAK,CAAC,IAAI,IAAI,YAAY,CAAC,EAAE,CAAC,CAAC;yBACpD;wBACD,IAAI,CAAC,KAAK,EAAE;4BACR,sCAAsC;4BACtC,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;4BAEpB,iEAAiE;4BACjE,2FAA2F;4BAC3F,CAAC,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,UAAC,CAAC,EAAE,CAAC,IAAK,OAAA,CAAC,CAAC,YAAY,CAAC,OAAO,CAAC,IAAI,KAAK,CAAC,IAAI,EAArC,CAAqC,CAAC,CAAC,MAAM,EAAE,CAAC;yBAC9F;qBACJ;iBAEJ;qBAAM;oBACH,mBAAmB;iBACtB;aACJ;YAED,CAAC,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,uBAAuB,EAAE,KAAK,CAAC,CAAC;QACpD,CAAC,CAAC,CAAC;QACP,IAAI,WAAW,EAAE;YACb,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,EAAE,CAAC,OAAO,EAAE;gBAChC,CAAC,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;YAC/B,CAAC,CAAC,CAAC;SACN;IACL,CAAC;IACD,MAAM,EAAE,UAAU,OAAO,EAAE,aAAa,EAAE,WAAW,EAAE,SAAS,EAAE,cAAc;QAC5E,kFAAkF;QAClF,oEAAoE;QACpE,oDAAoD;QACpD,IAAI,KAAK,GAAe,aAAa,EAAE,EAAE,CAAC;QAE1C,IAAI,CAAC,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,uBAAuB,CAAC;YAAE,OAAO;QACrD,CAAC,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,uBAAuB,EAAE,IAAI,CAAC,CAAC;QAE/C,IAAI,WAAW,GAAG,QAAQ,CAAC,SAAS,CAAC,gBAAgB,CAAC,WAAW,CAAC,GAAG,CAAC,aAAa,CAAC,IAAI,WAAW,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC;QACpH,IAAI,aAAa,GAAG,QAAQ,CAAC,SAAS,CAAC,gBAAgB,CAAC,WAAW,CAAC,GAAG,CAAC,eAAe,CAAC,IAAI,WAAW,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,CAAC;QAE1H,6EAA6E;QAC7E,IAAI,YAAY,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,CAAC;QACpC,IAAI,CAAC,YAAY;YAAE,YAAY,GAAG,EAAE,CAAC;QACrC,IAAI,WAAW,GAAG,EAAE,CAAC;QACrB,2CAA2C;QAC3C,aAAa,GAAG,aAAa,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,GAAG,aAAa,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QAC/E,WAAW,GAAG,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,GAAG,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QAEzE,qEAAqE;QACrE,+EAA+E;QAC/E,2FAA2F;QAC3F,mHAAmH;QACnH,uDAAuD;QACvD,qGAAqG;QACrG,uGAAuG;QACvG,0FAA0F;QAC1F,CAAC,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,MAAM,EAAE,CAAC;QAEnC,KAAK,IAAI,CAAC,IAAI,KAAK,EAAE;YACjB,IAAI,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;YACpB,IAAI,IAAI,GAAG,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC;YACjC,IAAI,EAAE,GAAG,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC;YAC7B,IAAI,MAAM,GAAG,IAAI,MAAM,CAAC,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;YAC9C,CAAC,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;YAC1B,WAAW,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;SACxB;QAED,CAAC,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;QAC9C,CAAC,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,uBAAuB,EAAE,KAAK,CAAC,CAAC;IACpD,CAAC;CACJ,CAAC;AAGF,oEAAoE;AACpE,EAAE,CAAC,eAAe,CAAC,eAAe,GAAG;IACjC,IAAI,EAAE,UAAU,OAAO,EAAE,aAAa,EAAE,WAAW,EAAE,SAAS,EAAE,cAAc;QAC1E,IAAM,GAAG,GAAG,WAAW,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACnC,IAAM,aAAa,GAAG,WAAW,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;QAClG,IAAM,WAAW,GAAG,WAAW,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,2CAA2C;QACxI,IAAM,UAAU,GAAG,WAAW,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;QACxF,IAAM,WAAW,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,QAAQ,CAAC;QAC/D,IAAM,WAAW,GAAG,WAAW,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;QAE3F,IAAI,QAAa,CAAC;QAElB,qBAAqB;QACrB,CAAC,CAAC,OAAO,CAAC;aACL,OAAO,CAAiB;YACrB,KAAK,EAAE,QAAQ,CAAC,mBAAmB,CAAC,GAAG,CAAC,YAAY,EAAE,IAAI,SAAS;YACnE,IAAI,EAAE;gBACF,GAAG,EAAE,GAAG;gBACR,QAAQ,EAAE,MAAM;gBAChB,KAAK,EAAE,GAAG;gBACV,IAAI,EAAE,UAAU,MAAW;oBACvB,QAAQ,GAAG,MAAM,CAAA;oBACjB,IAAI,IAAI,GAAQ;wBACZ,MAAM,EAAE,MAAM,CAAC,IAAI;wBACnB,IAAI,EAAE,MAAM,CAAC,IAAI;qBACpB,CAAC;oBACF,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,WAAW,CAAC,GAAG,CAAC,OAAO,CAAC;wBACrD,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,CAAC;oBACrC,OAAO,IAAI,CAAC;gBAChB,CAAC;gBACD,cAAc,EAAE,UAAU,IAAS,EAAE,IAAS;oBAC1C,IAAI,MAAM,GAAG,EAAE,CAAC;oBAChB,IAAI,UAAU,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE;wBAC9B,mBAAmB;wBACnB,IAAI,KAAK,GAAG;4BACR,EAAE,EAAE,CAAC;4BACL,IAAI,EAAE,cAAc;yBACvB,CAAC;wBACF,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;qBACzB;oBACD,IAAI,YAAY,GAAG,KAAK,CAAC;oBAEzB,IAAI,KAAY,CAAC;oBACjB,IAAI,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;wBACrB,8CAA8C;wBAC9C,KAAK,GAAG,IAAI,CAAC;qBAChB;yBACI,IAAI,OAAO,IAAI,KAAK,QAAQ,EAAE;wBAC/B,MAAM,6FAA6F,GAAG,GAAG,CAAC;qBAC7G;yBACI,IAAI,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE;wBACjC,0DAA0D;wBAC1D,uDAAuD;wBACvD,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC;qBACvB;yBACI,IAAI,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;wBAC/B,4CAA4C;wBAC5C,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC;qBACrB;yBACI;wBACD,MAAM,iEAAiE,GAAG,GAAG,CAAC;qBACjF;oBAED,KAAiB,UAAK,EAAL,eAAK,EAAL,mBAAK,EAAL,IAAK;wBAAjB,IAAI,IAAI,cAAA;wBACT,IAAI,OAAO,IAAI,KAAK,QAAQ,IAAI,WAAW,EAAE;4BACzC,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC;yBAC5B;wBAED,IAAI,IAAI,KAAK,SAAS,IAAI,IAAI,KAAK,IAAI,EAAE;4BACrC,SAAS;yBACZ;wBAED,IAAI,IAAI,IAAI,QAAQ,CAAC,IAAI,EAAE;4BACvB,YAAY,GAAG,IAAI,CAAC;4BACpB,MAAM,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;yBACzD;6BAAM;4BACH,MAAM,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC;yBACzC;qBACJ;oBACD,IAAI,CAAC,YAAY,IAAI,QAAQ,CAAC,IAAI,EAAE;wBAChC,MAAM,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE,QAAQ,CAAC,IAAI,EAAE,IAAI,EAAE,QAAQ,CAAC,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;qBAC3E;oBACD,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE,CAAC;gBAC/B,CAAC;gBACD,KAAK,EAAE,CAAC,WAAW,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,QAAQ,EAAE;aAClF;YACD,sFAAsF;YACtF,wBAAwB;YACxB,WAAW,EAAE,WAAW;YACxB,UAAU,EAAE,UAAU;YACtB,aAAa,EAAE,aAAa;SAC/B,CAAC;aACD,EAAE,CAAC,QAAQ,EAAE,UAAU,CAAC;YACrB,0BAA0B;YAC1B,IAAI,KAAK,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,CAAC;YAC7B,IAAI,aAAa,EAAE,EAAE,KAAK,KAAK,EAAE;gBAC7B,IAAI,KAAK,EAAE;oBACP,aAAa,EAAE,CAAC,KAAK,CAAC,CAAC;iBAC1B;qBAAM;oBACH,aAAa,EAAE,CAAC,IAAI,CAAC,CAAC;iBACzB;aACJ;QACL,CAAC,CAAC,CAAC;QACP,IAAI,WAAW,EAAE;YACb,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,EAAE,CAAC,OAAO,EAAE;gBAChC,CAAC,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;YAC/B,CAAC,CAAC,CAAC;SACN;IAEL,CAAC;IACD,MAAM,EAAE,UAAU,OAAO,EAAE,aAAa,EAAE,WAAW,EAAE,SAAS,EAAE,cAAc;QAC5E,6EAA6E;QAC7E,IAAI,KAAK,GAAG,aAAa,EAAE,EAAE,CAAC;QAC9B,IAAI,OAAO,CAAC;QACZ,IAAI,KAAK,EAAE;YACT,OAAO,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC,QAAQ,EAAE,CAAC,OAAO,CAAC,IAAI,EAAE,KAAK,CAAC,GAAG,IAAI,CAAC,CAAC;SAC5F;aAAM;YACL,OAAO,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,gBAAgB,GAAG,KAAK,GAAG,IAAI,CAAC,CAAC;SAC5D;QAGD,4BAA4B;QAC5B,IAAI,OAAO,CAAC,MAAM,IAAI,CAAC,EAAE;YACrB,8BAA8B;YAC9B,IAAI,MAAM,GAAG,IAAI,MAAM,CAAC,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;YAClD,CAAC,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;SAC7B;QAED,mDAAmD;QACnD,CAAC,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,aAAa,EAAE,EAAE,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;IACxD,CAAC;CACJ,CAAC;AAGF,oEAAoE;AACpE,EAAE,CAAC,eAAe,CAAC,OAAO,GAAG;IACzB,IAAI,EAAE,UAAU,OAAO,EAAE,aAAa,EAAE,WAAW,EAAE,SAAS,EAAE,cAAc;QAC1E,IAAM,aAAa,GAAG,WAAW,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;QAClG,IAAM,WAAW,GAAG,WAAW,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,2CAA2C;QACxI,IAAM,UAAU,GAAG,WAAW,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;QACxF,IAAM,WAAW,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,QAAQ,CAAC;QAE/D,qBAAqB;QACrB,CAAC,CAAC,OAAO,CAAC;aACL,OAAO,CAAiB;YACrB,KAAK,EAAE,QAAQ,CAAC,mBAAmB,CAAC,GAAG,CAAC,YAAY,EAAE,IAAI,SAAS;YACnE,WAAW,EAAE,WAAW;YACxB,UAAU,EAAE,UAAU;YACtB,aAAa,EAAE,aAAa;SAC/B,CAAC;aACD,EAAE,CAAC,QAAQ,EAAE,UAAU,CAAC;YACrB,0BAA0B;YAC1B,IAAI,KAAK,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,CAAC;YAC7B,IAAI,aAAa,EAAE,EAAE,IAAI,KAAK,EAAE;gBAC5B,IAAI,KAAK,EAAE;oBACP,aAAa,EAAE,CAAC,KAAK,CAAC,CAAC;iBAC1B;qBAAM;oBACH,aAAa,EAAE,CAAC,IAAI,CAAC,CAAC;iBACzB;aACJ;QACL,CAAC,CAAC,CAAC;QACP,IAAI,WAAW,EAAE;YACb,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,EAAE,CAAC,OAAO,EAAE;gBAChC,CAAC,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;YAC/B,CAAC,CAAC,CAAC;SACN;QAGD,6BAA6B;QAC7B,IAAM,cAAc,GAAG,EAAE,CAAC,eAAe,CAAC,gBAAgB,CAAC,CAAC;QAC5D,IAAI,CAAC,cAAc,CAAC,IAAI;YAAE,MAAM,oCAAoC,CAAA;QACpE,cAAc,CAAC,IAAI,CAAC,OAAO,EAAE,aAAa,EAAE,WAAW,EAAE,SAAS,EAAE,cAAc,CAAC,CAAC;QAEpF,oFAAoF;QACpF,CAAC,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC;IAC9F,CAAC;IACD,MAAM,EAAE,UAAU,OAAO,EAAE,aAAa,EAAE,WAAW,EAAE,SAAS,EAAE,cAAc;QAC5E,mDAAmD;QACnD,CAAC,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,aAAa,EAAE,EAAE,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;IACxD,CAAC;CACJ,CAAC;AAGF,EAAE,CAAC,eAAe,CAAC,UAAU,GAAG;IAC5B,IAAI,EAAE,UAAU,OAAO,EAAE,aAAsD,EAAE,WAAW,EAAE,SAAS,EAAE,cAAc;QACnH,2CAA2C;QAC3C,IAAI,UAAU,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,CAAC;QAEtE,IAAI,QAAQ,GAAG;YACX,IAAI,QAAQ,GAAG,UAAU,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,IAAI,EAAE,CAAC;YAExD,IAAI,CAAC,QAAQ,EAAE;gBACX,OAAO,IAAI,CAAC;aACf;YAED,IAAI,YAAY,GAAG,WAAW,CAAC,GAAG,CAAC,cAAc,CAAC,IAAI,KAAK,CAAC;YAC5D,IAAI,YAAY,GAAG,WAAW,CAAC,GAAG,CAAC,cAAc,CAAC,IAAI,KAAK,CAAC;YAC5D,IAAI,cAAc,GAAG,aAAa,EAAE,EAAE,CAAC;YAEvC,IAAI,CAAC,YAAY,IAAI,CAAC,YAAY,EAAE;gBAChC,QAAQ,GAAG,QAAQ,CAAC;aACvB;iBAAM,IAAI,YAAY,EAAE;gBACrB,wCAAwC;gBACxC,IAAI,aAAa,GAAG,MAAM,CAAC,QAAQ,CAAC,cAAc,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC;gBACvE,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,YAAY,CAAC,EAAE,YAAY,CAAC,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;aACrF;iBAAM,IAAI,YAAY,EAAE;gBACrB,uCAAuC;gBACvC,IAAI,OAAO,GAAG,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC;gBAC3D,QAAQ,GAAG,MAAM,CAAC,cAAc,CAAC,MAAM,CAAC,YAAY,CAAC,EAAE,YAAY,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;aACrF;YAED,OAAO,QAAQ,CAAC;QACpB,CAAC,CAAA;QAED,IAAI,WAAW,GAAG;YACd,IAAI,QAAQ,GAAG,QAAQ,EAAE,CAAC;YAE1B,mCAAmC;YACnC,IAAI,iBAAiB,GAAG,aAAa,EAAE,EAAE,CAAC;YAC1C,IAAI,CAAC,iBAAiB,IAAI,CAAC,QAAQ,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,iBAAiB,CAAC,EAAE;gBACxE,aAAa,EAAE,CAAC,QAAQ,CAAC,CAAC;aAC7B;QACL,CAAC,CAAA;QAID,UAAU,CAAC,cAAc,CAAC;YACtB,MAAM,EAAE,WAAW,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,eAAe;YACpD,QAAQ,EAAE,WAAW,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,CAAC;YAC1C,UAAU,EAAE,WAAW,CAAC,GAAG,CAAC,YAAY,CAAC,IAAI,KAAK;YAClD,QAAQ,EAAE,WAAW,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,EAAE;YAC3C,QAAQ,EAAE,WAAW,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE;SACrF,CAAC;aACG,EAAE,CAAC,WAAW,EAAE,UAAU,CAAC;YACxB,IAAI,WAAW,CAAC,GAAG,CAAC,iBAAiB,CAAC,EAAE;gBACpC,WAAW,EAAE,CAAC;aACjB;QACL,CAAC,CAAC;aACD,EAAE,CAAC,SAAS,EAAE,WAAW,CAAC;aAC1B,EAAE,CAAC,OAAO,EAAE,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,eAAe,EAAE,EAAnB,CAAmB,CAAC;aACrC,EAAE,CAAC,UAAU,EAAE,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,eAAe,EAAE,EAAnB,CAAmB,CAAC,CAAC;QAE9C,CAAC,CAAC,OAAO,CAAC;aACL,EAAE,CAAC,MAAM,EAAE,WAAW,CAAC,CAAC;QAE7B,6BAA6B;QAC7B,IAAM,cAAc,GAAG,EAAE,CAAC,eAAe,CAAC,gBAAgB,CAAC,CAAC;QAC5D,IAAI,CAAC,cAAc,CAAC,IAAI;YAAE,MAAM,oCAAoC,CAAA;QACpE,cAAc,CAAC,IAAI,CAAC,OAAO,EAAE,aAAa,EAAE,WAAW,EAAE,SAAS,EAAE,cAAc,CAAC,CAAC;QAEpF,4EAA4E;QAC5E,CAAC,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;IACrE,CAAC;IACD,MAAM,EAAE,UAAU,OAAO,EAAE,aAAa,EAAE,WAAW,EAAE,SAAS,EAAE,cAAc;QAC5E,mDAAmD;QACnD,IAAI,UAAU,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,CAAC;QACtE,IAAI,aAAa,EAAE,EAAE;YAAE,UAAU,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,IAAI,CAAC,aAAa,EAAE,EAAE,CAAC,CAAC;;YAC5E,UAAU,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAEtD,CAAC;CACJ,CAAC;AAGF,EAAE,CAAC,eAAe,CAAC,eAAe,GAAG;IACjC,IAAI,EAAE,UAAU,OAAO,EAAE,aAAa,EAAE,WAAW,EAAE,SAAiC,EAAE,cAAc;QAClG,IAAI,CAAC,SAAS,CAAC,cAAc,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC,eAAe,EAAE;YACxE,OAAO,CAAC,KAAK,CAAC,2FAA2F,CAAC,CAAC;YAC3G,OAAO;SACV;QAED,kGAAkG;QAClG,IAAI,eAAuB,CAAC;QAC5B,CAAC,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,OAAO,EAAE;YACnB,eAAe,GAAG,SAAS,CAAC,cAAc,CAAC,aAAa,CAAC,GAAG,EAAE,CAAC;YAC/D,SAAS,CAAC,cAAc,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;QAC9C,CAAC,CAAC,CAAC;QACH,CAAC,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,MAAM,EAAE;YAClB,SAAS,CAAC,cAAc,CAAC,aAAa,CAAC,eAAe,CAAC,CAAC;QAC5D,CAAC,CAAC,CAAC;IACP,CAAC;CACJ,CAAC;AAGF,qFAAqF;AACrF,EAAE,CAAC,eAAe,CAAC,SAAS,GAAG;IAC3B,IAAI,EAAE,UAAU,OAAO,EAAE,aAAa,EAAE,WAAW,EAAE,SAAiC,EAAE,cAAc;QAClG,IAAI,CAAC,SAAS,CAAC,cAAc,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC,eAAe,EAAE;YACxE,OAAO,CAAC,KAAK,CAAC,qFAAqF,CAAC,CAAC;YACrG,OAAO;SACV;QACD,IAAI,wBAAiC,CAAC;QAEtC,sGAAsG;QACtG,CAAC,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,OAAO,EAAE;YACnB,wBAAwB,GAAG,SAAS,CAAC,cAAc,CAAC,eAAe,CAAC,GAAG,EAAE,CAAC;YAC1E,SAAS,CAAC,cAAc,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;QACpD,CAAC,CAAC,CAAC;QACH,yDAAyD;QACzD,CAAC,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,MAAM,EAAE;YAClB,SAAS,CAAC,cAAc,CAAC,eAAe,CAAC,wBAAwB,CAAC,CAAC;YACnE,kGAAkG;YAClG,IAAI,SAAS,CAAC,OAAO,EAAE,EAAE;gBACrB,SAAS,CAAC,QAAQ,EAAE,CAAC;aACxB;QAEL,CAAC,CAAC,CAAC;IACP,CAAC;CACJ,CAAC;AAGF,iCAAiC;AACjC,wFAAwF;AACxF,+HAA+H;AAC/H,wFAAwF;AACxF,EAAE,CAAC,eAAe,CAAC,OAAO,GAAG;IACzB,IAAI,EAAE,UAAU,OAAO;QACnB,IAAI,QAAQ,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC;QAE1B,EAAE,CAAC,KAAK,CAAC,eAAe,CAAC,kBAAkB,CAAC,OAAO,EAAE;YACjD,IAAI,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE;gBAC7B,QAAQ,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;aAC/B;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IAED,MAAM,EAAE,UAAU,OAAO,EAAE,aAAa;QACpC,IAAI,QAAQ,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC;QAC1B,IAAI,KAAK,GAAG,EAAE,CAAC,MAAM,CAAC,aAAa,EAAE,CAAC,CAAC;QACvC,IAAI,OAAO,GAAQ,EAAE,CAAC;QAEtB,IAAI,KAAK,KAAK,IAAI,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;YAC7C,OAAO,GAAG,KAAK,CAAC;SACnB;aAAM;YACH,EAAE,CAAC,KAAK,CAAC,aAAa,CAAC,KAAK,EAAE,UAAU,YAAY,EAAE,aAAa;gBAC/D,OAAO,CAAC,YAAY,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;YACrD,CAAC,CAAC,CAAC;SACN;QAED,IAAI,OAAO,OAAO,KAAK,QAAQ,EAAE;YAC7B,OAAO,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE,CAAA;SAC7B;QAED,IAAI,WAAW,GAAG,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAE9C,IAAI,CAAC,WAAW,EAAE;YACd,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;SAC7B;aAAM;YACH,EAAE,CAAC,KAAK,CAAC,MAAM,CAAC,WAAW,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;SACjD;IACL,CAAC;CACJ,CAAC;AAGF,EAAE,CAAC,eAAe,CAAC,WAAW,GAAG;IAC7B,IAAI,EAAE,UAAU,OAAO,EAAE,aAAa;QAClC,kFAAkF;QAClF,IAAI,KAAK,GAAG,aAAa,EAAE,CAAC;QAC5B,CAAC,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,mFAAmF;IAC5H,CAAC;IACD,MAAM,EAAE,UAAU,OAAO,EAAE,aAAa;QACpC,6EAA6E;QAC7E,IAAI,KAAK,GAAG,aAAa,EAAE,CAAC;QAC5B,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,OAAO,EAAE,CAAC;IAClE,CAAC;CACJ,CAAC;AAEF,EAAE,CAAC,eAAe,CAAC,YAAY,GAAG;IAC9B,IAAI,EAAE,UAAU,OAAO,EAAE,aAAa;QAClC,kFAAkF;QAClF,IAAI,KAAK,GAAG,aAAa,EAAE,CAAC;QAC5B,CAAC,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,mFAAmF;IAC5H,CAAC;IACD,MAAM,EAAE,UAAU,OAAO,EAAE,aAAa;QACpC,6EAA6E;QAC7E,IAAI,KAAK,GAAG,aAAa,EAAE,CAAC;QAC5B,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,OAAO,EAAE,CAAC;IACrE,CAAC;CACJ,CAAC;AAEF,EAAE,CAAC,eAAe,CAAC,YAAY,GAAG;IAC9B,IAAI,EAAE,UAAU,OAAO,EAAE,aAAa,EAAE,mBAAmB;QACvD,IAAI,UAAU,GAAG,aAAa,EAAE,EAC5B,WAAW,GAAG,EAAE,CAAC,QAAQ,CAAC;YACtB,IAAI,EAAE;gBACF,OAAO,UAAU,EAAE,CAAC,QAAQ,EAAE,CAAC;YACnC,CAAC;YACD,KAAK,EAAE,UAAU,QAAQ;gBACrB,UAAU,CAAC,QAAQ,KAAK,MAAM,CAAC,CAAC;YACpC,CAAC;SACJ,CAAC,CAAC;QAEP,EAAE,CAAC,mBAAmB,CAAC,OAAO,EAAE,EAAE,KAAK,EAAE,WAAW,EAAE,CAAC,CAAC;IAC5D,CAAC;CACJ,CAAC;AAEF,EAAE,CAAC,eAAe,CAAC,gBAAgB,GAAG;IAClC,MAAM,EAAE,UAAU,OAAO,EAAE,aAAa,EAAE,WAAW,EAAE,SAAS,EAAE,cAAc;QAC5E,IAAI,KAAK,GAAG,EAAE,CAAC,KAAK,CAAC,gBAAgB,CAAC,aAAa,EAAE,CAAC,CAAC;QACvD,IAAI,WAAW,GAAG;YACd,OAAO,KAAK,CAAC,OAAO,CAAC,uBAAuB,EAAE,YAAY,CAAC,CAAC;QAChE,CAAC,CAAA;QAED,kCAAkC;QAClC,IAAI,CAAC,EAAE,CAAC,eAAe,CAAC,IAAI,CAAC,MAAM;YAAE,MAAM,6BAA6B,CAAC;QAEzE,EAAE,CAAC,eAAe,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,WAAW,EAAE,WAAW,EAAE,SAAS,EAAE,cAAc,CAAC,CAAC;IACjG,CAAC;CACJ,CAAC;AAEF,qDAAqD;AACrD,EAAE,CAAC,eAAe,CAAC,KAAK,CAAC,GAAG;IACxB,IAAI,EAAE,UAAU,OAAO,EAAE,aAAa,EAAE,WAAW,EAAE,SAAS,EAAE,cAAc;QAC1E,IAAI,YAAY,GAAG,cAAc,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;QACxD,EAAE,CAAC,0BAA0B,CAAC,YAAY,EAAE,OAAO,CAAC,CAAC;QACrD,OAAO,EAAE,0BAA0B,EAAE,IAAI,EAAE,CAAC;IAChD,CAAC;CACJ,CAAC;AACF,EAAE,CAAC,eAAe,CAAC,eAAe,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC;AAGjD,4BAA4B;AAC5B,qDAAqD;AAGrD,CAAC;IAEG,EAAE,CAAC,eAAe,CAAC,MAAM,GAAG;QAExB,QAAQ,EAAE;YACN,OAAO,EAAE,EAAE;YACX,MAAM,EAAE,YAAY;SACvB;QAED,IAAI,EAAE,UAAU,OAAO,EAAE,aAAa,EAAE,mBAAmB,EAAE,SAAS,EAAE,cAAc;YAElF,IAAI,WAAW,GAAG,mBAAmB,EAAE,CAAC;YAExC,wBAAwB;YACxB,EAAE,CAAC,KAAK,CAAC,oBAAoB,CAAC,OAAO,EAAE,QAAQ,EAAE;gBAE7C,IAAI,UAAU,GAAG,aAAa,EAAE,CAAC;gBACjC,IAAI,GAAG,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,IAAI,EAAE,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC;gBAEtD,UAAU,CAAC,GAAG,CAAC,CAAC;YAEpB,CAAC,CAAC,CAAC;QACP,CAAC;QAED,MAAM,EAAE,UAAU,OAAO,EAAE,aAAa,EAAE,mBAAmB,EAAE,SAAS,EAAE,cAAc;YAEpF,IAAI,KAAK,GAAG,aAAa,EAAE,EACvB,WAAW,GAAG,mBAAmB,EAAE,EACnC,cAAc,GAAG,EAAE,CAAC,KAAK,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;YAEtD,8DAA8D;YAC9D,IAAI,OAAO,GAAG,WAAW,CAAC,MAAM,IAAI,EAAE,CAAC,eAAe,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC;YAC9E,IAAI,aAAa,GAAG,WAAW,CAAC,OAAO,IAAI,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,eAAe,CAAC,MAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,WAAW,CAAC,OAAO,CAAC;YAExH,IAAI,UAAU,GAAG,MAAM,CAAC,cAAc,CAAC,CAAC;YAExC,8BAA8B;YAC9B,IAAI,MAAM,GAAG,UAAU,CAAC,OAAO,EAAE,CAAC,CAAC;gBAC/B,UAAU,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC;gBAC5B,aAAa,CAAC;YAElB,IAAI,CAAC,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,IAAI,EAAE;gBACjC,CAAC,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;aAC1B;iBAAM;gBACH,CAAC,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;aAC3B;QAEL,CAAC;KACJ,CAAC;IAQF,EAAE,CAAC,eAAe,CAAC,aAAa,GAAG;QAE/B,QAAQ,EAAE;YACN,OAAO,EAAE,EAAE;SACd;QAED,IAAI,EAAE,UAAU,OAAO,EAAE,aAAa,EAAE,mBAAmB,EAAE,SAAS,EAAE,cAAc;YAElF,IAAI,WAAW,GAAG,mBAAmB,EAAE,CAAC;YAExC,EAAE,CAAC,KAAK,CAAC,eAAe,CAAC,kBAAkB,CAAC,OAAO,EAAE;gBACjD,aAAa,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;YAC1C,CAAC,CAAC,CAAC;QACP,CAAC;QAED,MAAM,EAAE,UAAU,OAAO,EAAE,aAAa,EAAE,mBAAmB,EAAE,SAAS,EAAE,cAAc;YAEpF,IAAI,KAAK,GAAG,aAAa,EAAE,EACvB,WAAW,GAAG,mBAAmB,EAAE,EACnC,cAAc,GAAG,EAAE,CAAC,KAAK,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;YAEtD,8DAA8D;YAC9D,IAAI,aAAa,GAAG,WAAW,CAAC,OAAO,IAAI,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,eAAe,CAAC,MAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,WAAW,CAAC,OAAO,CAAC;YACxH,IAAI,OAAO,GAAG,WAAW,CAAC,OAAO,IAAI,SAAS,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,WAAW,CAAC,OAAO,CAAC;YAE7E,IAAI,UAAU,GAAG,MAAM,CAAC,cAAc,CAAC,CAAC;YAExC,IAAI,GAAG,GAAG;gBACN,IAAI,MAAM,GAAG,UAAU,CAAC,OAAO,EAAE,CAAC,CAAC;oBAC/B,UAAU,CAAC,OAAO,EAAE,CAAC,CAAC;oBACtB,aAAa,CAAC;gBAElB,IAAI,OAAO,EAAE;oBACT,MAAM,GAAG,MAAM,CAAC,OAAO,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC;oBAC3C,MAAM,GAAG,MAAM,CAAC,OAAO,CAAC,eAAe,EAAE,UAAU,CAAC,CAAC;iBACxD;gBACD,OAAO,MAAM,CAAC;YAClB,CAAC,CAAA;YAED,CAAC,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC;YAEvB,aAAa,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;YACtC,OAAO,CAAC,cAAc,GAAG,WAAW,CAAC;gBAEjC,CAAC,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC;YAC3B,CAAC,EAAE,IAAI,CAAC,CAAC;QAEb,CAAC;KACJ,CAAC;AACN,CAAC,EAAG,CAAC,CAAC;ACr9BN,sDAAsD;AAEtD,oCAAoC;AAEpC,IAAO,UAAU,CAuJhB;AA3JD,sDAAsD;AAEtD,oCAAoC;AAEpC,WAAO,UAAU;IAEb;QAA0B,wBAAsB;QAiH5C,cAAY,OAAgB,EAAE,MAAyD;YAAvF,YACI,kBAAM,MAAM,CAAC,SA8BhB;YA/Ie,eAAS,GAAG,MAAM,CAAC;YACnB,oBAAc,GAAe,IAAI,CAAC;YAClC,sBAAgB,GAAG,MAAM,CAAC;YAC1B,mBAAa,GAAG,OAAO,CAAC;YACxB,oBAAc,GAAG,OAAO,CAAC;YAMzC,mDAAmD;YAC5C,oBAAc,GACf,IAAI,QAAQ,CAAC,sBAAsB,CAAO,IAAI,CAAC,cAAc,CAAC,CAAC;YAErE,uEAAuE;YAChE,iBAAW,GAA0C,cAAc,CAAC,eAAe,CAAC;YAGpF,UAAI,GAAsC,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;YAC9D,YAAM,GAAkD,EAAE,CAAC,eAAe,CAAC,EAAE,CAAC,CAAC;YAC/E,WAAK,GAA6C,EAAE,CAAC,eAAe,CAAC,EAAE,CAAC,CAAC;YACzE,QAAE,GAAsC,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;YAInE,2BAA2B;YACpB,iBAAW,GAAG,UAAC,QAAyB;gBAC3C,IAAI,OAAO,GAAG,IAAI,WAAA,SAAS,EAAE,CAAC;gBAC9B,IAAI,OAAM,CAAC,QAAQ,CAAC,IAAI,SAAS,EAAC;oBAC9B,OAAO,CAAC,cAAc,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC;iBACpD;gBACD,OAAO,CAAC,MAAM,GAAG,KAAI,CAAC;gBACtB,OAAO,CAAC,gBAAgB,GAAG,KAAI,CAAC,MAAM,CAAC;gBACvC,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;gBACzB,OAAO,CAAC,MAAM,CAAC,KAAI,CAAC,EAAE,EAAE,CAAC,CAAC;gBAC1B,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;gBAC1B,OAAO,OAAO,CAAC;YACnB,CAAC,CAAC;YAMF,uFAAuF;YAChF,mBAAa,GAA6B,EAAE,CAAC,QAAQ,CACxD,cAAM,OAAA,KAAI,CAAC,cAAc,CAAC,WAAW,EAAE,GAAG,iCAAiC,GAAG,KAAI,CAAC,EAAE,EAAE,EAAjF,CAAiF,EACvF,IAAI,EAAE,EAAE,eAAe,EAAE,IAAI,EAAE,CAClC,CAAC;YAKF;;;;;;cAME;YACK,iBAAW,GAAG,UAAC,IAAS,EAAE,KAAsB,EAAE,sBAAsC;gBAA9D,sBAAA,EAAA,aAAsB;gBAAE,uCAAA,EAAA,6BAAsC;gBAC3F,IAAI,CAAC,IAAI,IAAI,CAAC,CAAC,KAAK,IAAI,KAAI,CAAC,SAAS,EAAE,CAAC;oBAAE,OAAO;gBAClD,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;gBACrB,cAAc;gBACd,KAAI,CAAC,IAAI,GAAG,IAAI,CAAC,EAAE,CAAC;gBACpB,KAAI,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;gBACjB,kCAAkC;gBAClC,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,EAAE;oBACrB,2BAA2B;oBAC3B,QAAQ,CAAC,iBAAiB,CAAC,YAAY,CAAC,KAAI,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,EAAE,WAAA,SAAS,EAAE,KAAI,EAAE,sBAAsB,CAAC,CAAC;iBACpH;gBACD,IAAI,IAAI,CAAC,KAAK,IAAI,IAAI,EAAE;oBACpB,2BAA2B;oBAC3B,QAAQ,CAAC,iBAAiB,CAAC,YAAY,CAAC,KAAI,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,EAAE,WAAA,IAAI,EAAE,KAAI,EAAE,sBAAsB,CAAC,CAAC;iBAC7G;gBAED,0CAA0C;gBAC1C,KAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBACrB,IAAI,KAAI,CAAC,cAAc,CAAC,aAAa,EAAE,EAAC;oBACpC,KAAI,CAAC,cAAc,CAAC,aAAa,EAAE,CAAC,KAAW,CAAC,CAAC;iBACpD;gBACD,KAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;gBACtB,KAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;gBACpB,IAAI,KAAI,CAAC,cAAc,CAAC,qBAAqB,EAAE;oBAAE,KAAI,CAAC,QAAQ,EAAE,CAAC;YACrE,CAAC,CAAC;YAEF,2EAA2E;YACpE,eAAS,GAAG;gBACf,IAAI,GAAG,GAAQ,EAAE,CAAC;gBAClB,GAAG,CAAC,EAAE,GAAG,KAAI,CAAC,EAAE,EAAE,CAAC;gBAEnB,GAAG,CAAC,IAAI,GAAG,KAAI,CAAC,IAAI,EAAE,CAAC;gBAEvB,OAAO,GAAG,CAAC;YACf,CAAC,CAAA;YAED;;;cAGE;YACK,kBAAY,GAAG,UAAC,QAAqB;gBACxC,IAAI,YAAY,GAAG,CAAC,CAAC;gBACrB,IAAI,YAAY,IAAI,CAAC,IAAI,OAAM,CAAC,QAAQ,CAAC,IAAI,UAAU,EAAE;oBAAE,QAAQ,EAAE,CAAC;iBAAE;YAC5E,CAAC,CAAC;YAYE,KAAI,CAAC,cAAc,EAAE,CAAC;YACtB,IAAM,IAAI,GAAG,KAAI,CAAC;YAIlB,oEAAoE;YACpE,IAAI,WAAyC,CAAC;YAC9C,KAAI,CAAC,UAAU,GAAG,UAAS,aAAoB;gBAApB,8BAAA,EAAA,oBAAoB;gBAC3C,IAAI,CAAC,WAAW,EAAE;oBACd,WAAW,GAAG,IAAI,cAAc,CAAC,aAAa,EAAE,CAAC;oBACjD,IAAI,aAAa;wBAAE,cAAc,EAAE,CAAC;oBACpC,IAAI,CAAC,EAAE,CAAC,SAAS,CAAC,cAAc,CAAC,CAAA;iBACpC;gBACD,OAAO,WAAW,CAAC;YACvB,CAAC,CAAA;YACD;gBACI,IAAI,IAAI,CAAC,EAAE,EAAE,EAAE;oBACX,WAAW,CAAC,WAAW,GAAG,gBAAgB,GAAG,IAAI,CAAC,EAAE,EAAE,CAAC;oBACvD,WAAW,CAAC,IAAI,EAAE,CAAC;iBACtB;YACL,CAAC;YAID,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YAEnC,IAAI,OAAO,EAAE;gBACT,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;aACnC;;QACL,CAAC;QAvCM,8BAAe,GAAtB;YACI,IAAI,IAAI,CAAC,MAAM,KAAK,IAAI;gBAAE,OAAO;YACjC,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC,UAAU,CAAC,KAAK,CAAC,EACjC,CAAC,CAAC;YACH,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC,UAAU,CAAC,KAAK,CAAC,EACnC,CAAC,CAAC;QACP,CAAC;QAxGD,8GAA8G;QAChG,mBAAc,GACtB,IAAI,QAAQ,CAAC,sBAAsB,CAAO,QAAQ,CAAC,mBAAmB,CAAC,SAAS,CAAC,CAAC;QAwI5F,WAAC;KAjJD,AAiJC,CAjJyB,QAAQ,CAAC,aAAa,GAiJ/C;IAjJY,eAAI,OAiJhB,CAAA;AAIL,CAAC,EAvJM,UAAU,KAAV,UAAU,QAuJhB;AC3JD,sDAAsD;AAEtD,oCAAoC;AAEpC,IAAO,UAAU,CAgKhB;AApKD,sDAAsD;AAEtD,oCAAoC;AAEpC,WAAO,UAAU;IAEb;QAA+B,6BAAsB;QA0HjD,mBAAY,OAAgB,EAAE,MAA8D;YAA5F,YACI,kBAAM,MAAM,CAAC,SA8BhB;YAxJe,eAAS,GAAG,WAAW,CAAC;YACxB,oBAAc,GAAe,IAAI,CAAC;YAClC,sBAAgB,GAAG,YAAY,CAAC;YAChC,mBAAa,GAAG,YAAY,CAAC;YAC7B,oBAAc,GAAG,YAAY,CAAC;YAM9C,wDAAwD;YACjD,oBAAc,GACf,IAAI,QAAQ,CAAC,sBAAsB,CAAY,SAAS,CAAC,cAAc,CAAC,CAAC;YAE/E,uEAAuE;YAChE,iBAAW,GAA+C,cAAc,CAAC,oBAAoB,CAAC;YAG9F,YAAM,GAAsC,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;YAChE,UAAI,GAA+C,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;YACvE,eAAS,GAAsC,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;YACnE,gBAAU,GAAsC,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;YACpE,QAAE,GAAsC,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;YAcnE;;;;;;cAME;YACK,iBAAW,GAAG,UAAC,IAAS,EAAE,KAAsB,EAAE,sBAAsC;gBAA9D,sBAAA,EAAA,aAAsB;gBAAE,uCAAA,EAAA,6BAAsC;gBAC3F,IAAI,CAAC,IAAI,IAAI,CAAC,CAAC,KAAK,IAAI,KAAI,CAAC,SAAS,EAAE,CAAC;oBAAE,OAAO;gBAClD,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;gBACrB,cAAc;gBACd,KAAI,CAAC,IAAI,GAAG,IAAI,CAAC,EAAE,CAAC;gBACpB,KAAI,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;gBACjB,kCAAkC;gBAClC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;oBACZ,IAAI,IAAI,CAAC,MAAM,IAAI,KAAI,CAAC,MAAM,EAAE,EAAE;wBAC9B,KAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;qBACnB;iBACJ;qBAAM;oBACH,IAAI,CAAC,KAAI,CAAC,IAAI,EAAE,EAAC;wBACb,KAAI,CAAC,IAAI,CAAC,IAAI,WAAA,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,KAAI,CAAC,CAAC,CAAC;qBACxC;yBAAM;wBACH,KAAI,CAAC,IAAI,EAAG,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;qBACvC;oBACD,IAAI,KAAI,CAAC,MAAM,YAAY,WAAA,IAAI,IAAI,KAAI,CAAC,MAAM,KAAK,KAAI,CAAC,IAAI,EAAE,IAAI,KAAI,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,KAAI,CAAC,IAAI,EAAG,CAAC,EAAE,EAAE,EACvG;wBACI,KAAI,CAAC,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,EAAE,SAAS,EAAE,KAAK,CAAC,CAAC;qBACxD;iBACJ;gBAED,0CAA0C;gBAC1C,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;gBACzB,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;gBAC/B,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;gBACjC,IAAI,KAAI,CAAC,cAAc,CAAC,aAAa,EAAE,EAAC;oBACpC,KAAI,CAAC,cAAc,CAAC,aAAa,EAAE,CAAC,KAAW,CAAC,CAAC;iBACpD;gBACD,KAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;gBACtB,KAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;gBACpB,IAAI,KAAI,CAAC,cAAc,CAAC,qBAAqB,EAAE;oBAAE,KAAI,CAAC,QAAQ,EAAE,CAAC;YACrE,CAAC,CAAC;YAEF,2EAA2E;YACpE,eAAS,GAAG;gBACf,IAAI,GAAG,GAAQ,EAAE,CAAC;gBAClB,GAAG,CAAC,EAAE,GAAG,KAAI,CAAC,EAAE,EAAE,CAAC;gBAEnB,GAAG,CAAC,MAAM,GAAG,KAAI,CAAC,MAAM,EAAE,CAAC;gBAC3B,IAAI,CAAC,GAAG,CAAC,MAAM,IAAI,KAAI,CAAC,IAAI,EAAE,EAAE;oBAC5B,GAAG,CAAC,MAAM,GAAG,KAAI,CAAC,IAAI,EAAG,CAAC,EAAE,EAAE,CAAC;iBAClC;gBACD,GAAG,CAAC,SAAS,GAAG,KAAI,CAAC,SAAS,EAAE,CAAC;gBACjC,GAAG,CAAC,UAAU,GAAG,KAAI,CAAC,UAAU,EAAE,CAAC;gBAEnC,OAAO,GAAG,CAAC;YACf,CAAC,CAAA;YAED;;;cAGE;YACK,kBAAY,GAAG,UAAC,QAAqB;gBACxC,IAAI,YAAY,GAAG,CAAC,CAAC;gBACrB,uCAAuC;gBACvC,IAAI,KAAI,CAAC,IAAI,EAAE,IAAI,IAAI,IAAI,KAAI,CAAC,MAAM,EAAE,IAAI,IAAI,EAAE;oBAC9C,YAAY,EAAE,CAAC;oBACf,IAAI,OAAO,GAAG,IAAI,WAAA,IAAI,EAAE,CAAC;oBACzB,OAAO,CAAC,IAAI,CAAC,KAAI,CAAC,MAAM,EAAE,EAAE;wBACxB,YAAY,EAAE,CAAC;wBACf,KAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;wBACnB,IAAI,YAAY,IAAI,CAAC,IAAI,OAAM,CAAC,QAAQ,CAAC,IAAI,UAAU,EAAE;4BAAE,QAAQ,EAAE,CAAC;yBAAE;oBAC5E,CAAC,CAAC,CAAC;iBACN;gBACD,IAAI,YAAY,IAAI,CAAC,IAAI,OAAM,CAAC,QAAQ,CAAC,IAAI,UAAU,EAAE;oBAAE,QAAQ,EAAE,CAAC;iBAAE;YAC5E,CAAC,CAAC;YAaE,KAAI,CAAC,cAAc,EAAE,CAAC;YACtB,IAAM,IAAI,GAAG,KAAI,CAAC;YAElB,KAAI,CAAC,QAAQ,GAAG,EAAE,CAAC,YAAY,CAAC;gBAC5B,IAAI,IAAI,CAAC,IAAI,EAAE,IAAI,IAAI,CAAC,IAAI,EAAG,CAAC,IAAI,EAAE,EAAE;oBACpC,OAAO,IAAI,CAAC,IAAI,EAAG,CAAC,IAAI,EAAG,CAAC,QAAQ,EAAE,CAAC;iBAC1C;qBAAM;oBACH,OAAO,MAAM,CAAC;iBACjB;YACL,CAAC,CAAC,CAAC;YAKH,KAAI,CAAC,cAAc,GAAG,UAAS,QAAa;gBACxC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,EAAE;oBACd,IAAI,CAAC,IAAI,CAAC,IAAI,WAAA,IAAI,EAAE,CAAC,CAAC;iBACzB;gBACD,IAAI,CAAC,IAAI,EAAG,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAA;YACrC,CAAC,CAAC;YAEF,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YACrC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YACnC,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YACxC,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YAEzC,IAAI,OAAO,EAAE;gBACT,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;aACnC;;QACL,CAAC;QAxCM,mCAAe,GAAtB;YACI,IAAI,IAAI,CAAC,MAAM,KAAK,IAAI;gBAAE,OAAO;YACjC,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC,UAAU,CAAC,KAAK,CAAC;gBAC9B,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,QAAQ,EAAE,EAAC,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE,mBAAmB,EAAC,EAAE,CAAC;aACjF,CAAC,CAAC;YACH,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC,UAAU,CAAC,KAAK,CAAC,EACnC,CAAC,CAAC;QACP,CAAC;QAjHD,mHAAmH;QACrG,wBAAc,GACtB,IAAI,QAAQ,CAAC,sBAAsB,CAAY,QAAQ,CAAC,mBAAmB,CAAC,SAAS,CAAC,CAAC;QAiJjG,gBAAC;KA1JD,AA0JC,CA1J8B,QAAQ,CAAC,aAAa,GA0JpD;IA1JY,oBAAS,YA0JrB,CAAA;AAIL,CAAC,EAhKM,UAAU,KAAV,UAAU,QAgKhB;ACpKD,sDAAsD;AAEtD,oCAAoC;AAEpC,IAAO,cAAc,CAuCpB;AA3CD,sDAAsD;AAEtD,oCAAoC;AAEpC,WAAO,cAAc;IAEjB,IAAiB,oBAAoB,CAEpC;IAFD,WAAiB,oBAAoB;QACjC;YAA6B,2BAAyC;YAAtE;;YAAyE,CAAC;YAAD,cAAC;QAAD,CAAzE,AAA0E,CAA7C,QAAQ,CAAC,UAAU,GAA0B;QAA7D,4BAAO,UAAsD,CAAA;IAC9E,CAAC,EAFgB,oBAAoB,GAApB,mCAAoB,KAApB,mCAAoB,QAEpC;IAED;QAAmC,iCAAgD;QA6B/E;YAAA,YACI,iBAAO,SACV;YA9Be,eAAS,GAAW,WAAW,CAAC;YAChC,mBAAa,GAAW,YAAY,CAAC;YAC9C,kBAAY,GAAW,IAAI,CAAC;YAC5B,eAAS,GAAmC,UAAU,CAAC,SAAS,CAAC;YAEjE,YAAM,GAKF,IAAI,CAAC;YAEhB,uEAAuE;YAChE,iBAAW,GAAgC,oBAAoB,CAAC;YAEvE,0GAA0G;YACnG,gBAAU,GAA8C,IAAI,KAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC;YAK9F,qDAAqD;YAC9C,oBAAc,GACf,IAAI,QAAQ,CAAC,0BAA0B,CAAsC,aAAa,CAAC,cAAc,CAAC,CAAC;YAGvG,gBAAU,GAAG,UAAC,OAAa,EAAE,MAAY,IAAK,OAAA,IAAI,UAAU,CAAC,SAAS,CAAC,OAAO,EAAE,MAAM,CAAC,EAAzC,CAAyC,CAAC;;QAIlG,CAAC;QAZD,uHAAuH;QACzG,4BAAc,GAAG,IAAI,QAAQ,CAAC,0BAA0B,CAAsC,QAAQ,CAAC,mBAAmB,CAAC,aAAa,CAAC,CAAC;QAY5J,oBAAC;KAhCD,AAgCC,CAhCkC,QAAQ,CAAC,iBAAiB,GAgC5D;IAhCY,4BAAa,gBAgCzB,CAAA;AACL,CAAC,EAvCM,cAAc,KAAd,cAAc,QAuCpB;AC3CD,sDAAsD;AAEtD,oCAAoC;AAEpC,IAAO,cAAc,CA6CpB;AAjDD,sDAAsD;AAEtD,oCAAoC;AAEpC,WAAO,cAAc;IAEjB,IAAiB,eAAe,CAU/B;IAVD,WAAiB,eAAe;QAC5B;YAA6B,2BAAoC;YAAjE;;YAAoE,CAAC;YAAD,cAAC;QAAD,CAApE,AAAqE,CAAxC,QAAQ,CAAC,UAAU,GAAqB;QAAxD,uBAAO,UAAiD,CAAA;QACrE;YAA8C,4CAAoC;YAAlF;gBAAA,qEAOC;gBANU,qBAAe,GAAsC,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;gBACzE,eAAS,GAAG;oBACf,IAAI,GAAG,GAAQ,EAAE,CAAC;oBAClB,GAAG,CAAC,eAAe,GAAG,KAAI,CAAC,eAAe,EAAE,CAAC;oBAC7C,OAAO,GAAG,CAAC;gBACf,CAAC,CAAA;;YACL,CAAC;YAAD,+BAAC;QAAD,CAPA,AAOC,CAP6C,QAAQ,CAAC,UAAU,GAOhE;QAPY,wCAAwB,2BAOpC,CAAA;IACL,CAAC,EAVgB,eAAe,GAAf,8BAAe,KAAf,8BAAe,QAU/B;IAED;QAA8B,4BAA2C;QA2BrE;YAAA,YACI,iBAAO,SACV;YA5Be,eAAS,GAAW,MAAM,CAAC;YAC3B,mBAAa,GAAW,OAAO,CAAC;YACzC,kBAAY,GAAW,IAAI,CAAC;YAC5B,eAAS,GAA8B,UAAU,CAAC,IAAI,CAAC;YAEvD,YAAM,GAGF,IAAI,CAAC;YAEhB,uEAAuE;YAChE,iBAAW,GAA2B,eAAe,CAAC;YAE7D,0GAA0G;YACnG,gBAAU,GAAyC,IAAI,KAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC;YAKzF,gDAAgD;YACzC,oBAAc,GACf,IAAI,QAAQ,CAAC,0BAA0B,CAA4B,QAAQ,CAAC,cAAc,CAAC,CAAC;YAGxF,gBAAU,GAAG,UAAC,OAAa,EAAE,MAAY,IAAK,OAAA,IAAI,UAAU,CAAC,IAAI,CAAC,OAAO,EAAE,MAAM,CAAC,EAApC,CAAoC,CAAC;;QAI7F,CAAC;QAZD,kHAAkH;QACpG,uBAAc,GAAG,IAAI,QAAQ,CAAC,0BAA0B,CAA4B,QAAQ,CAAC,mBAAmB,CAAC,aAAa,CAAC,CAAC;QAYlJ,eAAC;KA9BD,AA8BC,CA9B6B,QAAQ,CAAC,iBAAiB,GA8BvD;IA9BY,uBAAQ,WA8BpB,CAAA;AACL,CAAC,EA7CM,cAAc,KAAd,cAAc,QA6CpB;ACjDD,sDAAsD;AAEtD,oCAAoC;AAEpC,IAAO,UAAU,CAsMhB;AA1MD,sDAAsD;AAEtD,oCAAoC;AAEpC,WAAO,UAAU;IAEb;QAA0B,wBAAsB;QAsJ5C,cAAY,OAAgB,EAAE,MAAyD;YAAvF,YACI,kBAAM,MAAM,CAAC,SAwChB;YA9Le,eAAS,GAAG,MAAM,CAAC;YACnB,oBAAc,GAAe,IAAI,CAAC;YAClC,sBAAgB,GAAG,MAAM,CAAC;YAC1B,mBAAa,GAAG,OAAO,CAAC;YACxB,oBAAc,GAAG,OAAO,CAAC;YAMzC,mDAAmD;YAC5C,oBAAc,GACf,IAAI,QAAQ,CAAC,sBAAsB,CAAO,IAAI,CAAC,cAAc,CAAC,CAAC;YAErE,uEAAuE;YAChE,iBAAW,GAA0C,cAAc,CAAC,eAAe,CAAC;YAGpF,eAAS,GAAsC,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;YACnE,cAAQ,GAAsC,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;YAClE,kBAAY,GAAsC,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;YACtE,oBAAc,GAAuC,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;YACzE,iBAAW,GAAsC,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;YACrE,0BAAoB,GAAuC,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;YAC/E,sBAAgB,GAAuC,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;YAC3E,uBAAiB,GAAsC,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;YAC3E,gBAAU,GAA6C,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;YAC3E,mBAAa,GAAuC,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;YACxE,kBAAY,GAAsC,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;YACtE,oBAAc,GAAsC,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;YACxE,YAAM,GAAkD,EAAE,CAAC,eAAe,CAAC,EAAE,CAAC,CAAC;YAC/E,WAAK,GAA6C,EAAE,CAAC,eAAe,CAAC,EAAE,CAAC,CAAC;YACzE,QAAE,GAAsC,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;YAInE,2BAA2B;YACpB,iBAAW,GAAG,UAAC,QAAyB;gBAC3C,IAAI,OAAO,GAAG,IAAI,WAAA,SAAS,EAAE,CAAC;gBAC9B,IAAI,OAAM,CAAC,QAAQ,CAAC,IAAI,SAAS,EAAC;oBAC9B,OAAO,CAAC,cAAc,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC;iBACpD;gBACD,OAAO,CAAC,MAAM,GAAG,KAAI,CAAC;gBACtB,OAAO,CAAC,gBAAgB,GAAG,KAAI,CAAC,MAAM,CAAC;gBACvC,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;gBACzB,OAAO,CAAC,MAAM,CAAC,KAAI,CAAC,EAAE,EAAE,CAAC,CAAC;gBAC1B,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;gBAC1B,OAAO,OAAO,CAAC;YACnB,CAAC,CAAC;YAMF,uFAAuF;YAChF,mBAAa,GAA6B,EAAE,CAAC,QAAQ,CACxD,cAAM,OAAA,KAAI,CAAC,cAAc,CAAC,WAAW,EAAE,GAAG,iCAAiC,GAAG,KAAI,CAAC,EAAE,EAAE,EAAjF,CAAiF,EACvF,IAAI,EAAE,EAAE,eAAe,EAAE,IAAI,EAAE,CAClC,CAAC;YAKF;;;;;;cAME;YACK,iBAAW,GAAG,UAAC,IAAS,EAAE,KAAsB,EAAE,sBAAsC;gBAA9D,sBAAA,EAAA,aAAsB;gBAAE,uCAAA,EAAA,6BAAsC;gBAC3F,IAAI,CAAC,IAAI,IAAI,CAAC,CAAC,KAAK,IAAI,KAAI,CAAC,SAAS,EAAE,CAAC;oBAAE,OAAO;gBAClD,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;gBACrB,cAAc;gBACd,KAAI,CAAC,IAAI,GAAG,IAAI,CAAC,EAAE,CAAC;gBACpB,KAAI,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;gBACjB,kCAAkC;gBAClC,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,EAAE;oBACrB,2BAA2B;oBAC3B,QAAQ,CAAC,iBAAiB,CAAC,YAAY,CAAC,KAAI,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,EAAE,WAAA,SAAS,EAAE,KAAI,EAAE,sBAAsB,CAAC,CAAC;iBACpH;gBACD,IAAI,IAAI,CAAC,KAAK,IAAI,IAAI,EAAE;oBACpB,2BAA2B;oBAC3B,QAAQ,CAAC,iBAAiB,CAAC,YAAY,CAAC,KAAI,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,EAAE,WAAA,IAAI,EAAE,KAAI,EAAE,sBAAsB,CAAC,CAAC;iBAC7G;gBAED,0CAA0C;gBAC1C,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;gBAC/B,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;gBAC7B,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;gBACrC,KAAI,CAAC,cAAc,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;gBACzC,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;gBACnC,KAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC;gBACrD,KAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;gBAC7C,KAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;gBAC/C,IAAI,IAAI,CAAC,UAAU,IAAI,IAAI;oBAAE,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;qBAC9C,IAAI,KAAI,CAAC,UAAU,EAAE,IAAI,IAAI,IAAI,KAAI,CAAC,UAAU,EAAG,CAAC,OAAO,EAAE,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,OAAO,EAAE,EAAC;oBACtG,KAAI,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;iBACtD;gBACD,KAAI,CAAC,aAAa,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;gBACvC,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;gBACrC,KAAI,CAAC,cAAc,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;gBACzC,IAAI,KAAI,CAAC,cAAc,CAAC,aAAa,EAAE,EAAC;oBACpC,KAAI,CAAC,cAAc,CAAC,aAAa,EAAE,CAAC,KAAW,CAAC,CAAC;iBACpD;gBACD,KAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;gBACtB,KAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;gBACpB,IAAI,KAAI,CAAC,cAAc,CAAC,qBAAqB,EAAE;oBAAE,KAAI,CAAC,QAAQ,EAAE,CAAC;YACrE,CAAC,CAAC;YAEF,2EAA2E;YACpE,eAAS,GAAG;gBACf,IAAI,GAAG,GAAQ,EAAE,CAAC;gBAClB,GAAG,CAAC,EAAE,GAAG,KAAI,CAAC,EAAE,EAAE,CAAC;gBAEnB,GAAG,CAAC,SAAS,GAAG,KAAI,CAAC,SAAS,EAAE,CAAC;gBACjC,GAAG,CAAC,QAAQ,GAAG,KAAI,CAAC,QAAQ,EAAE,CAAC;gBAC/B,GAAG,CAAC,YAAY,GAAG,KAAI,CAAC,YAAY,EAAE,CAAC;gBACvC,GAAG,CAAC,cAAc,GAAG,KAAI,CAAC,cAAc,EAAE,CAAC;gBAC3C,GAAG,CAAC,WAAW,GAAG,KAAI,CAAC,WAAW,EAAE,CAAC;gBACrC,GAAG,CAAC,oBAAoB,GAAG,KAAI,CAAC,oBAAoB,EAAE,CAAC;gBACvD,GAAG,CAAC,gBAAgB,GAAG,KAAI,CAAC,gBAAgB,EAAE,CAAC;gBAC/C,GAAG,CAAC,iBAAiB,GAAG,KAAI,CAAC,iBAAiB,EAAE,CAAC;gBACjD,IAAI,CAAC,KAAI,CAAC,UAAU,EAAE;oBAAE,GAAG,CAAC,UAAU,GAAG,IAAI,CAAC;;oBACzC,GAAG,CAAC,UAAU,GAAG,KAAI,CAAC,UAAU,EAAG,CAAC,MAAM,CAAC,uBAAuB,CAAC,CAAC;gBACzE,GAAG,CAAC,YAAY,GAAG,KAAI,CAAC,YAAY,EAAE,CAAC;gBACvC,GAAG,CAAC,cAAc,GAAG,KAAI,CAAC,cAAc,EAAE,CAAC;gBAE3C,OAAO,GAAG,CAAC;YACf,CAAC,CAAA;YAED;;;cAGE;YACK,kBAAY,GAAG,UAAC,QAAqB;gBACxC,IAAI,YAAY,GAAG,CAAC,CAAC;gBACrB,IAAI,YAAY,IAAI,CAAC,IAAI,OAAM,CAAC,QAAQ,CAAC,IAAI,UAAU,EAAE;oBAAE,QAAQ,EAAE,CAAC;iBAAE;YAC5E,CAAC,CAAC;YAaE,KAAI,CAAC,cAAc,EAAE,CAAC;YACtB,IAAM,IAAI,GAAG,KAAI,CAAC;YAIlB,oEAAoE;YACpE,IAAI,WAAyC,CAAC;YAC9C,KAAI,CAAC,UAAU,GAAG,UAAS,aAAoB;gBAApB,8BAAA,EAAA,oBAAoB;gBAC3C,IAAI,CAAC,WAAW,EAAE;oBACd,WAAW,GAAG,IAAI,cAAc,CAAC,aAAa,EAAE,CAAC;oBACjD,IAAI,aAAa;wBAAE,cAAc,EAAE,CAAC;oBACpC,IAAI,CAAC,EAAE,CAAC,SAAS,CAAC,cAAc,CAAC,CAAA;iBACpC;gBACD,OAAO,WAAW,CAAC;YACvB,CAAC,CAAA;YACD;gBACI,IAAI,IAAI,CAAC,EAAE,EAAE,EAAE;oBACX,WAAW,CAAC,WAAW,GAAG,gBAAgB,GAAG,IAAI,CAAC,EAAE,EAAE,CAAC;oBACvD,WAAW,CAAC,IAAI,EAAE,CAAC;iBACtB;YACL,CAAC;YAID,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YACxC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YACvC,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YAC3C,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YAC7C,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YAC1C,IAAI,CAAC,oBAAoB,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YACnD,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YAC/C,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YAChD,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YACzC,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YAC3C,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YAE7C,IAAI,OAAO,EAAE;gBACT,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;aACnC;;QACL,CAAC;QAlDM,8BAAe,GAAtB;YACI,IAAI,IAAI,CAAC,MAAM,KAAK,IAAI;gBAAE,OAAO;YACjC,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC,UAAU,CAAC,KAAK,CAAC;gBAC9B,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE,MAAM,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,EAAE,CAAC;aACrD,CAAC,CAAC;YACH,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC,UAAU,CAAC,KAAK,CAAC,EACnC,CAAC,CAAC;QACP,CAAC;QA7ID,8GAA8G;QAChG,mBAAc,GACtB,IAAI,QAAQ,CAAC,sBAAsB,CAAO,QAAQ,CAAC,mBAAmB,CAAC,SAAS,CAAC,CAAC;QAuL5F,WAAC;KAhMD,AAgMC,CAhMyB,QAAQ,CAAC,aAAa,GAgM/C;IAhMY,eAAI,OAgMhB,CAAA;AAIL,CAAC,EAtMM,UAAU,KAAV,UAAU,QAsMhB;AC1MD,sDAAsD;AAEtD,oCAAoC;AAEpC,IAAO,UAAU,CAgKhB;AApKD,sDAAsD;AAEtD,oCAAoC;AAEpC,WAAO,UAAU;IAEb;QAA+B,6BAAsB;QA0HjD,mBAAY,OAAgB,EAAE,MAA8D;YAA5F,YACI,kBAAM,MAAM,CAAC,SA8BhB;YAxJe,eAAS,GAAG,WAAW,CAAC;YACxB,oBAAc,GAAe,IAAI,CAAC;YAClC,sBAAgB,GAAG,YAAY,CAAC;YAChC,mBAAa,GAAG,YAAY,CAAC;YAC7B,oBAAc,GAAG,YAAY,CAAC;YAM9C,wDAAwD;YACjD,oBAAc,GACf,IAAI,QAAQ,CAAC,sBAAsB,CAAY,SAAS,CAAC,cAAc,CAAC,CAAC;YAE/E,uEAAuE;YAChE,iBAAW,GAA+C,cAAc,CAAC,oBAAoB,CAAC;YAG9F,YAAM,GAAsC,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;YAChE,UAAI,GAA+C,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;YACvE,eAAS,GAAsC,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;YACnE,gBAAU,GAAsC,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;YACpE,QAAE,GAAsC,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;YAcnE;;;;;;cAME;YACK,iBAAW,GAAG,UAAC,IAAS,EAAE,KAAsB,EAAE,sBAAsC;gBAA9D,sBAAA,EAAA,aAAsB;gBAAE,uCAAA,EAAA,6BAAsC;gBAC3F,IAAI,CAAC,IAAI,IAAI,CAAC,CAAC,KAAK,IAAI,KAAI,CAAC,SAAS,EAAE,CAAC;oBAAE,OAAO;gBAClD,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;gBACrB,cAAc;gBACd,KAAI,CAAC,IAAI,GAAG,IAAI,CAAC,EAAE,CAAC;gBACpB,KAAI,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;gBACjB,kCAAkC;gBAClC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;oBACZ,IAAI,IAAI,CAAC,MAAM,IAAI,KAAI,CAAC,MAAM,EAAE,EAAE;wBAC9B,KAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;qBACnB;iBACJ;qBAAM;oBACH,IAAI,CAAC,KAAI,CAAC,IAAI,EAAE,EAAC;wBACb,KAAI,CAAC,IAAI,CAAC,IAAI,WAAA,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,KAAI,CAAC,CAAC,CAAC;qBACxC;yBAAM;wBACH,KAAI,CAAC,IAAI,EAAG,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;qBACvC;oBACD,IAAI,KAAI,CAAC,MAAM,YAAY,WAAA,IAAI,IAAI,KAAI,CAAC,MAAM,KAAK,KAAI,CAAC,IAAI,EAAE,IAAI,KAAI,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,KAAI,CAAC,IAAI,EAAG,CAAC,EAAE,EAAE,EACvG;wBACI,KAAI,CAAC,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,EAAE,SAAS,EAAE,KAAK,CAAC,CAAC;qBACxD;iBACJ;gBAED,0CAA0C;gBAC1C,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;gBACzB,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;gBAC/B,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;gBACjC,IAAI,KAAI,CAAC,cAAc,CAAC,aAAa,EAAE,EAAC;oBACpC,KAAI,CAAC,cAAc,CAAC,aAAa,EAAE,CAAC,KAAW,CAAC,CAAC;iBACpD;gBACD,KAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;gBACtB,KAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;gBACpB,IAAI,KAAI,CAAC,cAAc,CAAC,qBAAqB,EAAE;oBAAE,KAAI,CAAC,QAAQ,EAAE,CAAC;YACrE,CAAC,CAAC;YAEF,2EAA2E;YACpE,eAAS,GAAG;gBACf,IAAI,GAAG,GAAQ,EAAE,CAAC;gBAClB,GAAG,CAAC,EAAE,GAAG,KAAI,CAAC,EAAE,EAAE,CAAC;gBAEnB,GAAG,CAAC,MAAM,GAAG,KAAI,CAAC,MAAM,EAAE,CAAC;gBAC3B,IAAI,CAAC,GAAG,CAAC,MAAM,IAAI,KAAI,CAAC,IAAI,EAAE,EAAE;oBAC5B,GAAG,CAAC,MAAM,GAAG,KAAI,CAAC,IAAI,EAAG,CAAC,EAAE,EAAE,CAAC;iBAClC;gBACD,GAAG,CAAC,SAAS,GAAG,KAAI,CAAC,SAAS,EAAE,CAAC;gBACjC,GAAG,CAAC,UAAU,GAAG,KAAI,CAAC,UAAU,EAAE,CAAC;gBAEnC,OAAO,GAAG,CAAC;YACf,CAAC,CAAA;YAED;;;cAGE;YACK,kBAAY,GAAG,UAAC,QAAqB;gBACxC,IAAI,YAAY,GAAG,CAAC,CAAC;gBACrB,uCAAuC;gBACvC,IAAI,KAAI,CAAC,IAAI,EAAE,IAAI,IAAI,IAAI,KAAI,CAAC,MAAM,EAAE,IAAI,IAAI,EAAE;oBAC9C,YAAY,EAAE,CAAC;oBACf,IAAI,OAAO,GAAG,IAAI,WAAA,IAAI,EAAE,CAAC;oBACzB,OAAO,CAAC,IAAI,CAAC,KAAI,CAAC,MAAM,EAAE,EAAE;wBACxB,YAAY,EAAE,CAAC;wBACf,KAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;wBACnB,IAAI,YAAY,IAAI,CAAC,IAAI,OAAM,CAAC,QAAQ,CAAC,IAAI,UAAU,EAAE;4BAAE,QAAQ,EAAE,CAAC;yBAAE;oBAC5E,CAAC,CAAC,CAAC;iBACN;gBACD,IAAI,YAAY,IAAI,CAAC,IAAI,OAAM,CAAC,QAAQ,CAAC,IAAI,UAAU,EAAE;oBAAE,QAAQ,EAAE,CAAC;iBAAE;YAC5E,CAAC,CAAC;YAaE,KAAI,CAAC,cAAc,EAAE,CAAC;YACtB,IAAM,IAAI,GAAG,KAAI,CAAC;YAElB,KAAI,CAAC,QAAQ,GAAG,EAAE,CAAC,YAAY,CAAC;gBAC5B,IAAI,IAAI,CAAC,IAAI,EAAE,IAAI,IAAI,CAAC,IAAI,EAAG,CAAC,EAAE,EAAE,EAAE;oBAClC,OAAO,IAAI,CAAC,IAAI,EAAG,CAAC,EAAE,EAAG,CAAC,QAAQ,EAAE,CAAC;iBACxC;qBAAM;oBACH,OAAO,MAAM,CAAC;iBACjB;YACL,CAAC,CAAC,CAAC;YAKH,KAAI,CAAC,cAAc,GAAG,UAAS,QAAa;gBACxC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,EAAE;oBACd,IAAI,CAAC,IAAI,CAAC,IAAI,WAAA,IAAI,EAAE,CAAC,CAAC;iBACzB;gBACD,IAAI,CAAC,IAAI,EAAG,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAA;YACrC,CAAC,CAAC;YAEF,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YACrC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YACnC,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YACxC,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YAEzC,IAAI,OAAO,EAAE;gBACT,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;aACnC;;QACL,CAAC;QAxCM,mCAAe,GAAtB;YACI,IAAI,IAAI,CAAC,MAAM,KAAK,IAAI;gBAAE,OAAO;YACjC,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC,UAAU,CAAC,KAAK,CAAC;gBAC9B,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,QAAQ,EAAE,EAAC,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE,mBAAmB,EAAC,EAAE,CAAC;aACjF,CAAC,CAAC;YACH,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC,UAAU,CAAC,KAAK,CAAC,EACnC,CAAC,CAAC;QACP,CAAC;QAjHD,mHAAmH;QACrG,wBAAc,GACtB,IAAI,QAAQ,CAAC,sBAAsB,CAAY,QAAQ,CAAC,mBAAmB,CAAC,SAAS,CAAC,CAAC;QAiJjG,gBAAC;KA1JD,AA0JC,CA1J8B,QAAQ,CAAC,aAAa,GA0JpD;IA1JY,oBAAS,YA0JrB,CAAA;AAIL,CAAC,EAhKM,UAAU,KAAV,UAAU,QAgKhB;ACpKD,sDAAsD;AAEtD,oCAAoC;AAEpC,IAAO,cAAc,CAuCpB;AA3CD,sDAAsD;AAEtD,oCAAoC;AAEpC,WAAO,cAAc;IAEjB,IAAiB,oBAAoB,CAEpC;IAFD,WAAiB,oBAAoB;QACjC;YAA6B,2BAAyC;YAAtE;;YAAyE,CAAC;YAAD,cAAC;QAAD,CAAzE,AAA0E,CAA7C,QAAQ,CAAC,UAAU,GAA0B;QAA7D,4BAAO,UAAsD,CAAA;IAC9E,CAAC,EAFgB,oBAAoB,GAApB,mCAAoB,KAApB,mCAAoB,QAEpC;IAED;QAAmC,iCAAgD;QA6B/E;YAAA,YACI,iBAAO,SACV;YA9Be,eAAS,GAAW,WAAW,CAAC;YAChC,mBAAa,GAAW,YAAY,CAAC;YAC9C,kBAAY,GAAW,IAAI,CAAC;YAC5B,eAAS,GAAmC,UAAU,CAAC,SAAS,CAAC;YAEjE,YAAM,GAKF,IAAI,CAAC;YAEhB,uEAAuE;YAChE,iBAAW,GAAgC,oBAAoB,CAAC;YAEvE,0GAA0G;YACnG,gBAAU,GAA8C,IAAI,KAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC;YAK9F,qDAAqD;YAC9C,oBAAc,GACf,IAAI,QAAQ,CAAC,0BAA0B,CAAsC,aAAa,CAAC,cAAc,CAAC,CAAC;YAGvG,gBAAU,GAAG,UAAC,OAAa,EAAE,MAAY,IAAK,OAAA,IAAI,UAAU,CAAC,SAAS,CAAC,OAAO,EAAE,MAAM,CAAC,EAAzC,CAAyC,CAAC;;QAIlG,CAAC;QAZD,uHAAuH;QACzG,4BAAc,GAAG,IAAI,QAAQ,CAAC,0BAA0B,CAAsC,QAAQ,CAAC,mBAAmB,CAAC,aAAa,CAAC,CAAC;QAY5J,oBAAC;KAhCD,AAgCC,CAhCkC,QAAQ,CAAC,iBAAiB,GAgC5D;IAhCY,4BAAa,gBAgCzB,CAAA;AACL,CAAC,EAvCM,cAAc,KAAd,cAAc,QAuCpB;AC3CD,sDAAsD;AAEtD,oCAAoC;AAEpC,IAAO,cAAc,CAyDpB;AA7DD,sDAAsD;AAEtD,oCAAoC;AAEpC,WAAO,cAAc;IAEjB,IAAiB,eAAe,CAY/B;IAZD,WAAiB,eAAe;QAC5B;YAA6B,2BAAoC;YAAjE;;YAAoE,CAAC;YAAD,cAAC;QAAD,CAApE,AAAqE,CAAxC,QAAQ,CAAC,UAAU,GAAqB;QAAxD,uBAAO,UAAiD,CAAA;QACrE;YAA8C,4CAAoC;YAAlF;gBAAA,qEAOC;gBANU,qBAAe,GAAsC,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;gBACzE,eAAS,GAAG;oBACf,IAAI,GAAG,GAAQ,EAAE,CAAC;oBAClB,GAAG,CAAC,eAAe,GAAG,KAAI,CAAC,eAAe,EAAE,CAAC;oBAC7C,OAAO,GAAG,CAAC;gBACf,CAAC,CAAA;;YACL,CAAC;YAAD,+BAAC;QAAD,CAPA,AAOC,CAP6C,QAAQ,CAAC,UAAU,GAOhE;QAPY,wCAAwB,2BAOpC,CAAA;QACD;YAA6C,2CAAoC;YAAjF;;YACA,CAAC;YAAD,8BAAC;QAAD,CADA,AACC,CAD4C,QAAQ,CAAC,UAAU,GAC/D;QADY,uCAAuB,0BACnC,CAAA;IACL,CAAC,EAZgB,eAAe,GAAf,8BAAe,KAAf,8BAAe,QAY/B;IAED;QAA8B,4BAA2C;QAqCrE;YAAA,YACI,iBAAO,SACV;YAtCe,eAAS,GAAW,MAAM,CAAC;YAC3B,mBAAa,GAAW,OAAO,CAAC;YACzC,kBAAY,GAAW,IAAI,CAAC;YAC5B,eAAS,GAA8B,UAAU,CAAC,IAAI,CAAC;YAEvD,YAAM,GAaF,IAAI,CAAC;YAEhB,uEAAuE;YAChE,iBAAW,GAA2B,eAAe,CAAC;YAE7D,0GAA0G;YACnG,gBAAU,GAAyC,IAAI,KAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC;YAKzF,gDAAgD;YACzC,oBAAc,GACf,IAAI,QAAQ,CAAC,0BAA0B,CAA4B,QAAQ,CAAC,cAAc,CAAC,CAAC;YAGxF,gBAAU,GAAG,UAAC,OAAa,EAAE,MAAY,IAAK,OAAA,IAAI,UAAU,CAAC,IAAI,CAAC,OAAO,EAAE,MAAM,CAAC,EAApC,CAAoC,CAAC;;QAI7F,CAAC;QAZD,kHAAkH;QACpG,uBAAc,GAAG,IAAI,QAAQ,CAAC,0BAA0B,CAA4B,QAAQ,CAAC,mBAAmB,CAAC,aAAa,CAAC,CAAC;QAYlJ,eAAC;KAxCD,AAwCC,CAxC6B,QAAQ,CAAC,iBAAiB,GAwCvD;IAxCY,uBAAQ,WAwCpB,CAAA;AACL,CAAC,EAzDM,cAAc,KAAd,cAAc,QAyDpB;AC7DD,sDAAsD;AAEtD,oCAAoC;AAEpC,IAAO,UAAU,CAmGhB;AAvGD,sDAAsD;AAEtD,oCAAoC;AAEpC,WAAO,UAAU;IAEb;QAAgC,8BAAsB;QA8ElD,oBAAY,OAAgB,EAAE,MAA+D;YAA7F,YACI,kBAAM,MAAM,CAAC,SAahB;YA3Fe,eAAS,GAAG,YAAY,CAAC;YACzB,oBAAc,GAAe,QAAQ,CAAC;YACtC,sBAAgB,GAAG,aAAa,CAAC;YACjC,mBAAa,GAAG,aAAa,CAAC;YAC9B,oBAAc,GAAG,aAAa,CAAC;YAM/C,yDAAyD;YAClD,oBAAc,GACf,IAAI,QAAQ,CAAC,sBAAsB,CAAa,UAAU,CAAC,cAAc,CAAC,CAAC;YAEjF,uEAAuE;YAChE,iBAAW,GAAgD,cAAc,CAAC,qBAAqB,CAAC;YAGhG,YAAM,GAAsC,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;YAChE,YAAM,GAAsC,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;YAQvE;;;;;;cAME;YACK,iBAAW,GAAG,UAAC,IAAS,EAAE,KAAsB,EAAE,sBAAsC;gBAA9D,sBAAA,EAAA,aAAsB;gBAAE,uCAAA,EAAA,6BAAsC;gBAC3F,IAAI,CAAC,IAAI,IAAI,CAAC,CAAC,KAAK,IAAI,KAAI,CAAC,SAAS,EAAE,CAAC;oBAAE,OAAO;gBAClD,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;gBACrB,cAAc;gBACd,KAAI,CAAC,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC;gBACxB,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;gBACzB,kCAAkC;gBAElC,0CAA0C;gBAC1C,IAAI,KAAI,CAAC,cAAc,CAAC,aAAa,EAAE,EAAC;oBACpC,KAAI,CAAC,cAAc,CAAC,aAAa,EAAE,CAAC,KAAW,CAAC,CAAC;iBACpD;gBACD,KAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;gBACtB,KAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;gBACpB,IAAI,KAAI,CAAC,cAAc,CAAC,qBAAqB,EAAE;oBAAE,KAAI,CAAC,QAAQ,EAAE,CAAC;YACrE,CAAC,CAAC;YAEF,2EAA2E;YACpE,eAAS,GAAG;gBACf,IAAI,GAAG,GAAQ,EAAE,CAAC;gBAClB,GAAG,CAAC,MAAM,GAAG,KAAI,CAAC,MAAM,EAAE,CAAC;gBAG3B,OAAO,GAAG,CAAC;YACf,CAAC,CAAA;YAED;;;cAGE;YACK,kBAAY,GAAG,UAAC,QAAqB;gBACxC,IAAI,YAAY,GAAG,CAAC,CAAC;gBACrB,IAAI,YAAY,IAAI,CAAC,IAAI,OAAM,CAAC,QAAQ,CAAC,IAAI,UAAU,EAAE;oBAAE,QAAQ,EAAE,CAAC;iBAAE;YAC5E,CAAC,CAAC;YAYE,KAAI,CAAC,cAAc,EAAE,CAAC;YACtB,IAAM,IAAI,GAAG,KAAI,CAAC;YAQlB,IAAI,OAAO,EAAE;gBACT,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;aACnC;;QACL,CAAC;QAtBM,oCAAe,GAAtB;YACI,IAAI,IAAI,CAAC,MAAM,KAAK,IAAI;gBAAE,OAAO;YACjC,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC,UAAU,CAAC,KAAK,CAAC,EACjC,CAAC,CAAC;YACH,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC,UAAU,CAAC,KAAK,CAAC,EACnC,CAAC,CAAC;QACP,CAAC;QArED,oHAAoH;QACtG,yBAAc,GACtB,IAAI,QAAQ,CAAC,sBAAsB,CAAa,QAAQ,CAAC,mBAAmB,CAAC,SAAS,CAAC,CAAC;QAoFlG,iBAAC;KA7FD,AA6FC,CA7F+B,QAAQ,CAAC,aAAa,GA6FrD;IA7FY,qBAAU,aA6FtB,CAAA;AAIL,CAAC,EAnGM,UAAU,KAAV,UAAU,QAmGhB;ACvGD,sDAAsD;AAEtD,oCAAoC;AAEpC,IAAO,cAAc,CAqCpB;AAzCD,sDAAsD;AAEtD,oCAAoC;AAEpC,WAAO,cAAc;IAEjB,IAAiB,qBAAqB,CAErC;IAFD,WAAiB,qBAAqB;QAClC;YAA6B,2BAA0C;YAAvE;;YAA0E,CAAC;YAAD,cAAC;QAAD,CAA1E,AAA2E,CAA9C,QAAQ,CAAC,UAAU,GAA2B;QAA9D,6BAAO,UAAuD,CAAA;IAC/E,CAAC,EAFgB,qBAAqB,GAArB,oCAAqB,KAArB,oCAAqB,QAErC;IAED;QAAoC,kCAAiD;QA2BjF;YAAA,YACI,iBAAO,SACV;YA5Be,eAAS,GAAW,YAAY,CAAC;YACjC,mBAAa,GAAW,aAAa,CAAC;YAC/C,kBAAY,GAAW,QAAQ,CAAC;YAChC,eAAS,GAAoC,UAAU,CAAC,UAAU,CAAC;YAEnE,YAAM,GAGF,IAAI,CAAC;YAEhB,uEAAuE;YAChE,iBAAW,GAAiC,qBAAqB,CAAC;YAEzE,0GAA0G;YACnG,gBAAU,GAA+C,IAAI,KAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC;YAK/F,sDAAsD;YAC/C,oBAAc,GACf,IAAI,QAAQ,CAAC,0BAA0B,CAAwC,cAAc,CAAC,cAAc,CAAC,CAAC;YAG1G,gBAAU,GAAG,UAAC,OAAa,EAAE,MAAY,IAAK,OAAA,IAAI,UAAU,CAAC,UAAU,CAAC,OAAO,EAAE,MAAM,CAAC,EAA1C,CAA0C,CAAC;;QAInG,CAAC;QAZD,wHAAwH;QAC1G,6BAAc,GAAG,IAAI,QAAQ,CAAC,0BAA0B,CAAwC,QAAQ,CAAC,mBAAmB,CAAC,aAAa,CAAC,CAAC;QAY9J,qBAAC;KA9BD,AA8BC,CA9BmC,QAAQ,CAAC,iBAAiB,GA8B7D;IA9BY,6BAAc,iBA8B1B,CAAA;AACL,CAAC,EArCM,cAAc,KAAd,cAAc,QAqCpB","file":"app.js","sourcesContent":["/// <reference path=\"../coalesce.dependencies.d.ts\" />\n// Coalesce.Utilities\n\n// Turn off AJAX Caching\n$.ajaxSetup({ cache: false });\n\nmodule Coalesce {\n    // Create a sub namespace.\n    export module Utilities {\n        var busyOverlayTimeout = 0;\n        var busyDepth = 0;\n        var _isBusyEnabled = true;\n\n        export function getClassName(object: any): string {\n            if (typeof object !== 'object') throw \"Target of getClassName must be an object\";\n            // This matches both pre-es2015 constructors and es2015 class ctor tostring() results.\n            var funcNameRegex = /^(?:function|class) ([^\\s\\(\\)]+)/;\n            var results = (funcNameRegex).exec(object.constructor.toString());\n            return (results && results.length > 1) ? results[1] : \"\";\n        };\n\n        // Turn on or off the busy indicator as a whole\n        export function isBusyEnabled(value: boolean) {\n            if (!value) {\n                clearTimeout(busyOverlayTimeout);\n                busyOverlayTimeout = 0;\n                $('#busy-overlay').fadeOut(100);\n            }\n            _isBusyEnabled = value;\n        };\n\n        export function hideBusy() {\n            if (_isBusyEnabled) {\n                busyDepth--;\n                if (busyDepth === 0) {\n                    clearTimeout(busyOverlayTimeout);\n                    busyOverlayTimeout = 0;\n                    $('#busy-overlay').fadeOut(100);\n                }\n            }\n        };\n\n        export function showBusy() {\n            // Wait for 200 MS before showing the busy indicator.\n            if (_isBusyEnabled) {\n                busyDepth++;\n                if (busyOverlayTimeout === 0) {\n                    busyOverlayTimeout = setTimeout(showBusyNow, 200);\n                }\n            }\n        };\n\n        function showBusyNow() {\n            $('#busy-overlay').fadeIn(100);\n            //clearTimeout(busyOverlayFailureTimeout);\n            //busyOverlayFailureTimeout = setTimeout(busyFailed, busyOverlayFailureTimeoutInSeconds * 1000);\n        }\n\n        // Get a URL parameter by name.\n        export function GetUrlParameter(sParam: string): string | null {\n            var sPageUrl = window.location.search.substring(1);\n            var sUrlVariables = sPageUrl.split('&');\n            for (var i = 0; i < sUrlVariables.length; i++) {\n                var sParameterName = sUrlVariables[i].split('=');\n                if (sParameterName[0] == sParam) {\n                    return decodeURIComponent(sParameterName[1]);\n                }\n            }\n            if (sParam === \"id\" || sParam === \"Id\" || sParam === \"ID\") {\n                // The id was used as the last part of the actual URL.\n                var paths = window.location.pathname.split('/');\n                var lastPath = paths[paths.length - 1];\n                if ($.isNumeric(lastPath)) {\n                    return decodeURIComponent(lastPath);\n                }\n            }\n            return null;\n        }\n\n        export function SetUrlParameter(url: string, paramName: string, paramValue: string) {\n            paramValue = encodeURIComponent(paramValue);\n            var hash = location.hash;\n            url = url.replace(hash, '');\n            if (url.indexOf(paramName + \"=\") >= 0) {\n                var prefix = url.substring(0, url.indexOf(paramName));\n                var suffix = url.substring(url.indexOf(paramName));\n                suffix = suffix.substring(suffix.indexOf(\"=\") + 1);\n                suffix = (suffix.indexOf(\"&\") >= 0) ? suffix.substring(suffix.indexOf(\"&\")) : \"\";\n                url = prefix + paramName + \"=\" + paramValue + suffix;\n            }\n            else {\n                if (url.indexOf(\"?\") < 0)\n                    url += \"?\" + paramName + \"=\" + paramValue;\n                else\n                    url += \"&\" + paramName + \"=\" + paramValue;\n            }\n            return url + hash;\n        }\n\n        export function capitalizeFirstLetter(string: string) {\n            if (string) return string.charAt(0).toUpperCase() + string.slice(1);\n            else return string;\n        }\n\n        export function lowerFirstLetter(string: string) {\n            if (string) return string.charAt(0).toLowerCase() + string.slice(1);\n            else return string; \n        }\n\n        // Saves the values of inputs into the DOM element.\n        // This is used to serialize the DOM for storage with the values.\n        export function saveValuesInDom() {\n            $('input:text').each(function (i, item) {\n                $(item).attr('value', $(item).val() as string);\n            });\n\n            $('textarea').each(function (i, item) {\n                $(item).html($(item).val() as string);\n            });\n\n            $('input:checkbox').each(function (i, item) {\n                if ((<HTMLInputElement>item).checked) {\n                    $(item).attr('checked', 'checked');\n                } else {\n                    $(item).removeAttr('checked');\n                }\n            });\n        }\n    }\n\n    export module ModalHelpers {\n        export function setupPlainModal(content: string): void {\n            content = '\\\n                <div id=\"modal-dialog\" class=\"modal fade\">\\\n                  <div class=\"modal-dialog\">\\\n                    <div class=\"modal-content\">' +\n            content + '\\\n                    </div><!-- /.modal-content -->\\\n                  </div><!-- /.modal-dialog -->\\\n                </div><!-- /.modal -->\\\n            ';\n\n            // Remove the old one.\n            $('#modal-dialog').remove();\n            // Add this to the DOM\n            $('body').append(content);\n        }\n\n        export function setupModal(title: string, content: string, hideSave: boolean, hideClose: boolean): void {\n            content = '\\\n                <div class=\"modal-header\">\\\n                  <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\"><span aria-hidden=\"true\">&times;</span></button>\\\n                  <h3 class=\"modal-title\">' +\n            title + '\\\n                  </h3>\\\n                </div>\\\n                <div class=\"modal-body\">' +\n            content + '\\\n                </div>\\\n                <div class=\"modal-footer\">' +\n            (hideClose ? '' : '\\\n                  <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\">Close</button>\\\n                    ') +\n            (hideSave ? '' : '\\\n                  <button type=\"button\" class=\"btn btn-primary\">Save</button>\\\n                    ') + '\\\n                </div>\\\n            ';\n\n            setupPlainModal(content);\n        }\n    }\n}\n\n","/// <reference path=\"../coalesce.dependencies.d.ts\" />\n\n\nmodule Coalesce {\n\n    export interface EnumValue {\n        id: number;\n        value: string;\n    }\n\n    interface ComputedConfiguration<T> extends KnockoutComputed<T> {\n        raw: () => T\n    };\n\n    interface CoalesceConfiguration {\n        [prop: string]: ComputedConfiguration<any> | any | undefined;\n    }\n\n    class CoalesceConfiguration {\n        protected parentConfig?: CoalesceConfiguration;\n\n        constructor(parentConfig?: CoalesceConfiguration) {\n            this.parentConfig = parentConfig;\n        }\n\n        protected prop = function <TProp>(this: CoalesceConfiguration, name: string): ComputedConfiguration<TProp> {\n            const k = \"_\" + name;\n            const raw = this[k] = ko.observable<TProp>(null);\n            var computed: ComputedConfiguration<TProp>;\n            computed = ko.computed<TProp>({\n                deferEvaluation: true, // This is essential. If not deferred, the observable will be immediately evaluated without parentConfig being set.\n                read: () => {\n                    var rawValue = raw();\n                    if (rawValue !== null) return rawValue;\n\n                    if (this.parentConfig && this.parentConfig[name as string]) {\n                        return this.parentConfig[name as string]();\n                    }\n\n                    return null;\n                },\n                write: raw\n            }) as any as ComputedConfiguration<TProp>;\n            computed.raw = raw;\n            return computed;\n        }\n\n        /**\n            Gets the underlying observable that stores the object's explicit configuration value.\n        */\n        public raw = (name: keyof this): KnockoutObservable<any> | undefined => {\n            return (this as any)[\"_\" + name];\n        }\n    }\n\n    class ModelConfiguration<T> extends CoalesceConfiguration {\n        /** The relative url where the API may be found. */\n        public baseApiUrl = this.prop<string>(\"baseApiUrl\");\n        /** The relative url where the generated views may be found. */\n        public baseViewUrl = this.prop<string>(\"baseViewUrl\");\n        /** Whether or not the callback specified for onFailure will be called or not. */\n        public showFailureAlerts = this.prop<boolean>(\"showFailureAlerts\");\n\n        /** A callback to be called when a failure response is received from the server. */\n        public onFailure = this.prop<(object: T, message: string) => void>(\"onFailure\");\n        /** A callback to be called when an AJAX request begins. */\n        public onStartBusy = this.prop<(object: T) => void>(\"onStartBusy\");\n        /** A callback to be called when an AJAX request completes. */\n        public onFinishBusy = this.prop<(object: T) => void>(\"onFinishBusy\");\n    }\n\n    export class ViewModelConfiguration<T extends BaseViewModel> extends ModelConfiguration<T> {\n        /** Time to wait after a change is seen before auto-saving (if autoSaveEnabled is true). Acts as a debouncing timer for multiple simultaneous changes. */\n        public saveTimeoutMs = this.prop<number>(\"saveTimeoutMs\");\n\n        /** Determines whether changes to a model will be automatically saved after saveTimeoutMs milliseconds have elapsed. */\n        public autoSaveEnabled = this.prop<boolean>(\"autoSaveEnabled\");\n\n        /** Determines whether or not changes to many-to-many collection properties will automatically trigger a save call to the server or not. */\n        public autoSaveCollectionsEnabled = this.prop<boolean>(\"autoSaveCollectionsEnabled\");\n\n        /** Whether to invoke onStartBusy and onFinishBusy during saves. */\n        public showBusyWhenSaving = this.prop<boolean>(\"showBusyWhenSaving\");\n\n        /** Whether or not to reload the ViewModel with the state of the object received from the server after a call to .save(). */\n        public loadResponseFromSaves = this.prop<boolean>(\"loadResponseFromSaves\");\n\n        /**\n            Whether or not to reload the ViewModel with the state of the object recieved from the server after a call to .deleteItem().\n            This only applies to delete calls which respond with an object, which can be done through the model's behaviors.\n        */\n        public loadResponseFromDeletes = this.prop<boolean>(\"loadResponseFromDeletes\");\n\n        /**\n            Whether or not the object should be removed from its parent after a call to /delete is made where the object is returned in the response.\n            If no object is recieved from a /delete call, this option has no effect - it will always be removed from its parent in these cases.\n        */\n        public removeFromParentAfterSoftDelete = this.prop<boolean>(\"removeFromParentAfterSoftDelete\");\n\n        /**\n            Whether or not to validate the model after loading it from a DTO from the server.\n            Disabling this can improve performance in some cases.\n        */\n        public validateOnLoadFromDto = this.prop<boolean>(\"validateOnLoadFromDto\");\n\n        /**\n            Whether or not validation on a ViewModel should be setup in its constructor,\n            or if validation must be set up manually by calling viewModel.setupValidation().\n            Turning this off can improve performance in read-only scenarios.\n        */\n        public setupValidationAutomatically = this.prop<boolean>(\"setupValidationAutomatically\");\n\n        /**\n            An optional callback to be called when an object is loaded from a response from the server.\n            Callback will be called after all properties on the ViewModel have been set from the server response.\n        */\n        public onLoadFromDto = this.prop<(object: T) => void>(\"onLoadFromDto\");\n\n        /**\n            The dataSource (either an instance or a type) that will be used as the initial\n            dataSource when a new object of this type is created.\n            Not valid for global configuration; recommended to be used on class-level configuration.\n            E.g. ViewModels.MyModel.coalesceConfig.initialDataSource(MyModel.dataSources.MyDataSource);\n        */\n        public initialDataSource = this.prop<DataSource<T> | (new () => DataSource<T>)>(\"initialDataSource\");\n    }\n\n    export class ListViewModelConfiguration<T extends BaseListViewModel<TItem>, TItem extends BaseViewModel> extends ModelConfiguration<T> {\n    }\n\n    export class ServiceClientConfiguration<T extends ServiceClient> extends ModelConfiguration<T> {\n    }\n\n    export class AppConfiguration extends CoalesceConfiguration {\n\n        /**\n            A theme to specify on select2 instances created by Coalesce's select2-based bindings.\n        */\n        public select2Theme = this.prop<string | null>(\"select2Theme\");\n    }\n\n    class RootConfig extends ModelConfiguration<any> {\n        /** Application-wide configuration that does not pertain to any models. */\n        public readonly app = new AppConfiguration();\n        public readonly viewModel = new ViewModelConfiguration<BaseViewModel>(this);\n        public readonly listViewModel = new ListViewModelConfiguration<BaseListViewModel<BaseViewModel>, BaseViewModel>(this);\n        public readonly serviceClient = new ServiceClientConfiguration<ServiceClient>(this);\n    }\n\n    const invalidPropFunc: () => any = function () { if (arguments.length) throw \"property is not valid at this level\"; return null; };\n    const invalidProp: any = invalidPropFunc;\n    invalidProp.raw = invalidProp;\n\n    export const GlobalConfiguration = new RootConfig();\n    GlobalConfiguration.app.select2Theme(null);\n\n    GlobalConfiguration.baseApiUrl(\"/api\");\n    GlobalConfiguration.baseViewUrl(\"\");\n    GlobalConfiguration.showFailureAlerts(true);\n    GlobalConfiguration.onFailure((obj, message) => alert(message));\n    GlobalConfiguration.onStartBusy(obj => Coalesce.Utilities.showBusy());\n    GlobalConfiguration.onFinishBusy(obj => Coalesce.Utilities.hideBusy());\n\n    GlobalConfiguration.viewModel.saveTimeoutMs(500);\n    GlobalConfiguration.viewModel.autoSaveEnabled(true);\n    GlobalConfiguration.viewModel.autoSaveCollectionsEnabled(true);\n    GlobalConfiguration.viewModel.showBusyWhenSaving(false);\n    GlobalConfiguration.viewModel.loadResponseFromSaves(true);\n    GlobalConfiguration.viewModel.loadResponseFromDeletes(true);\n    GlobalConfiguration.viewModel.removeFromParentAfterSoftDelete(false);\n    GlobalConfiguration.viewModel.validateOnLoadFromDto(true);\n    GlobalConfiguration.viewModel.setupValidationAutomatically(true);\n    GlobalConfiguration.viewModel.initialDataSource = invalidProp;\n\n    ko.validation.init({\n        grouping: {\n            deep: false,\n            live: true,\n            observable: true\n        }\n    });\n\n    export interface LoadableViewModel {\n        loadFromDto: (data: object) => void;\n        parent: object | null;\n        parentCollection: object | null;\n    }\n\n    export interface ClientMethodParent {\n        coalesceConfig: ModelConfiguration<this>;\n        apiController: string;\n    }\n\n    export interface ApiResult {\n        wasSuccessful: boolean;\n        message?: string;\n    }\n\n    export interface ValidationIssue {\n        property: string;\n        issue: string;\n    }\n\n    export interface ItemResult<T = any> extends ApiResult {\n        object?: T;\n        validationIssues?: ValidationIssue[];\n    }\n\n    export interface ListResult extends ApiResult {\n        list?: any[];\n        page: number;\n        pageSize: number;\n        pageCount: number;\n        totalCount: number;\n    }\n\n    export abstract class ClientMethod<TParent extends ClientMethodParent, TResult> {\n        public abstract readonly name: string;\n\n        /** HTTP method to be used when calling the API endpoint. */\n        public readonly verb: string = \"POST\";\n\n        /** Result of method strongly typed in a observable. */\n        public result: KnockoutObservable<TResult> = ko.observable<TResult>(null);\n\n        /** Raw result object of method simply wrapped in an observable. */\n        public rawResult: KnockoutObservable<ItemResult | null> = ko.observable(null);\n\n        /** True while the method is being called */\n        public isLoading: KnockoutObservable<boolean> = ko.observable<boolean>(false);\n\n        /** Error response when method has failed. */\n        public message: KnockoutObservable<string> = ko.observable<string>(null);\n\n        /** True if last invocation of method was successful. */\n        public wasSuccessful: KnockoutObservable<boolean | null> = ko.observable(null);\n\n        constructor (protected parent: TParent) { }\n\n        protected abstract loadResponse: (data: ApiResult, callback?: (result: TResult) => void, reload?: boolean) => void;\n\n        protected loadStandardResponse = (data: ApiResult) => { /* Nothing, normally. Other abstract derived classes can use this for non-specific result loading. */ };\n\n        protected invokeWithData(postData: object, callback?: (result: TResult) => void, reload?: boolean) {\n            this.isLoading(true);\n            this.message('');\n            this.wasSuccessful(null);\n            return $.ajax({\n                method: this.verb,\n                url: this.parent.coalesceConfig.baseApiUrl() + this.parent.apiController + '/' + this.name,\n                data: postData,\n                xhrFields: { withCredentials: true }\n            })\n                .done((data: ApiResult) => {\n                    // This is here because it was migrated from the old client method calls.\n                    // Whether or not this should be done remains to be see, but it was kept to reduce\n                    // the number of breaking changes being made.\n                    if (this.parent instanceof BaseViewModel)\n                        this.parent.isDirty(false);\n\n                    this.rawResult(data);\n                    this.message('');\n                    this.wasSuccessful(true);\n                    this.loadStandardResponse(data);\n                    this.loadResponse(data, callback, reload);\n                })\n                .fail((xhr) => {\n                    var errorMsg = \"Unknown Error\";\n                    if (xhr.responseJSON && xhr.responseJSON.message) errorMsg = xhr.responseJSON.message;\n                    this.wasSuccessful(false);\n                    this.message(errorMsg);\n\n                    if (this.parent.coalesceConfig.showFailureAlerts()) {\n                        this.parent.coalesceConfig.onFailure()(this.parent, `Could not call method ${this.name}: ${errorMsg}`);\n                    }\n                })\n                .always(() => {\n                    this.isLoading(false);\n                });\n        }\n    }\n\n    export abstract class ClientListMethod<TParent extends ClientMethodParent, TResult> extends ClientMethod<TParent, TResult> {\n        /** Page number. */\n        public page: KnockoutObservable<number | null> = ko.observable(null);\n        /** Number of items on a page. */\n        public pageSize: KnockoutObservable<number | null> = ko.observable(null);\n        /** Total count of items, even ones that are not on the page. */\n        public totalCount: KnockoutObservable<number | null> = ko.observable(null);\n        /** Total page count */\n        public pageCount: KnockoutObservable<number | null> = ko.observable(null);\n\n        /** Raw result object of method simply wrapped in an observable. */\n        public rawResult: KnockoutObservable<ListResult | null> = ko.observable(null);\n\n        protected loadStandardResponse = (data: ApiResult) => {\n            const listResult = data as ListResult;\n            this.page(listResult.page);\n            this.pageSize(listResult.pageSize);\n            this.totalCount(listResult.totalCount);\n            this.pageCount(listResult.pageCount);\n        }\n    }\n\n    export abstract class DataSource<T extends BaseViewModel> {\n        protected _name: string;\n\n        public saveToDto: () => { [x: string]: string } = () => { return {}; }\n\n        // This is computed so we can subscribe to when the request to the server changes,\n        // and then reload objects/lists accordingly.\n        public getQueryString = ko.computed(() => {\n            var query = `dataSource=${this._name}`;\n\n            //&${$.param({ dataSource: this.saveToDto() }).replace(/dataSource%5B(.*?)%5D/g, 'dataSource.$1')}\n\n            var dto = this.saveToDto();\n            for (var key in dto) {\n                if (dto[key] !== null && dto[key] !== undefined) {\n                    query += `&dataSource.${key}=${encodeURIComponent(dto[key])}`\n                }\n            }\n            return query;\n        }, null, { deferEvaluation: true });\n\n        /**\n            Subscribe the given list to changes in the data source's parameters,\n            triggering a reload upon changed parameter values.\n        */\n        public subscribe = (list: BaseListViewModel<T>) => {\n            this.getQueryString.subscribe(() => {\n                if (list.isLoaded()) {\n                    list.delayedLoad(300);\n                }\n            })\n        }\n\n        constructor() {\n            this._name = Coalesce.Utilities.getClassName(this);\n        }\n    }\n\n    export abstract class ServiceClient {\n        public readonly abstract apiController: string;\n    }\n\n    export abstract class BaseViewModel implements LoadableViewModel, ClientMethodParent {\n\n        protected readonly abstract modelName: string;\n        protected readonly abstract modelDisplayName: string;\n\n        // Typing this property as keyof this prevents us from using BaseViewModel amorphously.\n        // It prevents assignment of an arbitrary derived type to a variable/parameter expecting BaseViewModel\n        // because primaryKeyName on a derived type is wider than it is on BaseViewModel.\n        protected readonly abstract primaryKeyName: string;\n\n        public readonly abstract apiController: string;\n        protected readonly abstract viewController: string;\n\n        /**\n            List of all possible data sources that can be set on the dataSource property.\n        */\n        public abstract dataSources: any;\n\n        /**\n            The custom data source that will be invoked on the server to provide the data for this list.\n        */\n        public dataSource: DataSource<this>;\n\n        /**\n            Properties which determine how this object behaves.\n        */\n        public abstract coalesceConfig: ViewModelConfiguration<this>;\n\n        /** Stack for number of times loading has been called. */\n        protected loadingCount: number = 0;\n        /** Stores the return value of setInterval for automatic save delays. */\n        protected saveTimeout: number = 0;\n\n\n        /** Callbacks to call after a save. */\n        protected saveCallbacks: Array<(self: this) => void> = [];\n\n        /**\n            String that will be passed to the server when loading and saving that allows for data trimming via C# Attributes.\n        */\n        public includes: string = \"\";\n\n        /**\n            If true, the busy indicator is shown when loading.\n            @deprecated Use coalesceConfig.showBusyWhenSaving instead.\n        */\n        get showBusyWhenSaving() { return this.coalesceConfig.showBusyWhenSaving() }\n        set showBusyWhenSaving(value) { this.coalesceConfig.showBusyWhenSaving(value) }\n\n        /**\n            Whether or not alerts should be shown when loading fails.\n            @deprecated Use coalesceConfig.showFailureAlerts instead.\n        */\n        get showFailureAlerts() { return this.coalesceConfig.showFailureAlerts() }\n        set showFailureAlerts(value) { this.coalesceConfig.showFailureAlerts(value) }\n\n        /** Parent of this object, if this object was loaded as part of a hierarchy. */\n        public parent: BaseViewModel | BaseListViewModel<this> | null;\n        /** Parent of this object, if this object was loaded as part of list of objects. */\n        public parentCollection: KnockoutObservableArray<this> | null = null;\n        /**\n            Primary Key of the object.\n            @deprecated Use the strongly-typed property of the key for this model whenever possible. This property will be removed once Coalesce supports composite keys.\n        */\n        public myId: any = 0;\n\n        /** Dirty Flag. Set when a value on the model changes. Reset when the model is saved or reloaded. */\n        public isDirty: KnockoutObservable<boolean> = ko.observable(false);\n        /** Contains the error message from the last failed call to the server. */\n        public errorMessage: KnockoutObservable<string | null> = ko.observable(null);\n\n        /**\n            If this is true, all changes will be saved automatically.\n            @deprecated Use coalesceConfig.autoSaveEnabled instead.\n        */\n        get isSavingAutomatically() { return this.coalesceConfig.autoSaveEnabled() }\n        set isSavingAutomatically(value) { this.coalesceConfig.autoSaveEnabled(value) }\n\n\n        /** Flag to use to determine if this item is shown. Provided for convenience. */\n        public isVisible: KnockoutObservable<boolean> = ko.observable(false);\n        /** Flag to use to determine if this item is expanded. Provided for convenience. */\n        public isExpanded: KnockoutObservable<boolean> = ko.observable(false);\n        /** Flag to use to determine if this item is selected. Provided for convenience. */\n        public isSelected: KnockoutObservable<boolean> = ko.observable(false);\n        /** Flag to use to determine if this item is checked. Provided for convenience. */\n        public isChecked: KnockoutObservable<boolean> = ko.observable(false);\n        /** Flag to use to determine if this item is being edited. Provided for convenience. */\n        public isEditing: KnockoutObservable<boolean> = ko.observable(false);\n\n        /** Toggles the isExpanded flag. Use with a click binding for a button. */\n        public toggleIsExpanded = (): void => this.isExpanded(!this.isExpanded());\n\n        /** Toggles the isEditing flag. Use with a click binding for a button. */\n        public toggleIsEditing = (): void => this.isEditing(!this.isEditing());\n\n        /** Toggles the isSelected flag. Use with a click binding for a button. */\n        public toggleIsSelected = (): void => this.isSelected(!this.isSelected());\n\n        /**\n            Sets isSelected(true) on this object and clears on the rest of the items in the parent collection.\n            @returns true to bubble additional click events.\n        */\n        public selectSingle = (): boolean => {\n            if (this.parentCollection && this.parentCollection()) {\n                $.each(this.parentCollection(), (i, obj) => {\n                    obj.isSelected(false);\n                });\n            }\n            this.isSelected(true);\n            return true; // Allow other click events\n        };\n\n\n        /** List of errors found during validation. Any errors present will prevent saving. */\n        public errors: KnockoutValidationErrors | null = null;\n        /** List of warnings found during validation. Saving is still allowed with warnings present. */\n        public warnings: KnockoutValidationErrors | null = null;\n\n        /** True if the object is currently saving. */\n        public isSaving: KnockoutObservable<boolean> = ko.observable(false);\n        /** Internal count of child objects that are saving. */\n        protected savingChildCount: KnockoutObservable<number> = ko.observable(0);\n\n        /** \n            Returns true if there are no client-side validation issues.\n            Saves will be prevented if this returns false.\n        */\n        public isValid = (): boolean => this.errors == null || this.errors().length == 0;\n\n        /**\n            Triggers any validation messages to be shown, and returns a bool that indicates if there are any validation errors.\n        */\n        public validate = (): boolean => {\n            if (this.errors) this.errors.showAllMessages();\n            if (this.warnings) this.warnings.showAllMessages();\n            return this.isValid();\n        };\n\n        /** Setup knockout validation on this ViewModel. This is done automatically unless disabled with setupValidationAutomatically(false) */\n        public abstract setupValidation(): void;\n\n        /** True if the object is loading. */\n        public isLoading: KnockoutObservable<boolean> = ko.observable(false);\n        /**  True once the data has been loaded. */\n        public isLoaded: KnockoutObservable<boolean> = ko.observable(false);\n        /** URL to a stock editor for this object. */\n        public editUrl: KnockoutComputed<string> = ko.pureComputed(() => {\n            return this.coalesceConfig.baseViewUrl() + this.viewController + \"/CreateEdit?id=\" + ((this as any)[this.primaryKeyName])();\n        });\n\n\n        /**\n          * Loads this object from a data transfer object received from the server.\n          * @param force - Will override the check against isLoading that is done to prevent recursion.\n          * @param allowCollectionDeletes - Set true when entire collections are loaded. True is the default.\n                In some cases only a partial collection is returned, set to false to only add/update collections.\n        */\n        public abstract loadFromDto: (data: any, force?: boolean, allowCollectionDeletes?: boolean) => void;\n\n        /** Saves this object into a data transfer object to send to the server. */\n        public abstract saveToDto: () => any;\n\n        /**\n            Loads any child objects that have an ID set, but not the full object.\n            This is useful when creating an object that has a parent object and the ID is set on the new child.\n        */\n        public abstract loadChildren: (callback?: () => void) => void;\n\n\n        /** Returns true if the current object, or any of its children, are saving. */\n        public isThisOrChildSaving: KnockoutComputed<boolean> = ko.computed(() => {\n            if (this.isSaving()) return true;\n            if (this.savingChildCount() > 0) return true;\n            return false;\n        });\n\n        // Handle children that are saving.\n        // Internally used member to count the number of saving children.\n        protected onSavingChildChange = (isSaving: boolean): void => {\n            if (isSaving)\n                this.savingChildCount(this.savingChildCount() + 1);\n            else\n                this.savingChildCount(this.savingChildCount() - 1);\n\n            if (this.parent instanceof BaseViewModel) {\n                this.parent.onSavingChildChange(isSaving);\n            }\n        };\n\n        /**\n            Saves the object to the server and then calls a callback.\n            Returns false if there are validation errors.\n        */\n        public save = (callback?: (self: this) => void): JQueryPromise<any> | boolean | undefined => {\n            if (!this.isLoading()) {\n                if (this.validate()) {\n                    if (this.coalesceConfig.showBusyWhenSaving()) this.coalesceConfig.onStartBusy()(this);\n                    this.isSaving(true);\n\n                    var url = `${this.coalesceConfig.baseApiUrl()}${this.apiController}/Save?includes=${this.includes}&${this.dataSource.getQueryString()}`\n\n                    return $.ajax({ method: \"POST\", url: url, data: this.saveToDto(), xhrFields: { withCredentials: true } })\n                        .done((data: ItemResult) => {\n                            this.isDirty(false);\n                            this.errorMessage(null);\n                            if (this.coalesceConfig.loadResponseFromSaves()) {\n                                this.loadFromDto(data.object, true);\n                            }\n                            // The object is now saved. Call any callback.\n                            for (var i in this.saveCallbacks) {\n                                this.saveCallbacks[i](this);\n                            }\n                        })\n                        .fail((xhr: JQueryXHR) => {\n                            var errorMsg = \"Unknown Error\";\n                            const data: ItemResult | null = xhr.responseJSON\n                            if (data && data.message) errorMsg = data.message;\n                            this.errorMessage(errorMsg);\n\n                            // If an object was returned, load that object.\n                            if (data && data.object) {\n                                this.loadFromDto(data.object, true);\n                            }\n                            if (this.coalesceConfig.showFailureAlerts())\n                                this.coalesceConfig.onFailure()(this, \"Could not save the item: \" + errorMsg);\n                        })\n                        .always(() => {\n                            this.isSaving(false);\n                            if (typeof(callback) == \"function\") {\n                                callback(this);\n                            }\n                            if (this.coalesceConfig.showBusyWhenSaving()) this.coalesceConfig.onFinishBusy()(this);\n                        });\n                }\n                else {\n                    // If validation fails, we still want to try and load any child objects which may have just been set.\n                    // Normally, we get these from the result of the save.\n                    this.loadChildren();\n                    return false;\n                }\n            }\n        }\n\n\n        /** Loads the object from the server based on the id specified. If no id is specified, the current id is used if one is set. */\n        public load = (id?: any, callback?: ((self: this) => void) | null): JQueryPromise<any> | undefined => {\n            if (!id) {\n                id = ((this as any)[this.primaryKeyName])();\n            }\n            if (id) {\n                this.isLoading(true);\n                this.coalesceConfig.onStartBusy()(this);\n\n                var url = `${this.coalesceConfig.baseApiUrl()}${this.apiController}/Get/${id}?includes=${this.includes}&${this.dataSource.getQueryString()}`\n                \n                return $.ajax({ method: \"GET\", url: url, xhrFields: { withCredentials: true } })\n                    .done((data: ItemResult) => {\n                        this.errorMessage(null);\n                        this.loadFromDto(data.object, true);\n                        this.isLoaded(true);\n                        if (typeof(callback) == \"function\") callback(this);\n                    })\n                    .fail((xhr: JQueryXHR) => {\n                        this.isLoaded(false);\n                        const data: ItemResult | null = xhr.responseJSON\n                        var errorMsg = \"Could not load \" + this.modelName + \" with ID = \" + id;\n                        if (data && data.message) errorMsg = data.message;\n\n                        this.errorMessage(errorMsg);\n                        if (this.coalesceConfig.showFailureAlerts())\n                            this.coalesceConfig.onFailure()(this, errorMsg);\n                    })\n                    .always(() => {\n                        this.coalesceConfig.onFinishBusy()(this);\n                        this.isLoading(false);\n                    });\n            }\n        };\n\n        /** Deletes the object without any prompt for confirmation. */\n        public deleteItem = (callback?: (self: this) => void): JQueryPromise<any> | undefined => {\n            var currentId = ((this as any)[this.primaryKeyName])();\n            if (currentId) {\n                return $.ajax({ method: \"POST\", url: this.coalesceConfig.baseApiUrl() + this.apiController + \"/Delete/\" + currentId, xhrFields: { withCredentials: true } })\n                    .done((data: ItemResult) => {\n                        this.errorMessage(null);\n\n                        if (data.object != null && this.coalesceConfig.loadResponseFromDeletes()) {\n                            this.loadFromDto(data.object, true);\n                        }\n\n                        // Remove it from the parent collection\n                        if (this.parentCollection && this.parent) {\n                            var shouldRemoveFromParent = (data.object == null || this.coalesceConfig.removeFromParentAfterSoftDelete());\n                            if (!shouldRemoveFromParent) {\n                                // be a Good Citizen and tell the user why the item they just deleted wasn't removed from the parent collection, as this isn't always super intuitive.\n                                console.warn(\"Deleted item was not removed from its parent because the API call returned an object and this.coalesceConfig.removeFromParentAfterSoftDelete() == false\")\n                            } else {\n                                this.parent.isLoading(true);\n                                this.parentCollection.splice(this.parentCollection().indexOf(this), 1);\n                                this.parent.isLoading(false);\n                            }\n                        }\n                    })\n                    .fail((xhr: JQueryXHR) => {\n                        var errorMsg = \"Could not delete the item\";\n                        const data: ItemResult | null = xhr.responseJSON\n                        if (data && data.message) errorMsg = data.message;\n\n                        this.errorMessage(errorMsg);\n                        if (this.coalesceConfig.showFailureAlerts())\n                            this.coalesceConfig.onFailure()(this, errorMsg);\n                    })\n                    .always(() => {\n                        if (typeof(callback) == \"function\") {\n                            callback(this);\n                        }\n                    });\n            } else {\n                // No ID has been assigned yet, just remove it.\n                if (this.parentCollection && this.parent) {\n                    this.parent.isLoading(true);\n                    this.parentCollection.splice(this.parentCollection().indexOf(this), 1);\n                    this.parent.isLoading(false);\n                }\n                if (typeof(callback) == \"function\") {\n                    callback(this);\n                }\n            }\n        };\n\n        /**\n            Deletes the object if a prompt for confirmation is answered affirmatively.\n        */\n        public deleteItemWithConfirmation = (callback?: () => void, message?: string): JQueryPromise<any> | undefined => {\n            if (typeof message != 'string') {\n                message = \"Delete this item?\";\n            }\n            if (confirm(message)) {\n                return this.deleteItem(callback);\n            }\n        };\n\n        /** Saves a many-to-many collection change. This is done automatically and doesn't need to be called. */\n        protected saveCollection = <TJoin extends BaseViewModel>(\n            operation: 'added' | 'deleted',\n            existingItems: KnockoutObservableArray<TJoin>,\n            constructor: new () => TJoin,\n            localIdProp: keyof TJoin,\n            foreignIdProp: keyof TJoin,\n            foreignId: any\n        ): JQueryPromise<any> | boolean | undefined => {\n\n            var currentId = ((this as any)[this.primaryKeyName])();\n\n            if (operation == 'added') {\n                var newItem = new constructor();\n                newItem.parent = this;\n                newItem.parentCollection = existingItems;\n                newItem.coalesceConfig.autoSaveEnabled(false);\n                (newItem[localIdProp] as any)(currentId);\n                (newItem[foreignIdProp] as any)(foreignId);\n                return newItem.save(() => {\n                    // Restore default autosave behavior.\n                    newItem.coalesceConfig.autoSaveEnabled(null);\n                    existingItems.push(newItem);\n                });\n            } else if (operation == 'deleted') {\n                var matchedItems = existingItems().filter((i: any) => i[localIdProp]() === currentId && i[foreignIdProp]() === foreignId);\n                if (matchedItems.length == 0) {\n                    throw `Couldn't find a ${constructor.toString()} object to delete with ${localIdProp}=${currentId} & ${foreignIdProp}=${foreignId}.`\n                } else {\n                    // If we matched more than one item, we're just going to operate on the first one.\n                    var matcheditem = matchedItems[0];\n                    return matcheditem.deleteItem();\n                }\n            }\n        };\n\n        /** Saves a many to many collection if coalesceConfig.autoSaveCollectionsEnabled is true. */\n        protected autoSaveCollection = <TJoin extends BaseViewModel>(\n            operation: string,\n            existingItems: KnockoutObservableArray<TJoin>,\n            constructor: new () => TJoin,\n            localIdProp: keyof TJoin,\n            foreignIdProp: keyof TJoin,\n            foreignId: any\n        ) => {\n            if (!this.isLoading() && this.coalesceConfig.autoSaveCollectionsEnabled()) {\n\n                // TODO: Eventually Batch saves for many-to-many collections.\n                if (operation != 'added' && operation != 'deleted') return;\n\n                this.saveCollection<TJoin>(operation, existingItems, constructor, localIdProp, foreignIdProp, foreignId);\n            }\n        };\n\n\n        /**\n            Register a callback to be called when a save is done.\n            @returns true if the callback was registered. false if the callback was already registered. \n        */\n        public onSave = (callback: (self: this) => void): boolean => {\n            if (typeof(callback) == \"function\" && !this.saveCallbacks.filter(c => c == callback).length) {\n                this.saveCallbacks.push(callback);\n                return true;\n            }\n            return false;\n        };\n\n        /** Saves the object is coalesceConfig.autoSaveEnabled is true. */\n        public autoSave = (): void => {\n            if (!this.isLoading()) {\n                this.isDirty(true);\n                if (this.coalesceConfig.autoSaveEnabled()) {\n                    // Batch saves.\n                    if (this.saveTimeout) clearTimeout(this.saveTimeout);\n                    this.saveTimeout = setTimeout(() => {\n                        this.saveTimeout = 0;\n                        // If we have a save in progress, wait...\n                        if (this.isSaving()) {\n                            this.autoSave();\n                        } else if (this.coalesceConfig.autoSaveEnabled()) {\n                            this.save();\n                        }\n                    }, this.coalesceConfig.saveTimeoutMs());\n                }\n            }\n        }\n\n        /**\n            Displays an editor for the object in a modal dialog.\n        */\n        public showEditor = (callback?: any): JQueryPromise<any> => {\n            // Close any existing modal\n            $('#modal-dialog').modal('hide');\n            // Get new modal content\n            this.coalesceConfig.onStartBusy()(this);\n            return $.ajax({\n                method: \"GET\",\n                url: this.coalesceConfig.baseViewUrl() + this.viewController + '/EditorHtml',\n                data: { simple: true },\n                xhrFields: { withCredentials: true }\n            })\n                .done((data) => {\n                    // Add to DOM\n                    Coalesce.ModalHelpers.setupModal('Edit ' + this.modelDisplayName, data, true, false);\n                    // Data bind\n                    var lastValue = this.coalesceConfig.autoSaveEnabled.raw();\n                    this.coalesceConfig.autoSaveEnabled(false);\n                    ko.applyBindings(this, document.getElementById(\"modal-dialog\"));\n                    this.coalesceConfig.autoSaveEnabled(lastValue);\n                    // Show the dialog\n                    $('#modal-dialog').modal('show');\n                    // Make the callback when the form closes.\n                    $(\"#modal-dialog\").on(\"hidden.bs.modal\", () => {\n                        if (typeof(callback) == \"function\") callback(this);\n                    });\n                })\n                .always(() => {\n                    this.coalesceConfig.onFinishBusy()(this);\n                });\n        }\n\n        /**\n            Common base-class level initialization that depends on all constructors being ran\n            (and therefore cannot be performed directly in the base constructor).\n        */\n        protected baseInitialize() {\n\n            var dataSource = this.coalesceConfig.initialDataSource.peek();\n            if (dataSource === null) {\n                this.dataSource = new this.dataSources.Default()\n            } else {\n                if (dataSource instanceof Coalesce.DataSource) {\n                    this.dataSource = dataSource\n                } else {\n                    this.dataSource = new dataSource();\n                }\n            }\n\n            if (this.coalesceConfig.setupValidationAutomatically.peek()) {\n                this.setupValidation();\n            }\n        }\n\n        constructor(parent?: Coalesce.BaseViewModel | Coalesce.BaseListViewModel<any> | null) {\n            this.parent = parent || null;\n\n            // Handles setting the parent savingChildChange\n            this.isSaving.subscribe((newValue: boolean) => {\n                if (this.parent instanceof BaseViewModel) {\n                    this.parent.onSavingChildChange(newValue);\n                }\n            })\n        }\n    }\n\n    export abstract class BaseListViewModel<TItem extends BaseViewModel> implements ClientMethodParent {\n\n        public readonly abstract modelName: string;\n        public readonly abstract apiController: string;\n\n        /**\n            List of all possible data sources that can be set on the dataSource property.\n        */\n        public abstract dataSources: any;\n\n        /**\n            The custom data source that will be invoked on the server to provide the data for this list.\n        */\n        public abstract dataSource: DataSource<TItem>;\n\n        /**\n            Name of the primary key of the model that this list represents.\n        */\n        public abstract modelKeyName: string;\n\n        // Reference to the class which this list represents.\n        protected abstract itemClass: new() => TItem;\n\n        /**\n            Properties which determine how this object behaves.\n        */\n        public abstract coalesceConfig: ListViewModelConfiguration<this, TItem>;\n\n        /**\n            Query string to append to the API call when loading the list of items.\n        */\n        public queryString: string = \"\";\n\n        /**\n            Object that contains property-level filters to be passed along to API calls.\n        */\n        public filter: any = null;\n\n        /** String that is used to control loading and serialization on the server. */\n        public includes: string = \"\";\n\n        /**\n            Whether or not alerts should be shown when loading fails.\n            @deprecated Use coalesceConfig.showFailureAlerts instead.\n        */\n        get showFailureAlerts() { return this.coalesceConfig.showFailureAlerts() }\n        set showFailureAlerts(value) { this.coalesceConfig.showFailureAlerts(value) }\n\n        /** The collection of items that have been loaded from the server. */\n        public items: KnockoutObservableArray<TItem> = ko.observableArray([]);\n\n        /**\n            Load the list using current parameters for paging, searching, etc\n            Result is placed into the items property.\n        */\n        public load = (callback?: any): JQueryPromise<any> => {\n            this.coalesceConfig.onStartBusy()(this);\n            this.isLoading(true);\n\n            var url = this.coalesceConfig.baseApiUrl() + this.apiController + \"/List?\" + this.queryParams('list');\n\n            return $.ajax({\n                method: \"GET\",\n                url: url,\n                xhrFields: { withCredentials: true }\n            })\n                .done((data: ListResult) => {\n                    const list = data.list || [];\n\n                    Coalesce.KnockoutUtilities.RebuildArray(this.items, list, this.modelKeyName, this.itemClass, this, true);\n                    $.each(this.items(), (_, model) => {\n                        model.includes = this.includes;\n                    });\n                    this.count(list.length);\n                    this.totalCount(data.totalCount);\n                    this.pageCount(data.pageCount);\n                    this.page(data.page);\n                    this.message(typeof(data.message) == \"string\" ? data.message : null);\n                    this.isLoaded(true);\n                    if (typeof(callback) == \"function\") callback(this);\n                })\n                .fail((xhr) => {\n                    var errorMsg = \"Unknown Error\";\n                    if (xhr.responseJSON && xhr.responseJSON.message) errorMsg = xhr.responseJSON.message;\n                    this.message(errorMsg);\n                    this.isLoaded(false);\n\n                    if (this.coalesceConfig.showFailureAlerts())\n                        this.coalesceConfig.onFailure()(this, \"Could not get list of \" + this.modelName + \" items: \" + errorMsg);\n                })\n                .always(() => {\n                    this.coalesceConfig.onFinishBusy()(this);\n                    this.isLoading(false);\n                });\n        };\n\n\n        /** Returns a query string built from the list's various properties, appropriate to the kind of parameters requested. */\n        public queryParams = (kind: 'dataSource' | 'filter' | 'list', pageSize?: number): string => {\n            var query = this.dataSource.getQueryString();\n\n            const param = (name: string, value: any) => {\n                if (value === null || value === undefined || value === \"\") {\n                    return;\n                }\n                query += `&${name}=${encodeURIComponent(value)}`;\n            };\n\n            param(\"includes\", this.includes);\n\n            if (kind == 'dataSource') return query;\n\n            if (this.queryString) query += \"&\" + this.queryString;\n\n            param(\"search\", this.search());\n\n            if (this.filter) {\n                for (var key in this.filter) {\n                    param(`filter.${key}`, this.filter[key]);\n                }\n            }\n\n            if (kind == 'filter') return query;\n\n            if (kind != 'list') throw \"unhandled kind \" + kind;\n\n            param(`page`, this.page());\n            param(`pageSize`, pageSize || this.pageSize());\n            param(`orderBy`, this.orderBy());\n            param(`orderByDescending`, this.orderByDescending());\n\n            return query;\n        };\n\n        /** Method which will instantiate a new item of the list's model type. */\n        protected abstract createItem: (newItem?: any, parent?: any) => TItem;\n\n        /** Adds a new item to the collection. */\n        public addNewItem = (): TItem => {\n            var item = this.createItem();\n            this.items.push(item);\n            return item;\n        };\n\n        /** Deletes an item. */\n        public deleteItem = (item: TItem): JQueryPromise<any> | undefined => {\n            return item.deleteItem();\n        };\n\n        /** True if the list is loading. */\n        public isLoading: KnockoutObservable<boolean> = ko.observable(false);\n\n        /** True once the list has been loaded. */\n        public isLoaded: KnockoutObservable<boolean> = ko.observable(false);\n\n        /** Gets the count of items without getting all the items. Result is placed into the count property. */\n        public getCount = (callback?: any): JQueryPromise<any> => {\n            this.coalesceConfig.onStartBusy()(this);\n            return $.ajax({\n                method: \"GET\",\n                url: this.coalesceConfig.baseApiUrl() + this.apiController + \"/Count?\" + this.queryParams('filter'),\n                xhrFields: { withCredentials: true }\n            })\n                .done((data: ItemResult<number>) => {\n                    this.count(data.object || 0);\n                    this.message(typeof(data.message) == \"string\" ? data.message : null);\n                    if (typeof(callback) == \"function\") callback();\n                })\n                .fail((xhr) => {\n                    var errorMsg = \"Unknown Error\";\n                    var result: ItemResult<number> = xhr.responseJSON;\n                    if (result && result.message) errorMsg = result.message;\n                    this.message(errorMsg);\n                    if (this.coalesceConfig.showFailureAlerts())\n                        this.coalesceConfig.onFailure()(this, \"Could not get count of \" + this.modelName + \" items: \" + errorMsg);\n                })\n                .always(() => {\n                    this.coalesceConfig.onFinishBusy()(this);\n                });\n        };\n\n        /** The result of getCount() or the total on this page. */\n        public count: KnockoutObservable<number | null> = ko.observable(null);\n        /** Total count of items, even ones that are not on the page. */\n        public totalCount: KnockoutObservable<number | null> = ko.observable(null);\n        /** Total page count */\n        public pageCount: KnockoutObservable<number | null> = ko.observable(null);\n        /** Page number. This can be set to get a new page. */\n        public page: KnockoutObservable<number> = ko.observable(1);\n        /** Number of items on a page. */\n        public pageSize: KnockoutObservable<number> = ko.observable(10);\n        /** If a load failed, this is a message about why it failed. */\n        public message: KnockoutObservable<string | null> = ko.observable(null);\n        /** Search criteria for the list. This can be exposed as a text box for searching. */\n        public search: KnockoutObservable<string> = ko.observable(\"\");\n\n        /** True if there is another page after the current page. */\n        public nextPageEnabled: KnockoutComputed<boolean> = ko.computed(() => this.page() < (this.pageCount() || 0));\n\n        /** True if there is another page before the current page. */\n        public previousPageEnabled: KnockoutComputed<boolean> = ko.computed(() => this.page() > 1);\n\n        /** Change to the next page */\n        public nextPage = (): void => {\n            if (this.nextPageEnabled()) {\n                this.page(this.page() + 1);\n            }\n        };\n\n        /** Change to the previous page */\n        public previousPage = (): void => {\n            if (this.previousPageEnabled()) {\n                this.page(this.page() - 1);\n            }\n        };\n\n\n        /** Name of a field by which this list will be loaded in ascending order */\n        public orderBy: KnockoutObservable<string> = ko.observable(\"\");\n\n        /** Name of a field by which this list will be loaded in descending order */\n        public orderByDescending: KnockoutObservable<string> = ko.observable(\"\");\n\n        /** Toggles sorting between ascending, descending, and no order on the specified field. */\n        public orderByToggle = (field: string): void => {\n            if (this.orderBy() == field && !this.orderByDescending()) {\n                this.orderBy('');\n                this.orderByDescending(field);\n            } else if (!this.orderBy() && this.orderByDescending() == field) {\n                this.orderBy('');\n                this.orderByDescending('');\n            } else {\n                this.orderBy(field);\n                this.orderByDescending('');\n            }\n        };\n\n        /** Returns URL to download a CSV for the current list with all items. */\n        public downloadAllCsvUrl: KnockoutComputed<string> = ko.computed<string>(() => {\n            var url = this.coalesceConfig.baseApiUrl() + this.apiController + \"/CsvDownload?\" + this.queryParams('list', 10000);\n            return url;\n        }, null, { deferEvaluation: true });\n\n        /** Prompts to the user for a file to upload as a CSV. */\n        public csvUploadUi = (callback?: () => void): void => {\n            // Remove the form if it exists.\n            $('#csv-upload').remove();\n            // Add the form to the page to take the input\n            $('body')\n                .append('<form id=\"csv-upload\" display=\"none\"></form>');\n            $('#csv-upload')\n                .attr(\"action\", this.coalesceConfig.baseApiUrl() + this.apiController + \"/CsvUpload\").attr(\"method\", \"post\")\n                .append('<input type=\"file\" style=\"visibility: hidden;\" name=\"file\"/>');\n\n            // Set up the click callback.\n            $('#csv-upload input[type=file]').change(() => {\n                // Get the files\n                var fileInput = $('#csv-upload input[type=file]')[0] as any;\n                var file = fileInput.files[0];\n                if (file) {\n                    var formData = new FormData();\n                    formData.append('file', file);\n                    this.coalesceConfig.onStartBusy()(this);\n                    this.isLoading(true);\n                    $.ajax({\n                        url: this.coalesceConfig.baseApiUrl() + this.apiController + \"/CsvUpload\",\n                        data: formData,\n                        processData: false,\n                        contentType: false,\n                        type: 'POST'\n                    } as any)\n                        .done((data) => {\n                            this.isLoading(false);\n                            if (typeof(callback) == \"function\") callback();\n                        })\n                        .fail((data) => {\n                            if (this.coalesceConfig.showFailureAlerts())\n                                this.coalesceConfig.onFailure()(this, \"CSV Upload Failed\");\n                        })\n                        .always(() => {\n                            this.load();\n                            this.coalesceConfig.onFinishBusy()(this);\n                        });\n                }\n                // Remove the form\n                $('#csv-upload').remove();\n            });\n            // Click on the input box\n            $('#csv-upload input[type=file]').click();\n        };\n\n        private loadTimeout: number = 0;\n\n        /** reloads the list after a slight delay (100ms default) to ensure that all changes are made. */\n        public delayedLoad = (milliseconds?: number): void => {\n            if (this.loadTimeout) {\n                clearTimeout(this.loadTimeout);\n            }\n            this.loadTimeout = setTimeout(() => {\n                this.loadTimeout = 0;\n                this.load();\n            }, milliseconds || 100);\n        }\n\n        public constructor() {\n            this.pageSize.subscribe(() => {\n                if (this.isLoaded()) {\n                    this.load();\n                }\n            });\n            this.page.subscribe(() => {\n                // Page is set while we're loading results - ignore changes while isLoading() == true\n                if (this.isLoaded() && !this.isLoading()) {\n                    this.delayedLoad(300);\n                }\n            });\n            this.search.subscribe(() => { if (this.isLoaded()) this.delayedLoad(300); });\n            this.orderBy.subscribe(() => { if (this.isLoaded()) this.delayedLoad(); });\n            this.orderByDescending.subscribe(() => { if (this.isLoaded()) this.delayedLoad(); });\n        }\n    }\n}","/// <reference path=\"../coalesce.dependencies.d.ts\" />\n\nmodule Coalesce {\n    export module KnockoutUtilities {\n\n        function BuildLookup<T>(array: T[], idField: string) {\n            const lookup: { [k: string]: T; } = {};\n            for (let i = 0; i < array.length; i++) {\n                const item = array[i];\n                const key = ko.unwrap((item as any)[idField]);\n\n                // If an item is missing a value for a key, we can't look it up.\n                // This is OK, because keyless items will never match an incoming item anyway.\n                if (key != null) lookup[key.toString()] = item;\n            }\n            return lookup;\n        }\n\n        function GetMatchingItem<U, T>(\n            originalContent: U[],\n            incomingItem: T,\n            incomingItemIndex: number,\n            originalLookup: { [k: string]: U; } | null = null,\n            idField: string | null = null,\n            equalityComparer: ((existingItem: U, incomingKey: any) => boolean) | null = null\n        ) {\n            var matchingItem: U | null;\n            if (idField) {\n                const key = ko.unwrap((incomingItem as any)[idField]);\n                if (originalLookup) {\n                    matchingItem = originalLookup[key.toString()];\n                } else {\n                    if (!equalityComparer) throw \"Equality comparer is required if no originalLookup is provided with an idField.\"\n                    const matchingItems = originalContent.filter(item => equalityComparer(item, key));\n\n                    if (matchingItems.length > 1) {\n                        // We have a problem because keys are duplicated.\n                        throw `Found duplicate items by key (name:${idField}) when rebuilding array.`\n                    } else {\n                        matchingItem = matchingItems.length > 0 ? matchingItems[0] : null;\n                    }\n                }\n            } else {\n                matchingItem = originalContent[incomingItemIndex];\n            }\n\n            return matchingItem;\n        }\n\n        // Function to marge two arrays based on data from the server\n        export function RebuildArray<U extends LoadableViewModel, T extends object>(\n            existingArray: KnockoutObservableArray<U>,\n            incomingArray: T[],\n            idField: string,\n            viewModelClass: new () => U,\n            parent: any,\n            allowCollectionDeletes: boolean = true,\n            equalityComparer: ((existingItem: U, incomingKey: any) => boolean) | null = null\n        ) {\n\n            var originalContent = existingArray() || [];\n\n            // We're going to build a new array from scratch.\n            // If we spliced and pushed the existing array one row at a time as needed,\n            // it performs much more slowly, and also rebuilds the DOM in realtime as that happens.\n            // This is because each push/splice triggers all subscribers to update.\n            // If there are expensive subscriptions (not just the DOM - custom application code as well),\n            // then performance drops off the edge of a cliff into a firey abyss.\n\n            // Knockout is smart enough when we update the value of existingArray with newArray\n            // to figure out exactly what changed, and will only rebuild the DOM as needed,\n            // instead of rebuilding the entire thing: http://stackoverflow.com/a/18050443.\n            // However, there will ALWAYS be one single notification to subscribers, even if we didn't actually change the array.\n            // If arrays are being rebuilt frequently, this \"false\" subscriber notification could be detrimental to performance.\n            // To prevent this from happening, at the bottom of this function we perform an array comparison before updating the final observable.\n            var newContent: Array<U> = [];\n\n            // If no specific equality comparison has been requested,\n            // use a hash table for O(1) lookups on a single key to prevent O(n^2) from nested for-loops.\n            let originalLookup: { [k: string]: U; } | null = null;\n            if (equalityComparer == null && idField) {\n                originalLookup = BuildLookup(originalContent, idField);\n            }\n\n            // Can't do for (var i in array) because IE sees new methods added on to the prototype as keys\n            for (let i = 0; i < incomingArray.length; i++) {\n                var inItem = incomingArray[i];\n                var matchingItem = GetMatchingItem(originalContent, inItem, i, originalLookup, idField, equalityComparer);\n\n                if (matchingItem == null) {\n                    // This is a brand new item that we don't already have an object for.\n                    // We need to construct a new object and stick it in our newArray.\n                    var newItem = new viewModelClass();\n                    newItem.loadFromDto(inItem);\n                    newItem.parent = parent;\n                    newItem.parentCollection = existingArray;\n                    newContent.push(newItem);\n                } else {\n                    // We already have an object for this item.\n                    // Stick the existing object into our new array, and then reload it from the DTO.\n                    newContent.push(matchingItem);\n\n                    // Only reload the item if it is not dirty. If it is dirty, there are user-made changes\n                    // that aren't yet saved that we shouldn't be overwriting.\n\n                    if (!(matchingItem instanceof BaseViewModel) || !matchingItem.isDirty()) {\n                        matchingItem.loadFromDto(inItem);\n                    }\n\n                    if (!allowCollectionDeletes) {\n                        // This item is already in the collection, and we're not allowing not-found items to be deleted from the collection.\n                        // We're going to do a pass of everything that was in the original collection at this end of this method,\n                        // where we'll add everything from the original collection to the new collection.\n                        // We need to remove the current item from the original collection so it doesn't get added again when we do that.\n                        originalContent.splice(originalContent.indexOf(matchingItem), 1);\n                    }\n                }\n            }\n\n            // If we are not allowing deletes.\n            if (!allowCollectionDeletes) {\n                // If we aren't allowing deletes, we need to add all items from the original collection\n                // to the new collection that we haven't already added. At this point, originalContent contains that set.\n\n                // Note that this used to only re-insert items that are dirty,\n                // but that didn't make any sense, and there was no comment that said why it was done that way.\n                // So, we're just going to add in everything from originalContent.\n                newContent.unshift(...originalContent);\n            }\n\n            if (newContent.length == originalContent.length &&\n                ko.utils.compareArrays(newContent, originalContent).every(c => c.status == \"retained\")) {\n                // Everything is the same (by doing a shallow equality check of the array - objects are checked by reference).\n                // Shallow equality check by reference is perfectly in line with the spec for ObservableArray.\n\n                // Do nothing.\n            } else {\n                // Something is different. Update the observable.\n                // See the comments at the top of this method for why we do this conditionally.\n                // Basically, its because this call ALWAYS notifies subscribers, but we can be more intelligent about it.\n                existingArray(newContent);\n            }\n        }\n\n\n        export function RebuildArrayInPlace<T>(\n            existingArray: KnockoutObservableArray<T>,\n            incomingArray: T[] | KnockoutObservableArray<T>,\n            idField?: string,\n            equalityComparer: ((existingItem: T, incomingKey: any) => boolean) | null = null\n        ) {\n            var incomingArrayUnwrapped = ko.unwrap(incomingArray);\n            var originalContent = existingArray().slice();\n\n            // If no specific equality comparison has been requested,\n            // use a hash table for O(1) lookups on a single key to prevent O(n^2) from nested for-loops.\n            let originalLookup: { [k: string]: T; } | null = null;\n            if (equalityComparer == null && idField) {\n                originalLookup = BuildLookup(originalContent, idField);\n            }\n\n            for (let i = 0; i < incomingArrayUnwrapped.length; i++) {\n                var inItem = incomingArrayUnwrapped[i];\n                var matchingItem = GetMatchingItem(originalContent, inItem, i, originalLookup, idField, equalityComparer);\n\n                if (matchingItem == null) {\n                    // Add this to the observable collection\n                    existingArray.push(inItem);\n                } else {\n                    // Remove this one from the copy so we don't remove it later.\n                    originalContent.splice(originalContent.indexOf(matchingItem), 1);\n                }\n            }\n\n            // Remove any items that we didn't find in the incoming array.\n            for (var i in originalContent) {\n                existingArray.splice(existingArray.indexOf(originalContent[i]), 1);\n            }\n        }\n    }\n}","/// <reference path=\"../coalesce.dependencies.d.ts\" />\n\n// Extend this class to have the right types.\ninterface KnockoutBindingHandlers {\n    select2Ajax: KnockoutBindingHandler;\n    select2AjaxMultiple: KnockoutBindingHandler;\n    select2AjaxText: KnockoutBindingHandler;\n    datePicker: KnockoutBindingHandler;\n    select2: KnockoutBindingHandler;\n    delaySave: KnockoutBindingHandler;\n    tooltip: KnockoutBindingHandler;\n    fadeVisible: KnockoutBindingHandler;\n    slideVisible: KnockoutBindingHandler;\n    moment: KnockoutBindingHandler & { defaults: any };\n    momentFromNow: KnockoutBindingHandler & { defaults: any };\n    booleanValue: KnockoutBindingHandler;\n    formatNumberText: KnockoutBindingHandler;\n}\n\n\n// Select2 binding for an object that uses an AJAX call for valid values. \nko.bindingHandlers.select2Ajax = {\n    init: function (element, valueAccessor, allBindings, viewModel, bindingContext) {\n        const url = allBindings.get('url');\n        const textField = Coalesce.Utilities.lowerFirstLetter(allBindings.get('textField'));\n        const idField = Coalesce.Utilities.lowerFirstLetter(allBindings.get('idField'));\n\n        const selectionFormat = allBindings.has(\"selectionFormat\") ? allBindings.get(\"selectionFormat\") : '{0}';\n        const format = allBindings.has(\"format\") ? allBindings.get(\"format\") : '{0}';\n        const setObject = allBindings.has(\"setObject\") ? allBindings.get(\"setObject\") : false;\n        const itemViewModel: new (newItem: object) => Coalesce.BaseViewModel = allBindings.get('itemViewModel');\n        const object: KnockoutObservable<Coalesce.BaseViewModel> = allBindings.has('object') ? allBindings.get('object') : null;\n        const selectOnClose = allBindings.has(\"selectOnClose\") ? allBindings.get(\"selectOnClose\") : false;\n        const openOnFocus = allBindings.has(\"openOnFocus\") ? allBindings.get(\"openOnFocus\") : false; // This doesn't work in IE (GE: 2016-09-27)\n        const allowClear = allBindings.has(\"allowClear\") ? allBindings.get(\"allowClear\") : true;\n        const placeholder = $(element).attr('placeholder') || \"select\";\n        const pageSize = allBindings.get('pageSize') || 25;\n\n        if (!url) throw \"select2Ajax requires additional binding 'url'\";\n        if (!textField) throw \"select2Ajax requires additional binding 'textField'\";\n        if (!idField) throw \"select2Ajax requires additional binding 'idField'\";\n        if (setObject && !itemViewModel)\n            throw \"select2Ajax with 'setObject' requires additional binding 'itemViewModel'.\"\n            + \" This should be a reference to the class of object being selected - e.g.ViewModels.Person.\";\n\n        interface ResultItem {\n            id: any,\n            text: string,\n            _apiObject: object\n        }\n\n        // Create the Select2\n        $(element)\n            .select2(<Select2Options>{\n                theme: Coalesce.GlobalConfiguration.app.select2Theme() || undefined,\n                ajax: {\n                    url: url,\n                    dataType: 'json',\n                    delay: 250,\n                    data: function (params: any) {\n                        var data: any = {\n                            search: params.term,\n                            page: params.page,\n                            pageSize: pageSize,\n                        };\n\n                        if (!setObject) {\n                            // If we're NOT going to populate the object observable with the results from our API call,\n                            // then its safe to only get the two fields that we need to populate the dropdown.\n                            // If we ARE going to set the object (setObject == true), then we should be requesting the entire object from the server.\n\n                            // There may be scenarios where you may want to set the object but still only want the two fields.\n                            // In this case, just specify \".../list?fields=field1,field2\" as part of the url in the binding.\n                            data.fields = idField + \",\" + textField;\n                        };\n\n                        if (!allBindings.has('cache') || allBindings.get('cache'))\n                            data[\"_\"] = new Date().getTime();\n                        return data;\n                    },\n                    processResults: function (data: any, params: any) {\n\n                        // Transform our objects into what select2 wants (it needs objects with a key \"id\").\n                        // We throw the raw object from the API on there as well so we can use it when handling a selection.\n                        var results = (data.list as any[]).map(item => {\n                            return {\n                                id: item[idField],\n                                text: item[textField] && item[textField].toString(),\n                                _apiObject: item,\n                            } as ResultItem;\n                        });\n\n\n                        // This doesn't seem to have ever worked. Params doesn't have a property named 'page'.\n                        // Leaving it commented out to maintain that there was some intention to do this, \n                        // but we seem to have gotten by just fine with out it up until now.\n\n                        //if (allowClear && params.page == 1) {\n                        //    // Add a blank item\n                        //    var blank = {\n                        //        id: 0, // This should probably not be 0, since 0 is a totally valid primary key.\n                        //        text: 'No Selection',\n                        //    };\n                        //    results.unshift(blank);\n                        //}\n\n                        return {\n                            results: results,\n                            pagination: {\n                                more: data.page < data.pageCount\n                            }\n                        };\n                    },\n                    cache: (allBindings.has('cache') ? allBindings.get('cache') : false).toString(),\n                },\n                placeholder: placeholder,\n                allowClear: allowClear,\n                selectOnClose: selectOnClose,\n                templateResult: function (item: any) {\n                    return format.replace('{0}',\n                        typeof item.text == \"string\" ? item.text :\n                            typeof item == \"string\" ? item : \"\"\n                    );\n                },\n                templateSelection: function (item: any) {\n                    return format.replace('{0}',\n                        typeof item.text == \"string\" ? item.text :\n                            typeof item == \"string\" ? item : \"\"\n                    );\n                },\n            })\n            .on(\"change\", function (e) {\n                // Code to update knockout\n                var value: string = $(element).val() as string;\n\n                // Loose equality is intentional - select2 always provides a string value when asked, \n                // but our observable is probably an integer number.\n                if (valueAccessor()() != value && (valueAccessor()() || value)) {\n\n                    // Just like we do in the .loadFromDto method in the generated ViewModels,\n                    // we load the object property first BEFORE we load the primary key.\n\n                    if (object) {\n                        // Set the object if such functionality is enabled\n                        if (setObject) {\n                            var selectedData = $(element).select2(\"data\");\n                            if (selectedData && selectedData.length > 0) {\n                                var result = (selectedData[0] as ResultItem)._apiObject;\n\n                                var oldObject = object();\n                                if (oldObject instanceof itemViewModel) {\n                                    oldObject.loadFromDto(result);\n                                    if (object.valueHasMutated) object.valueHasMutated();\n                                } else {\n                                    object(new itemViewModel(result));\n                                }\n                            } else {\n                                object(null);\n                            }\n                        }\n                        else {\n                            // Clear the object because we don't know anything about it.\n                            // It might be reloaded when the parent object is saved.\n                            object(null);\n                        }\n                    }\n\n                    // Set the ID.\n                    if (value) {\n                        valueAccessor()(value);\n                    } else {\n                        valueAccessor()(null);\n                    }\n                }\n            });\n\n        if (openOnFocus) {\n            $.data(element).select2.on(\"focus\", function () {\n                $(element).select2(\"open\");\n            });\n        }\n\n        // Add the validation message\n        const validationCore = ko.bindingHandlers['validationCore'];\n        if (!validationCore.init) throw \"Fatal: validationCore.init missing\"\n        validationCore.init(element, valueAccessor, allBindings, viewModel, bindingContext)\n\n        // The validation message needs to go after the new select2 dropdown, not before it.\n        $(element).next(\".validationMessage\").insertAfter($(element).nextAll(\".select2\").first());\n    },\n    update: function (element, valueAccessor, allBindings, viewModel, bindingContext) {\n        // See if the value exists. If not, we haven't loaded it from the server yet.\n        var clearOnNull = allBindings.get(\"clearOnNull\") || false;\n        var value = valueAccessor()();\n        var select2Value = $(element).val();\n        var setObject = allBindings.has(\"setObject\") ? allBindings.get(\"setObject\") : false;\n        var textField = Coalesce.Utilities.lowerFirstLetter(allBindings.get('textField'));\n        var idField = Coalesce.Utilities.lowerFirstLetter(allBindings.get('idField'));\n        var object: KnockoutObservable<any> = allBindings.get('object')\n\n        // See if something has changed\n        var option: HTMLOptionElement | undefined;\n        var triggerSelect2Change = false;\n\n        if (value) {\n            let options = $(element).find('option[value=\"' + value.toString().replace(/\"/g, '\\\\\"') + '\"]');\n            if (options.length > 0) option = options[0] as HTMLOptionElement;\n        } else {\n            let options = $(element).find('option[value=\"' + value + '\"]');\n            if (options.length > 0) option = options[0] as HTMLOptionElement;\n        }\n\n        if (!option) {\n            option = new Option();\n            option.value = value;\n            option.selected = true;\n            option.defaultSelected = true;\n\n            $(element).append(option);\n            triggerSelect2Change = true;\n        }\n\n\n        if (value === null && clearOnNull) {\n            $(element).val(\"\").trigger(\"change\");\n        } else {\n            // Add it based on the object.\n            var objectUnwrapped = ko.unwrap(object);\n            if (value && objectUnwrapped) {\n                // Get the raw key value from the object that we think represents the selected key.\n                var id = ko.unwrap(objectUnwrapped[idField]);\n                var text = ko.unwrap(objectUnwrapped[textField]);\n\n                // Check id == value here to make sure we're creating an option for the correct object.\n                // If the observable holding the ID changes but the object doesn't, then these won't match,\n                // and we would risk displaying the wrong data if we didn't check for this.\n                if (text && id && id == value) {\n                    option.text = text;\n                    triggerSelect2Change = true;\n                }\n            }\n        }\n\n        // Set the element based on the value in the model.\n        if (triggerSelect2Change) {\n\n            // When a change is triggered in select2, it doesn't update its internal option object\n            // to reflect the text of the HTMLOptionElement. So, we have to manually update it,\n            // taking care to only change it if the IDs match.\n            var select2Option = $(element).select2(\"data\")[0];\n            if (select2Option && select2Option.id == option.value) {\n                select2Option.text = option.text;\n            }\n\n            $(element).val(value).trigger('change');\n        }\n    }\n};\n\n// Multi-select Select2 binding that uses an AJAX call for the list of valid values.\nko.bindingHandlers.select2AjaxMultiple = {\n    init: function(element, valueAccessor, allBindings, viewModel, bindingContext) {\n        const url = allBindings.get('url');\n        const itemViewModel: new (newItem: object) => Coalesce.BaseViewModel = allBindings.get('itemViewModel');\n\n        // 'idFieldName' was the old name, kept for backwards compat. 'idField' is the new name.\n        const idField = Coalesce.Utilities.lowerFirstLetter(allBindings.get('idFieldName') || allBindings.get('idField'));\n        const textField = Coalesce.Utilities.lowerFirstLetter(allBindings.get('textFieldName') || allBindings.get('textField'));\n\n        if (!url) throw \"select2AjaxMultiple requires additional binding 'url'\";\n        if (!itemViewModel) throw \"select2AjaxMultiple requires additional binding 'itemViewModel'.\"\n            + \" This should be the class of the foreign end of the relationship - e.g.ViewModels.Case.\";\n        if (!idField) throw \"select2AjaxMultiple requires additional binding 'idField'\";\n        if (!textField) throw \"select2AjaxMultiple requires additional binding 'textField'\";\n\n        const selectionFormat = allBindings.has(\"selectionFormat\") ? allBindings.get(\"selectionFormat\") : '{0}';\n        const format = allBindings.has(\"format\") ? allBindings.get(\"format\") : '{0}';\n        const selectOnClose = allBindings.has(\"selectOnClose\") ? allBindings.get(\"selectOnClose\") : false;\n        const openOnFocus = allBindings.has(\"openOnFocus\") ? allBindings.get(\"openOnFocus\") : false;\n        const allowClear = allBindings.has(\"allowClear\") ? allBindings.get(\"allowClear\") : true;\n        const placeholder = $(element).attr('placeholder') || \"select\";\n        const pageSize = allBindings.get('pageSize') || 25;\n\n        interface ResultItem {\n            id: any,\n            text: string,\n            _apiObject?: object\n        }\n\n        // Create the Select2\n        $(element)\n            .select2(<Select2Options>{\n                theme: Coalesce.GlobalConfiguration.app.select2Theme() || undefined,\n                ajax: {\n                    url: url,\n                    dataType: 'json',\n                    delay: 250,\n                    data: function (params: any) {\n                        var data: any = {\n                            search: params.term,\n                            page: params.page\n                        };\n                        if (!allBindings.has('cache') || allBindings.get('cache'))\n                            data[\"_\"] = new Date().getTime();\n                        return data;\n                    },\n                    processResults: function (data: any, params: any) {\n                        // Transform our objects into what select2 wants (it needs objects with a key \"id\").\n                        // We throw the raw object from the API on there as well so we can use it when handling a selection.\n                        var results = (data.list as any[]).map(item => {\n                            return {\n                                id: item[idField],\n                                text: item[textField] && item[textField].toString(),\n                                _apiObject: item,\n                            } as ResultItem;\n                        });\n\n                        return {\n                            results: results,\n                            pagination: {\n                                more: data.page < data.pageCount\n                            }\n                        };\n                    },\n                    cache: (allBindings.has('cache') ? allBindings.get('cache') : false).toString(),\n                },\n                //escapeMarkup: function (markup) { return markup; }, // let our custom formatter work\n                //minimumInputLength: 1,\n                placeholder: placeholder,\n                selectOnClose: selectOnClose,\n                allowClear: allowClear,\n                templateResult: function (item: any) {\n                    if (item.Classes) {\n                        // This has a class use the formatting\n                        var optionElement = $('<span class=\"' + item.Classes + '\">' +\n                            format.replace('{0}', (typeof item.text == \"string\" ? item.text : item))\n                            + '</span>');\n                        return optionElement;\n                    }\n                    return format.replace('{0}', (typeof item.text == \"string\" ? item.text : item));\n                },\n                templateSelection: function (item: any) {\n                    //if (e.Classes) {\n                    //    // This has a class use the formatting\n                    //    var optionElement = $('<span class=\"' + e.Classes + '\">' +\n                    //        format.replace('{0}', (e[textFieldName] || e.text || e))\n                    //        + '</span>');\n                    //    return optionElement;\n                    //}\n                    return selectionFormat.replace('{0}', (item.text || item));\n                },\n            })\n            .on(\"change\", function (e) {\n                if ($(element).data(\"select2-ajax-updating\")) return;\n                $(element).data(\"select2-ajax-updating\", true);\n\n                // Code to update knockout\n                var selectedItems = $(element).select2(\"data\");\n                var values: KnockoutObservableArray<Coalesce.BaseViewModel> = valueAccessor();\n                if (values() && selectedItems && values().length != selectedItems.length) {\n                    // Add the items to the observable array.\n                    // Warning: this code is O(n^2), but n should always be very reasonably small (if its > 50, you shouldn't be using a control like this.)\n                    if (selectedItems.length > values().length) {\n                        // Item was added.\n                        for (var i = 0; i < selectedItems.length; i++) {\n                            var selectedItem = selectedItems[i];\n                            var found = false;\n                            for (var j = 0; j < values().length; j++) {\n                                var value = values()[j];\n                                found = found || (value.myId == selectedItem.id);\n                            }\n                            if (!found) {\n                                // This is the missing one.\n                                values.push(new itemViewModel(selectedItem._apiObject));\n                            }\n                        }\n                    } else if (selectedItems.length < values().length) {\n                        // Item was removed\n                        for (var i = 0; i < values().length; i++) {\n                            var value = values()[i];\n                            var found = false;\n                            for (var j = 0; j < selectedItems.length; j++) {\n                                var selectedItem = selectedItems[j];\n                                found = found || (value.myId == selectedItem.id);\n                            }\n                            if (!found) {\n                                // This is the missing one. Remove it.\n                                values.splice(i, 1);\n\n                                // Also remove the corresponding option element, if there is one.\n                                // See the wall of text in the update handler of this binding below for an explanation why.\n                                $(element).find(\"option\").filter((_, e) => e.getAttribute(\"value\") == value.myId).remove();\n                            }\n                        }\n\n                    } else {\n                        // Nothing changed.\n                    }\n                }\n\n                $(element).data(\"select2-ajax-updating\", false);\n            });\n        if (openOnFocus) {\n            $.data(element).select2.on(\"focus\", function () {\n                $(element).select2(\"open\");\n            });\n        }\n    },\n    update: function (element, valueAccessor, allBindings, viewModel, bindingContext) {\n        // Make sure that we read the valueAccessor BEFORE we return out of this function.\n        // Otherwise, the dependency detection will not be set up correctly.\n        // See https://stackoverflow.com/a/23880007/2465631;\n        var value: Array<any> = valueAccessor()();\n\n        if ($(element).data(\"select2-ajax-updating\")) return;\n        $(element).data(\"select2-ajax-updating\", true);\n\n        var idFieldName = Coalesce.Utilities.lowerFirstLetter(allBindings.get('idFieldName') || allBindings.get('idField'));\n        var textFieldName = Coalesce.Utilities.lowerFirstLetter(allBindings.get('textFieldName') || allBindings.get('textField'));\n\n        // See if the value exists. If not, we haven't loaded it from the server yet.\n        var select2Value = $(element).val();\n        if (!select2Value) select2Value = [];\n        var selectedIds = [];\n        // Convert the field names to js variables.\n        textFieldName = textFieldName.charAt(0).toLowerCase() + textFieldName.slice(1);\n        idFieldName = idFieldName.charAt(0).toLowerCase() + idFieldName.slice(1);\n\n        // Remove all of the temporary option elements that we had to create.\n        // These option elements are created so that select2 can display items that are\n        // part of the collection of selected objects, but were not added to the list via select2 -\n        // they came either with the initial data load, or were manually added to the undelying collection programatically.\n        // We have to remove these options because if we don't,\n        // and the user decides to remove an option from the selection box and then re-select that same item,\n        // select2 won't use the \"options\" object from its ajax call (which contains our _apiObject property) -\n        // it will use a fake object that it made that contains only and 'id' and 'text' property.\n        $(element).find(\"option\").remove();\n\n        for (var i in value) {\n            var item = value[i];\n            var text = item[textFieldName]();\n            var id = item[idFieldName]();\n            var option = new Option(text, id, true, true);\n            $(element).append(option);\n            selectedIds.push(id);\n        }\n\n        $(element).val(selectedIds).trigger('change');\n        $(element).data(\"select2-ajax-updating\", false);\n    }\n};\n\n\n// Select2 binding for a string value to show a list of other values\nko.bindingHandlers.select2AjaxText = {\n    init: function (element, valueAccessor, allBindings, viewModel, bindingContext) {\n        const url = allBindings.get('url');\n        const selectOnClose = allBindings.has(\"selectOnClose\") ? allBindings.get(\"selectOnClose\") : false;\n        const openOnFocus = allBindings.has(\"openOnFocus\") ? allBindings.get(\"openOnFocus\") : false; // This doesn't work in IE (GE: 2016-09-27)\n        const allowClear = allBindings.has(\"allowClear\") ? allBindings.get(\"allowClear\") : true;\n        const placeholder = $(element).attr('placeholder') || \"select\";\n        const resultField = allBindings.has(\"resultField\") ? allBindings.get(\"resultField\") : null;\n\n        var myParams: any;\n\n        // Create the Select2\n        $(element)\n            .select2(<Select2Options>{\n                theme: Coalesce.GlobalConfiguration.app.select2Theme() || undefined,\n                ajax: {\n                    url: url,\n                    dataType: 'json',\n                    delay: 250,\n                    data: function (params: any) {\n                        myParams = params\n                        var data: any = {\n                            search: params.term,\n                            page: params.page\n                        };\n                        if (!allBindings.has('cache') || allBindings.get('cache'))\n                            data[\"_\"] = new Date().getTime();\n                        return data;\n                    },\n                    processResults: function (data: any, page: any) {\n                        var result = [];\n                        if (allowClear && !myParams.term) {\n                            // Add a blank item\n                            var blank = {\n                                id: 0,\n                                text: 'No Selection'\n                            };\n                            result.unshift(blank);\n                        }\n                        var perfectMatch = false;\n\n                        var items: any[];\n                        if (Array.isArray(data)) {\n                            // Raw endpoint that serves an array response.\n                            items = data;\n                        }\n                        else if (typeof data !== \"object\") {\n                            throw \"Couldn't figure out how to access the text results - response wasn't an object for call to \" + url;\n                        }\n                        else if (Array.isArray(data.object)) {\n                            // Endpoint that serves an ItemResult<IEnumerable<string>>\n                            // For example, a custom model method or static method.\n                            items = data.object;\n                        }\n                        else if (Array.isArray(data.list)) {\n                            // Endpoint that serves a ListResult<string>\n                            items = data.list;\n                        }\n                        else {\n                            throw \"Couldn't figure out how to access the text results for call to \" + url;\n                        }\n\n                        for (let item of items) {\n                            if (typeof item === \"object\" && resultField) {\n                                item = item[resultField];\n                            }\n                            \n                            if (item === undefined || item === null) {\n                                continue;\n                            }\n\n                            if (item == myParams.term) {\n                                perfectMatch = true;\n                                result.push({ id: item, text: item, selected: true });\n                            } else {\n                                result.push({ id: item, text: item });\n                            }\n                        }\n                        if (!perfectMatch && myParams.term) {\n                            result.push({ id: myParams.term, text: myParams.term, selected: true });\n                        }\n                        return { results: result };\n                    },\n                    cache: (allBindings.has('cache') ? allBindings.get('cache') : false).toString(),\n                },\n                //escapeMarkup: function (markup) { return markup; }, // let our custom formatter work\n                //minimumInputLength: 1,\n                placeholder: placeholder,\n                allowClear: allowClear,\n                selectOnClose: selectOnClose\n            })\n            .on(\"change\", function (e) {\n                // Code to update knockout\n                var value = $(element).val();\n                if (valueAccessor()() !== value) {\n                    if (value) {\n                        valueAccessor()(value);\n                    } else {\n                        valueAccessor()(null);\n                    }\n                }\n            });\n        if (openOnFocus) {\n            $.data(element).select2.on(\"focus\", function () {\n                $(element).select2(\"open\");\n            });\n        }\n\n    },\n    update: function (element, valueAccessor, allBindings, viewModel, bindingContext) {\n        // See if the value exists. If not, we haven't loaded it from the server yet.\n        var value = valueAccessor()();\n        var options;\n        if (value) {\n          options = $(element).find('option[value=\"' + value.toString().replace(/\"/g, '\\\\\"') + '\"]');\n        } else {\n          options = $(element).find('option[value=\"' + value + '\"]');\n        }\n\n\n        // The option doesn't exist.\n        if (options.length == 0) {\n            // Add it based on the object.\n            var option = new Option(value, value, true, true);\n            $(element).append(option);\n        }\n\n        // Set the element based on the value in the model.\n        $(element).val(valueAccessor()()).trigger('change');\n    }\n};\n\n\n// Simple Select2 binding used with an options list that is in HTML \nko.bindingHandlers.select2 = {\n    init: function (element, valueAccessor, allBindings, viewModel, bindingContext) {\n        const selectOnClose = allBindings.has(\"selectOnClose\") ? allBindings.get(\"selectOnClose\") : false;\n        const openOnFocus = allBindings.has(\"openOnFocus\") ? allBindings.get(\"openOnFocus\") : false; // This doesn't work in IE (GE: 2016-09-27)\n        const allowClear = allBindings.has(\"allowClear\") ? allBindings.get(\"allowClear\") : true;\n        const placeholder = $(element).attr('placeholder') || \"select\";\n\n        // Create the Select2\n        $(element)\n            .select2(<Select2Options>{\n                theme: Coalesce.GlobalConfiguration.app.select2Theme() || undefined,\n                placeholder: placeholder,\n                allowClear: allowClear,\n                selectOnClose: selectOnClose,\n            })\n            .on(\"change\", function (e) {\n                // Code to update knockout\n                var value = $(element).val();\n                if (valueAccessor()() != value) {\n                    if (value) {\n                        valueAccessor()(value);\n                    } else {\n                        valueAccessor()(null);\n                    }\n                }\n            });\n        if (openOnFocus) {\n            $.data(element).select2.on(\"focus\", function () {\n                $(element).select2(\"open\");\n            });\n        }\n\n\n        // Add the validation message\n        const validationCore = ko.bindingHandlers['validationCore'];\n        if (!validationCore.init) throw \"Fatal: validationCore.init missing\"\n        validationCore.init(element, valueAccessor, allBindings, viewModel, bindingContext);\n        \n        // The validation message needs to go after the new select2 dropdown, not before it.\n        $(element).next(\".validationMessage\").insertAfter($(element).nextAll(\".select2\").first());\n    },\n    update: function (element, valueAccessor, allBindings, viewModel, bindingContext) {\n        // Set the element based on the value in the model.\n        $(element).val(valueAccessor()()).trigger('change');\n    }\n};\n\n\nko.bindingHandlers.datePicker = {\n    init: function (element, valueAccessor: () => KnockoutObservable<moment.Moment>, allBindings, viewModel, bindingContext) {\n        // See if we should use the parent element \n        var theElement = $(element).parent(\".input-group.date\") || $(element);\n\n        var getValue = (): moment.Moment | null => {\n            var newValue = theElement.data(\"DateTimePicker\").date();\n\n            if (!newValue) {\n                return null;\n            }\n\n            var preserveDate = allBindings.get('preserveDate') || false;\n            var preserveTime = allBindings.get('preserveTime') || false;\n            var unwrappedValue = valueAccessor()();\n\n            if (!preserveDate && !preserveTime) {\n                newValue = newValue;\n            } else if (preserveTime) {\n                // This is a date entry, keep the time. \n                var unwrappedTime = moment.duration(unwrappedValue.format('HH:mm:ss'));\n                newValue = moment(newValue.format(\"YYYY/MM/DD\"), \"YYYY/MM/DD\").add(unwrappedTime);\n            } else if (preserveDate) {\n                // This is a time entry, keep the date.\n                var newTime = moment.duration(newValue.format('HH:mm:ss'));\n                newValue = moment(unwrappedValue.format('YYYY/MM/DD'), \"YYYY/MM/DD\").add(newTime);\n            }\n\n            return newValue;\n        }\n\n        var updateValue = () => {\n            var newValue = getValue();\n\n            // Set the value if it has changed.\n            var currentObservable = valueAccessor()();\n            if (!currentObservable || !newValue || !newValue.isSame(currentObservable)) {\n                valueAccessor()(newValue);\n            }\n        }\n\n\n\n        theElement.datetimepicker({\n            format: allBindings.get('format') || \"M/D/YY h:mm a\",\n            stepping: allBindings.get('stepping') || 1,\n            sideBySide: allBindings.get('sideBySide') || false,\n            timeZone: allBindings.get('timeZone') || \"\",\n            keyBinds: allBindings.get('keyBinds') || { left: null, right: null, delete: null },\n        })\n            .on(\"dp.change\", function (e) {\n                if (allBindings.get('updateImmediate')) {\n                    updateValue();\n                }\n            })\n            .on(\"dp.hide\", updateValue)\n            .on('click', e => e.stopPropagation())\n            .on('dblclick', e => e.stopPropagation());\n\n        $(element)\n            .on(\"blur\", updateValue);\n\n        // Add the validation message\n        const validationCore = ko.bindingHandlers['validationCore'];\n        if (!validationCore.init) throw \"Fatal: validationCore.init missing\"\n        validationCore.init(element, valueAccessor, allBindings, viewModel, bindingContext);\n        \n        // The validation message needs to go after the input group with the button.\n        $(element).next(\".validationMessage\").insertAfter($(theElement));\n    },\n    update: function (element, valueAccessor, allBindings, viewModel, bindingContext) {\n        // Set the element based on the value in the model.\n        var theElement = $(element).parent(\".input-group.date\") || $(element);\n        if (valueAccessor()()) theElement.data(\"DateTimePicker\").date(valueAccessor()());\n        else theElement.data(\"DateTimePicker\").date(null);\n\n    }\n};\n\n\nko.bindingHandlers.saveImmediately = {\n    init: function (element, valueAccessor, allBindings, viewModel: Coalesce.BaseViewModel, bindingContext) {\n        if (!viewModel.coalesceConfig || !viewModel.coalesceConfig.autoSaveEnabled) {\n            console.error(\"saveImmediately binding was used in a context where $data is not a Coalesce.BaseViewModel\");\n            return;\n        }\n\n        // Set up to save immediately when the cursor enters and return to a regular state when it leaves.\n        var oldTimeoutValue: number;\n        $(element).on(\"focus\", function () {\n            oldTimeoutValue = viewModel.coalesceConfig.saveTimeoutMs.raw();\n            viewModel.coalesceConfig.saveTimeoutMs(0);\n        });\n        $(element).on(\"blur\", function () {\n            viewModel.coalesceConfig.saveTimeoutMs(oldTimeoutValue);\n        });\n    }\n};\n\n\n// Delays the save until the cursor leaves the field even if there is a value change.\nko.bindingHandlers.delaySave = {\n    init: function (element, valueAccessor, allBindings, viewModel: Coalesce.BaseViewModel, bindingContext) {\n        if (!viewModel.coalesceConfig || !viewModel.coalesceConfig.autoSaveEnabled) {\n            console.error(\"delaySave binding was used in a context where $data is not a Coalesce.BaseViewModel\");\n            return;\n        }\n        var existingAutoSaveValueRaw: boolean;\n\n        // Set up to not save immediately when the cursor enters and return to a regular state when it leaves.\n        $(element).on(\"focus\", function () {\n            existingAutoSaveValueRaw = viewModel.coalesceConfig.autoSaveEnabled.raw();\n            viewModel.coalesceConfig.autoSaveEnabled(false);\n        });\n        // Turn it back to previous state when the cursor leaves.\n        $(element).on(\"blur\", function () {\n            viewModel.coalesceConfig.autoSaveEnabled(existingAutoSaveValueRaw);\n            // If there were changes, perform an autosave now (autoSave() won't save if autosave is disabled.)\n            if (viewModel.isDirty()) {\n                viewModel.autoSave();\n            }\n\n        });\n    }\n};\n\n\n// Binding for Bootstrap ToolTips\n// Format: tooltip: {title:note}  (where note is the observable with the value you want)\n// Format: tooltip: {title:note, placement: 'bottom', animation: false}  (where note is the observable with the value you want)\n// Format: tooltip: note          (where note is the observable with the value you want)\nko.bindingHandlers.tooltip = {\n    init: function (element) {\n        var $element = $(element);\n\n        ko.utils.domNodeDisposal.addDisposeCallback(element, function () {\n            if ($element.data('bs.tooltip')) {\n                $element.tooltip('destroy');\n            }\n        });\n    },\n\n    update: function (element, valueAccessor) {\n        var $element = $(element);\n        var value = ko.unwrap(valueAccessor());\n        var options: any = {};\n\n        if (value === null || typeof value !== 'object') {\n            options = value;\n        } else {\n            ko.utils.objectForEach(value, function (propertyName, propertyValue) {\n                options[propertyName] = ko.unwrap(propertyValue);\n            });\n        }\n\n        if (typeof options !== 'object') {\n            options = { title: value }\n        }\n\n        var tooltipData = $element.data('bs.tooltip');\n\n        if (!tooltipData) {\n            $element.tooltip(options);\n        } else {\n            ko.utils.extend(tooltipData.options, options);\n        }\n    }\n};\n\n\nko.bindingHandlers.fadeVisible = {\n    init: function (element, valueAccessor) {\n        // Initially set the element to be instantly visible/hidden depending on the value\n        var value = valueAccessor();\n        $(element).toggle(ko.unwrap(value)); // Use \"unwrapObservable\" so we can handle values that may or may not be observable\n    },\n    update: function (element, valueAccessor) {\n        // Whenever the value subsequently changes, slowly fade the element in or out\n        var value = valueAccessor();\n        ko.unwrap(value) ? $(element).fadeIn() : $(element).fadeOut();\n    }\n};\n\nko.bindingHandlers.slideVisible = {\n    init: function (element, valueAccessor) {\n        // Initially set the element to be instantly visible/hidden depending on the value\n        var value = valueAccessor();\n        $(element).toggle(ko.unwrap(value)); // Use \"unwrapObservable\" so we can handle values that may or may not be observable\n    },\n    update: function (element, valueAccessor) {\n        // Whenever the value subsequently changes, slowly fade the element in or out\n        var value = valueAccessor();\n        ko.unwrap(value) ? $(element).slideDown() : $(element).slideUp();\n    }\n};\n\nko.bindingHandlers.booleanValue = {\n    init: function (element, valueAccessor, allBindingsAccessor) {\n        var observable = valueAccessor(),\n            interceptor = ko.computed({\n                read: function () {\n                    return observable().toString();\n                },\n                write: function (newValue) {\n                    observable(newValue === \"true\");\n                }\n            });\n\n        ko.applyBindingsToNode(element, { value: interceptor });\n    }\n};\n\nko.bindingHandlers.formatNumberText = {\n    update: function (element, valueAccessor, allBindings, viewModel, bindingContext) {\n        var phone = ko.utils.unwrapObservable(valueAccessor());\n        var formatPhone = function () {\n            return phone.replace(/(\\d{3})(\\d{3})(\\d{4})/, \"($1) $2-$3\");\n        }\n\n        // Satisfy typescript type guards.\n        if (!ko.bindingHandlers.text.update) throw \"Fatal: text binding missing\";\n\n        ko.bindingHandlers.text.update(element, formatPhone, allBindings, viewModel, bindingContext);\n    }\n};\n\n// http://xion.io/post/code/knockout-let-binding.html\nko.bindingHandlers['let'] = {\n    init: function (element, valueAccessor, allBindings, viewModel, bindingContext) {\n        var innerContext = bindingContext.extend(valueAccessor);\n        ko.applyBindingsToDescendants(innerContext, element);\n        return { controlsDescendantBindings: true };\n    }\n};\nko.virtualElements.allowedBindings['let'] = true;\n\n\n// Used from grahampcharles \n// https://github.com/grahampcharles/moment-knockout/\n\n\n(function () {\n\n    ko.bindingHandlers.moment = {\n\n        defaults: {\n            invalid: '',\n            format: 'MM/DD/YYYY'\n        },\n\n        init: function (element, valueAccessor, allBindingsAccessor, viewModel, bindingContext) {\n\n            var allBindings = allBindingsAccessor();\n\n            // register change event\n            ko.utils.registerEventHandler(element, 'change', function () {\n\n                var observable = valueAccessor();\n                var val = moment(($(element).val() || \"\").toString());\n\n                observable(val);\n\n            });\n        },\n\n        update: function (element, valueAccessor, allBindingsAccessor, viewModel, bindingContext) {\n\n            var value = valueAccessor(),\n                allBindings = allBindingsAccessor(),\n                valueUnwrapped = ko.utils.unwrapObservable(value);\n\n            // Date formats: http://momentjs.com/docs/#/displaying/format/\n            var pattern = allBindings.format || ko.bindingHandlers.moment.defaults.format;\n            var invalidString = allBindings.invalid == undefined ? ko.bindingHandlers.moment.defaults.invalid : allBindings.invalid;\n\n            var dateMoment = moment(valueUnwrapped);\n\n            // format string for input box\n            var output = dateMoment.isValid() ?\n                dateMoment.format(pattern) :\n                invalidString;\n\n            if ($(element).is(\"input\") === true) {\n                $(element).val(output);\n            } else {\n                $(element).text(output);\n            }\n\n        }\n    };\n\n\n\n\n\n\n\n    ko.bindingHandlers.momentFromNow = {\n\n        defaults: {\n            invalid: '',\n        },\n\n        init: function (element, valueAccessor, allBindingsAccessor, viewModel, bindingContext) {\n\n            var allBindings = allBindingsAccessor();\n\n            ko.utils.domNodeDisposal.addDisposeCallback(element, function () {\n                clearInterval(element.koFromNowTimer);\n            });\n        },\n\n        update: function (element, valueAccessor, allBindingsAccessor, viewModel, bindingContext) {\n\n            var value = valueAccessor(),\n                allBindings = allBindingsAccessor(),\n                valueUnwrapped = ko.utils.unwrapObservable(value);\n\n            // Date formats: http://momentjs.com/docs/#/displaying/format/\n            var invalidString = allBindings.invalid == undefined ? ko.bindingHandlers.moment.defaults.invalid : allBindings.invalid;\n            var shorten = allBindings.shorten == undefined ? false : allBindings.shorten;\n\n            var dateMoment = moment(valueUnwrapped);\n\n            var fmt = () => {\n                var output = dateMoment.isValid() ?\n                    dateMoment.fromNow() :\n                    invalidString;\n\n                if (shorten) {\n                    output = output.replace(\"minutes\", \"mins\");\n                    output = output.replace(\"a few seconds\", \"a moment\");\n                }\n                return output;\n            }\n\n            $(element).text(fmt());\n\n            clearInterval(element.koFromNowTimer);\n            element.koFromNowTimer = setInterval(function () {\n\n                $(element).text(fmt());\n            }, 1000);\n\n        }\n    };\n} ());","\r\n/// <reference path=\"../coalesce.dependencies.d.ts\" />\r\n\r\n// Generated by IntelliTect.Coalesce\r\n\r\nmodule ViewModels {\r\n    \r\n    export class Role extends Coalesce.BaseViewModel {\r\n        public readonly modelName = \"Role\";\r\n        public readonly primaryKeyName: keyof this = \"id\";\r\n        public readonly modelDisplayName = \"Role\";\r\n        public readonly apiController = \"/Role\";\r\n        public readonly viewController = \"/Role\";\r\n        \r\n        /** Configuration for all instances of Role. Can be overidden on each instance via instance.coalesceConfig. */\r\n        public static coalesceConfig: Coalesce.ViewModelConfiguration<Role>\r\n            = new Coalesce.ViewModelConfiguration<Role>(Coalesce.GlobalConfiguration.viewModel);\r\n        \r\n        /** Configuration for the current Role instance. */\r\n        public coalesceConfig: Coalesce.ViewModelConfiguration<this>\r\n            = new Coalesce.ViewModelConfiguration<Role>(Role.coalesceConfig);\r\n        \r\n        /** The namespace containing all possible values of this.dataSource. */\r\n        public dataSources: typeof ListViewModels.RoleDataSources = ListViewModels.RoleDataSources;\r\n        \r\n        \r\n        public name: KnockoutObservable<string | null> = ko.observable(null);\r\n        public claims: KnockoutObservableArray<ViewModels.RoleClaim> = ko.observableArray([]);\r\n        public users: KnockoutObservableArray<ViewModels.User> = ko.observableArray([]);\r\n        public id: KnockoutObservable<number | null> = ko.observable(null);\r\n        \r\n        \r\n        \r\n        /** Add object to claims */\r\n        public addToClaims = (autoSave?: boolean | null): RoleClaim => {\r\n            var newItem = new RoleClaim();\r\n            if (typeof(autoSave) == 'boolean'){\r\n                newItem.coalesceConfig.autoSaveEnabled(autoSave);\r\n            }\r\n            newItem.parent = this;\r\n            newItem.parentCollection = this.claims;\r\n            newItem.isExpanded(true);\r\n            newItem.roleId(this.id());\r\n            this.claims.push(newItem);\r\n            return newItem;\r\n        };\r\n        \r\n        /** ListViewModel for Claims. Allows for loading subsets of data. */\r\n        public claimsList: (loadImmediate?: boolean) => ListViewModels.RoleClaimList;\r\n        \r\n        \r\n        /** Url for a table view of all members of collection Claims for the current object. */\r\n        public claimsListUrl: KnockoutComputed<string> = ko.computed(\r\n            () => this.coalesceConfig.baseViewUrl() + '/RoleClaim/Table?filter.roleId=' + this.id(),\r\n            null, { deferEvaluation: true }\r\n        );\r\n        \r\n        \r\n        \r\n        \r\n        /** \r\n            Load the ViewModel object from the DTO.\r\n            @param data: The incoming data object to load.\r\n            @param force: Will override the check against isLoading that is done to prevent recursion. False is default.\r\n            @param allowCollectionDeletes: Set true when entire collections are loaded. True is the default. \r\n            In some cases only a partial collection is returned, set to false to only add/update collections.\r\n        */\r\n        public loadFromDto = (data: any, force: boolean = false, allowCollectionDeletes: boolean = true): void => {\r\n            if (!data || (!force && this.isLoading())) return;\r\n            this.isLoading(true);\r\n            // Set the ID \r\n            this.myId = data.id;\r\n            this.id(data.id);\r\n            // Load the lists of other objects\r\n            if (data.claims != null) {\r\n                // Merge the incoming array\r\n                Coalesce.KnockoutUtilities.RebuildArray(this.claims, data.claims, 'id', RoleClaim, this, allowCollectionDeletes);\r\n            }\r\n            if (data.users != null) {\r\n                // Merge the incoming array\r\n                Coalesce.KnockoutUtilities.RebuildArray(this.users, data.users, 'id', User, this, allowCollectionDeletes);\r\n            }\r\n            \r\n            // The rest of the objects are loaded now.\r\n            this.name(data.name);\r\n            if (this.coalesceConfig.onLoadFromDto()){\r\n                this.coalesceConfig.onLoadFromDto()(this as any);\r\n            }\r\n            this.isLoading(false);\r\n            this.isDirty(false);\r\n            if (this.coalesceConfig.validateOnLoadFromDto()) this.validate();\r\n        };\r\n        \r\n        /** Saves this object into a data transfer object to send to the server. */\r\n        public saveToDto = (): any => {\r\n            var dto: any = {};\r\n            dto.id = this.id();\r\n            \r\n            dto.name = this.name();\r\n            \r\n            return dto;\r\n        }\r\n        \r\n        /** \r\n            Loads any child objects that have an ID set, but not the full object.\r\n            This is useful when creating an object that has a parent object and the ID is set on the new child.\r\n        */\r\n        public loadChildren = (callback?: () => void): void => {\r\n            var loadingCount = 0;\r\n            if (loadingCount == 0 && typeof(callback) == \"function\") { callback(); }\r\n        };\r\n        \r\n        public setupValidation(): void {\r\n            if (this.errors !== null) return;\r\n            this.errors = ko.validation.group([\r\n            ]);\r\n            this.warnings = ko.validation.group([\r\n            ]);\r\n        }\r\n        \r\n        constructor(newItem?: object, parent?: Coalesce.BaseViewModel | ListViewModels.RoleList) {\r\n            super(parent);\r\n            this.baseInitialize();\r\n            const self = this;\r\n            \r\n            \r\n            \r\n            // List Object model for Claims. Allows for loading subsets of data.\r\n            var _claimsList: ListViewModels.RoleClaimList;\r\n            this.claimsList = function(loadImmediate = true) {\r\n                if (!_claimsList) {\r\n                    _claimsList = new ListViewModels.RoleClaimList();\r\n                    if (loadImmediate) loadClaimsList();\r\n                    self.id.subscribe(loadClaimsList)\r\n                }\r\n                return _claimsList;\r\n            }\r\n            function loadClaimsList() {\r\n                if (self.id()) {\r\n                    _claimsList.queryString = \"filter.RoleId=\" + self.id();\r\n                    _claimsList.load();\r\n                }\r\n            }\r\n            \r\n            \r\n            \r\n            self.name.subscribe(self.autoSave);\r\n            \r\n            if (newItem) {\r\n                self.loadFromDto(newItem, true);\r\n            }\r\n        }\r\n    }\r\n    \r\n    export namespace Role {\r\n    }\r\n}\r\n","\r\n/// <reference path=\"../coalesce.dependencies.d.ts\" />\r\n\r\n// Generated by IntelliTect.Coalesce\r\n\r\nmodule ViewModels {\r\n    \r\n    export class RoleClaim extends Coalesce.BaseViewModel {\r\n        public readonly modelName = \"RoleClaim\";\r\n        public readonly primaryKeyName: keyof this = \"id\";\r\n        public readonly modelDisplayName = \"Role Claim\";\r\n        public readonly apiController = \"/RoleClaim\";\r\n        public readonly viewController = \"/RoleClaim\";\r\n        \r\n        /** Configuration for all instances of RoleClaim. Can be overidden on each instance via instance.coalesceConfig. */\r\n        public static coalesceConfig: Coalesce.ViewModelConfiguration<RoleClaim>\r\n            = new Coalesce.ViewModelConfiguration<RoleClaim>(Coalesce.GlobalConfiguration.viewModel);\r\n        \r\n        /** Configuration for the current RoleClaim instance. */\r\n        public coalesceConfig: Coalesce.ViewModelConfiguration<this>\r\n            = new Coalesce.ViewModelConfiguration<RoleClaim>(RoleClaim.coalesceConfig);\r\n        \r\n        /** The namespace containing all possible values of this.dataSource. */\r\n        public dataSources: typeof ListViewModels.RoleClaimDataSources = ListViewModels.RoleClaimDataSources;\r\n        \r\n        \r\n        public roleId: KnockoutObservable<number | null> = ko.observable(null);\r\n        public role: KnockoutObservable<ViewModels.Role | null> = ko.observable(null);\r\n        public claimType: KnockoutObservable<string | null> = ko.observable(null);\r\n        public claimValue: KnockoutObservable<string | null> = ko.observable(null);\r\n        public id: KnockoutObservable<number | null> = ko.observable(null);\r\n        \r\n        \r\n        /** Display text for Role */\r\n        public roleText: KnockoutComputed<string>;\r\n        \r\n        \r\n        \r\n        \r\n        /** Pops up a stock editor for object role */\r\n        public showRoleEditor: (callback?: any) => void;\r\n        \r\n        \r\n        \r\n        /** \r\n            Load the ViewModel object from the DTO.\r\n            @param data: The incoming data object to load.\r\n            @param force: Will override the check against isLoading that is done to prevent recursion. False is default.\r\n            @param allowCollectionDeletes: Set true when entire collections are loaded. True is the default. \r\n            In some cases only a partial collection is returned, set to false to only add/update collections.\r\n        */\r\n        public loadFromDto = (data: any, force: boolean = false, allowCollectionDeletes: boolean = true): void => {\r\n            if (!data || (!force && this.isLoading())) return;\r\n            this.isLoading(true);\r\n            // Set the ID \r\n            this.myId = data.id;\r\n            this.id(data.id);\r\n            // Load the lists of other objects\r\n            if (!data.role) { \r\n                if (data.roleId != this.roleId()) {\r\n                    this.role(null);\r\n                }\r\n            } else {\r\n                if (!this.role()){\r\n                    this.role(new Role(data.role, this));\r\n                } else {\r\n                    this.role()!.loadFromDto(data.role);\r\n                }\r\n                if (this.parent instanceof Role && this.parent !== this.role() && this.parent.id() == this.role()!.id())\r\n                {\r\n                    this.parent.loadFromDto(data.role, undefined, false);\r\n                }\r\n            }\r\n            \r\n            // The rest of the objects are loaded now.\r\n            this.roleId(data.roleId);\r\n            this.claimType(data.claimType);\r\n            this.claimValue(data.claimValue);\r\n            if (this.coalesceConfig.onLoadFromDto()){\r\n                this.coalesceConfig.onLoadFromDto()(this as any);\r\n            }\r\n            this.isLoading(false);\r\n            this.isDirty(false);\r\n            if (this.coalesceConfig.validateOnLoadFromDto()) this.validate();\r\n        };\r\n        \r\n        /** Saves this object into a data transfer object to send to the server. */\r\n        public saveToDto = (): any => {\r\n            var dto: any = {};\r\n            dto.id = this.id();\r\n            \r\n            dto.roleId = this.roleId();\r\n            if (!dto.roleId && this.role()) {\r\n                dto.roleId = this.role()!.id();\r\n            }\r\n            dto.claimType = this.claimType();\r\n            dto.claimValue = this.claimValue();\r\n            \r\n            return dto;\r\n        }\r\n        \r\n        /** \r\n            Loads any child objects that have an ID set, but not the full object.\r\n            This is useful when creating an object that has a parent object and the ID is set on the new child.\r\n        */\r\n        public loadChildren = (callback?: () => void): void => {\r\n            var loadingCount = 0;\r\n            // See if this.role needs to be loaded.\r\n            if (this.role() == null && this.roleId() != null) {\r\n                loadingCount++;\r\n                var roleObj = new Role();\r\n                roleObj.load(this.roleId(), () => {\r\n                    loadingCount--;\r\n                    this.role(roleObj);\r\n                    if (loadingCount == 0 && typeof(callback) == \"function\") { callback(); }\r\n                });\r\n            }\r\n            if (loadingCount == 0 && typeof(callback) == \"function\") { callback(); }\r\n        };\r\n        \r\n        public setupValidation(): void {\r\n            if (this.errors !== null) return;\r\n            this.errors = ko.validation.group([\r\n                this.roleId.extend({ required: {params: true, message: \"Role is required.\"} }),\r\n            ]);\r\n            this.warnings = ko.validation.group([\r\n            ]);\r\n        }\r\n        \r\n        constructor(newItem?: object, parent?: Coalesce.BaseViewModel | ListViewModels.RoleClaimList) {\r\n            super(parent);\r\n            this.baseInitialize();\r\n            const self = this;\r\n            \r\n            this.roleText = ko.pureComputed(function() {\r\n                if (self.role() && self.role()!.name()) {\r\n                    return self.role()!.name()!.toString();\r\n                } else {\r\n                    return \"None\";\r\n                }\r\n            });\r\n            \r\n            \r\n            \r\n            \r\n            this.showRoleEditor = function(callback: any) {\r\n                if (!self.role()) {\r\n                    self.role(new Role());\r\n                }\r\n                self.role()!.showEditor(callback)\r\n            };\r\n            \r\n            self.roleId.subscribe(self.autoSave);\r\n            self.role.subscribe(self.autoSave);\r\n            self.claimType.subscribe(self.autoSave);\r\n            self.claimValue.subscribe(self.autoSave);\r\n            \r\n            if (newItem) {\r\n                self.loadFromDto(newItem, true);\r\n            }\r\n        }\r\n    }\r\n    \r\n    export namespace RoleClaim {\r\n    }\r\n}\r\n","\r\n/// <reference path=\"../coalesce.dependencies.d.ts\" />\r\n\r\n// Generated by IntelliTect.Coalesce\r\n\r\nmodule ListViewModels {\r\n    \r\n    export namespace RoleClaimDataSources {\r\n        export class Default extends Coalesce.DataSource<ViewModels.RoleClaim> { }\r\n    }\r\n    \r\n    export class RoleClaimList extends Coalesce.BaseListViewModel<ViewModels.RoleClaim> {\r\n        public readonly modelName: string = \"RoleClaim\";\r\n        public readonly apiController: string = \"/RoleClaim\";\r\n        public modelKeyName: string = \"id\";\r\n        public itemClass: new () => ViewModels.RoleClaim = ViewModels.RoleClaim;\r\n        \r\n        public filter: {\r\n            roleId?: string;\r\n            claimType?: string;\r\n            claimValue?: string;\r\n            id?: string;\r\n        } | null = null;\r\n        \r\n        /** The namespace containing all possible values of this.dataSource. */\r\n        public dataSources: typeof RoleClaimDataSources = RoleClaimDataSources;\r\n        \r\n        /** The data source on the server to use when retrieving objects. Valid values are in this.dataSources. */\r\n        public dataSource: Coalesce.DataSource<ViewModels.RoleClaim> = new this.dataSources.Default();\r\n        \r\n        /** Configuration for all instances of RoleClaimList. Can be overidden on each instance via instance.coalesceConfig. */\r\n        public static coalesceConfig = new Coalesce.ListViewModelConfiguration<RoleClaimList, ViewModels.RoleClaim>(Coalesce.GlobalConfiguration.listViewModel);\r\n        \r\n        /** Configuration for this RoleClaimList instance. */\r\n        public coalesceConfig: Coalesce.ListViewModelConfiguration<RoleClaimList, ViewModels.RoleClaim>\r\n            = new Coalesce.ListViewModelConfiguration<RoleClaimList, ViewModels.RoleClaim>(RoleClaimList.coalesceConfig);\r\n        \r\n        \r\n        protected createItem = (newItem?: any, parent?: any) => new ViewModels.RoleClaim(newItem, parent);\r\n        \r\n        constructor() {\r\n            super();\r\n        }\r\n    }\r\n}\r\n","\r\n/// <reference path=\"../coalesce.dependencies.d.ts\" />\r\n\r\n// Generated by IntelliTect.Coalesce\r\n\r\nmodule ListViewModels {\r\n    \r\n    export namespace RoleDataSources {\r\n        export class Default extends Coalesce.DataSource<ViewModels.Role> { }\r\n        export class FetchRolesForApplication extends Coalesce.DataSource<ViewModels.Role> {\r\n            public applicationName: KnockoutObservable<string | null> = ko.observable(null);\r\n            public saveToDto = () => {\r\n                var dto: any = {};\r\n                dto.applicationName = this.applicationName();\r\n                return dto;\r\n            }\r\n        }\r\n    }\r\n    \r\n    export class RoleList extends Coalesce.BaseListViewModel<ViewModels.Role> {\r\n        public readonly modelName: string = \"Role\";\r\n        public readonly apiController: string = \"/Role\";\r\n        public modelKeyName: string = \"id\";\r\n        public itemClass: new () => ViewModels.Role = ViewModels.Role;\r\n        \r\n        public filter: {\r\n            name?: string;\r\n            id?: string;\r\n        } | null = null;\r\n        \r\n        /** The namespace containing all possible values of this.dataSource. */\r\n        public dataSources: typeof RoleDataSources = RoleDataSources;\r\n        \r\n        /** The data source on the server to use when retrieving objects. Valid values are in this.dataSources. */\r\n        public dataSource: Coalesce.DataSource<ViewModels.Role> = new this.dataSources.Default();\r\n        \r\n        /** Configuration for all instances of RoleList. Can be overidden on each instance via instance.coalesceConfig. */\r\n        public static coalesceConfig = new Coalesce.ListViewModelConfiguration<RoleList, ViewModels.Role>(Coalesce.GlobalConfiguration.listViewModel);\r\n        \r\n        /** Configuration for this RoleList instance. */\r\n        public coalesceConfig: Coalesce.ListViewModelConfiguration<RoleList, ViewModels.Role>\r\n            = new Coalesce.ListViewModelConfiguration<RoleList, ViewModels.Role>(RoleList.coalesceConfig);\r\n        \r\n        \r\n        protected createItem = (newItem?: any, parent?: any) => new ViewModels.Role(newItem, parent);\r\n        \r\n        constructor() {\r\n            super();\r\n        }\r\n    }\r\n}\r\n","\r\n/// <reference path=\"../coalesce.dependencies.d.ts\" />\r\n\r\n// Generated by IntelliTect.Coalesce\r\n\r\nmodule ViewModels {\r\n    \r\n    export class User extends Coalesce.BaseViewModel {\r\n        public readonly modelName = \"User\";\r\n        public readonly primaryKeyName: keyof this = \"id\";\r\n        public readonly modelDisplayName = \"User\";\r\n        public readonly apiController = \"/User\";\r\n        public readonly viewController = \"/User\";\r\n        \r\n        /** Configuration for all instances of User. Can be overidden on each instance via instance.coalesceConfig. */\r\n        public static coalesceConfig: Coalesce.ViewModelConfiguration<User>\r\n            = new Coalesce.ViewModelConfiguration<User>(Coalesce.GlobalConfiguration.viewModel);\r\n        \r\n        /** Configuration for the current User instance. */\r\n        public coalesceConfig: Coalesce.ViewModelConfiguration<this>\r\n            = new Coalesce.ViewModelConfiguration<User>(User.coalesceConfig);\r\n        \r\n        /** The namespace containing all possible values of this.dataSource. */\r\n        public dataSources: typeof ListViewModels.UserDataSources = ListViewModels.UserDataSources;\r\n        \r\n        \r\n        public firstName: KnockoutObservable<string | null> = ko.observable(null);\r\n        public lastName: KnockoutObservable<string | null> = ko.observable(null);\r\n        public emailAddress: KnockoutObservable<string | null> = ko.observable(null);\r\n        public emailConfirmed: KnockoutObservable<boolean | null> = ko.observable(null);\r\n        public phoneNumber: KnockoutObservable<string | null> = ko.observable(null);\r\n        public phoneNumberConfirmed: KnockoutObservable<boolean | null> = ko.observable(null);\r\n        public twoFactorEnabled: KnockoutObservable<boolean | null> = ko.observable(null);\r\n        public accessFailedCount: KnockoutObservable<number | null> = ko.observable(null);\r\n        public lockoutEnd: KnockoutObservable<moment.Moment | null> = ko.observable(null);\r\n        public accountLocked: KnockoutObservable<boolean | null> = ko.observable(null);\r\n        public passwordHash: KnockoutObservable<string | null> = ko.observable(null);\r\n        public approvalStatus: KnockoutObservable<string | null> = ko.observable(null);\r\n        public claims: KnockoutObservableArray<ViewModels.UserClaim> = ko.observableArray([]);\r\n        public roles: KnockoutObservableArray<ViewModels.Role> = ko.observableArray([]);\r\n        public id: KnockoutObservable<number | null> = ko.observable(null);\r\n        \r\n        \r\n        \r\n        /** Add object to claims */\r\n        public addToClaims = (autoSave?: boolean | null): UserClaim => {\r\n            var newItem = new UserClaim();\r\n            if (typeof(autoSave) == 'boolean'){\r\n                newItem.coalesceConfig.autoSaveEnabled(autoSave);\r\n            }\r\n            newItem.parent = this;\r\n            newItem.parentCollection = this.claims;\r\n            newItem.isExpanded(true);\r\n            newItem.userId(this.id());\r\n            this.claims.push(newItem);\r\n            return newItem;\r\n        };\r\n        \r\n        /** ListViewModel for Claims. Allows for loading subsets of data. */\r\n        public claimsList: (loadImmediate?: boolean) => ListViewModels.UserClaimList;\r\n        \r\n        \r\n        /** Url for a table view of all members of collection Claims for the current object. */\r\n        public claimsListUrl: KnockoutComputed<string> = ko.computed(\r\n            () => this.coalesceConfig.baseViewUrl() + '/UserClaim/Table?filter.userId=' + this.id(),\r\n            null, { deferEvaluation: true }\r\n        );\r\n        \r\n        \r\n        \r\n        \r\n        /** \r\n            Load the ViewModel object from the DTO.\r\n            @param data: The incoming data object to load.\r\n            @param force: Will override the check against isLoading that is done to prevent recursion. False is default.\r\n            @param allowCollectionDeletes: Set true when entire collections are loaded. True is the default. \r\n            In some cases only a partial collection is returned, set to false to only add/update collections.\r\n        */\r\n        public loadFromDto = (data: any, force: boolean = false, allowCollectionDeletes: boolean = true): void => {\r\n            if (!data || (!force && this.isLoading())) return;\r\n            this.isLoading(true);\r\n            // Set the ID \r\n            this.myId = data.id;\r\n            this.id(data.id);\r\n            // Load the lists of other objects\r\n            if (data.claims != null) {\r\n                // Merge the incoming array\r\n                Coalesce.KnockoutUtilities.RebuildArray(this.claims, data.claims, 'id', UserClaim, this, allowCollectionDeletes);\r\n            }\r\n            if (data.roles != null) {\r\n                // Merge the incoming array\r\n                Coalesce.KnockoutUtilities.RebuildArray(this.roles, data.roles, 'id', Role, this, allowCollectionDeletes);\r\n            }\r\n            \r\n            // The rest of the objects are loaded now.\r\n            this.firstName(data.firstName);\r\n            this.lastName(data.lastName);\r\n            this.emailAddress(data.emailAddress);\r\n            this.emailConfirmed(data.emailConfirmed);\r\n            this.phoneNumber(data.phoneNumber);\r\n            this.phoneNumberConfirmed(data.phoneNumberConfirmed);\r\n            this.twoFactorEnabled(data.twoFactorEnabled);\r\n            this.accessFailedCount(data.accessFailedCount);\r\n            if (data.lockoutEnd == null) this.lockoutEnd(null);\r\n            else if (this.lockoutEnd() == null || this.lockoutEnd()!.valueOf() != new Date(data.lockoutEnd).getTime()){\r\n                this.lockoutEnd(moment(new Date(data.lockoutEnd)));\r\n            }\r\n            this.accountLocked(data.accountLocked);\r\n            this.passwordHash(data.passwordHash);\r\n            this.approvalStatus(data.approvalStatus);\r\n            if (this.coalesceConfig.onLoadFromDto()){\r\n                this.coalesceConfig.onLoadFromDto()(this as any);\r\n            }\r\n            this.isLoading(false);\r\n            this.isDirty(false);\r\n            if (this.coalesceConfig.validateOnLoadFromDto()) this.validate();\r\n        };\r\n        \r\n        /** Saves this object into a data transfer object to send to the server. */\r\n        public saveToDto = (): any => {\r\n            var dto: any = {};\r\n            dto.id = this.id();\r\n            \r\n            dto.firstName = this.firstName();\r\n            dto.lastName = this.lastName();\r\n            dto.emailAddress = this.emailAddress();\r\n            dto.emailConfirmed = this.emailConfirmed();\r\n            dto.phoneNumber = this.phoneNumber();\r\n            dto.phoneNumberConfirmed = this.phoneNumberConfirmed();\r\n            dto.twoFactorEnabled = this.twoFactorEnabled();\r\n            dto.accessFailedCount = this.accessFailedCount();\r\n            if (!this.lockoutEnd()) dto.lockoutEnd = null;\r\n            else dto.lockoutEnd = this.lockoutEnd()!.format('YYYY-MM-DDTHH:mm:ssZZ');\r\n            dto.passwordHash = this.passwordHash();\r\n            dto.approvalStatus = this.approvalStatus();\r\n            \r\n            return dto;\r\n        }\r\n        \r\n        /** \r\n            Loads any child objects that have an ID set, but not the full object.\r\n            This is useful when creating an object that has a parent object and the ID is set on the new child.\r\n        */\r\n        public loadChildren = (callback?: () => void): void => {\r\n            var loadingCount = 0;\r\n            if (loadingCount == 0 && typeof(callback) == \"function\") { callback(); }\r\n        };\r\n        \r\n        public setupValidation(): void {\r\n            if (this.errors !== null) return;\r\n            this.errors = ko.validation.group([\r\n                this.lockoutEnd.extend({ moment: { unix: true } }),\r\n            ]);\r\n            this.warnings = ko.validation.group([\r\n            ]);\r\n        }\r\n        \r\n        constructor(newItem?: object, parent?: Coalesce.BaseViewModel | ListViewModels.UserList) {\r\n            super(parent);\r\n            this.baseInitialize();\r\n            const self = this;\r\n            \r\n            \r\n            \r\n            // List Object model for Claims. Allows for loading subsets of data.\r\n            var _claimsList: ListViewModels.UserClaimList;\r\n            this.claimsList = function(loadImmediate = true) {\r\n                if (!_claimsList) {\r\n                    _claimsList = new ListViewModels.UserClaimList();\r\n                    if (loadImmediate) loadClaimsList();\r\n                    self.id.subscribe(loadClaimsList)\r\n                }\r\n                return _claimsList;\r\n            }\r\n            function loadClaimsList() {\r\n                if (self.id()) {\r\n                    _claimsList.queryString = \"filter.UserId=\" + self.id();\r\n                    _claimsList.load();\r\n                }\r\n            }\r\n            \r\n            \r\n            \r\n            self.firstName.subscribe(self.autoSave);\r\n            self.lastName.subscribe(self.autoSave);\r\n            self.emailAddress.subscribe(self.autoSave);\r\n            self.emailConfirmed.subscribe(self.autoSave);\r\n            self.phoneNumber.subscribe(self.autoSave);\r\n            self.phoneNumberConfirmed.subscribe(self.autoSave);\r\n            self.twoFactorEnabled.subscribe(self.autoSave);\r\n            self.accessFailedCount.subscribe(self.autoSave);\r\n            self.lockoutEnd.subscribe(self.autoSave);\r\n            self.passwordHash.subscribe(self.autoSave);\r\n            self.approvalStatus.subscribe(self.autoSave);\r\n            \r\n            if (newItem) {\r\n                self.loadFromDto(newItem, true);\r\n            }\r\n        }\r\n    }\r\n    \r\n    export namespace User {\r\n    }\r\n}\r\n","\r\n/// <reference path=\"../coalesce.dependencies.d.ts\" />\r\n\r\n// Generated by IntelliTect.Coalesce\r\n\r\nmodule ViewModels {\r\n    \r\n    export class UserClaim extends Coalesce.BaseViewModel {\r\n        public readonly modelName = \"UserClaim\";\r\n        public readonly primaryKeyName: keyof this = \"id\";\r\n        public readonly modelDisplayName = \"User Claim\";\r\n        public readonly apiController = \"/UserClaim\";\r\n        public readonly viewController = \"/UserClaim\";\r\n        \r\n        /** Configuration for all instances of UserClaim. Can be overidden on each instance via instance.coalesceConfig. */\r\n        public static coalesceConfig: Coalesce.ViewModelConfiguration<UserClaim>\r\n            = new Coalesce.ViewModelConfiguration<UserClaim>(Coalesce.GlobalConfiguration.viewModel);\r\n        \r\n        /** Configuration for the current UserClaim instance. */\r\n        public coalesceConfig: Coalesce.ViewModelConfiguration<this>\r\n            = new Coalesce.ViewModelConfiguration<UserClaim>(UserClaim.coalesceConfig);\r\n        \r\n        /** The namespace containing all possible values of this.dataSource. */\r\n        public dataSources: typeof ListViewModels.UserClaimDataSources = ListViewModels.UserClaimDataSources;\r\n        \r\n        \r\n        public userId: KnockoutObservable<number | null> = ko.observable(null);\r\n        public user: KnockoutObservable<ViewModels.User | null> = ko.observable(null);\r\n        public claimType: KnockoutObservable<string | null> = ko.observable(null);\r\n        public claimValue: KnockoutObservable<string | null> = ko.observable(null);\r\n        public id: KnockoutObservable<number | null> = ko.observable(null);\r\n        \r\n        \r\n        /** Display text for User */\r\n        public userText: KnockoutComputed<string>;\r\n        \r\n        \r\n        \r\n        \r\n        /** Pops up a stock editor for object user */\r\n        public showUserEditor: (callback?: any) => void;\r\n        \r\n        \r\n        \r\n        /** \r\n            Load the ViewModel object from the DTO.\r\n            @param data: The incoming data object to load.\r\n            @param force: Will override the check against isLoading that is done to prevent recursion. False is default.\r\n            @param allowCollectionDeletes: Set true when entire collections are loaded. True is the default. \r\n            In some cases only a partial collection is returned, set to false to only add/update collections.\r\n        */\r\n        public loadFromDto = (data: any, force: boolean = false, allowCollectionDeletes: boolean = true): void => {\r\n            if (!data || (!force && this.isLoading())) return;\r\n            this.isLoading(true);\r\n            // Set the ID \r\n            this.myId = data.id;\r\n            this.id(data.id);\r\n            // Load the lists of other objects\r\n            if (!data.user) { \r\n                if (data.userId != this.userId()) {\r\n                    this.user(null);\r\n                }\r\n            } else {\r\n                if (!this.user()){\r\n                    this.user(new User(data.user, this));\r\n                } else {\r\n                    this.user()!.loadFromDto(data.user);\r\n                }\r\n                if (this.parent instanceof User && this.parent !== this.user() && this.parent.id() == this.user()!.id())\r\n                {\r\n                    this.parent.loadFromDto(data.user, undefined, false);\r\n                }\r\n            }\r\n            \r\n            // The rest of the objects are loaded now.\r\n            this.userId(data.userId);\r\n            this.claimType(data.claimType);\r\n            this.claimValue(data.claimValue);\r\n            if (this.coalesceConfig.onLoadFromDto()){\r\n                this.coalesceConfig.onLoadFromDto()(this as any);\r\n            }\r\n            this.isLoading(false);\r\n            this.isDirty(false);\r\n            if (this.coalesceConfig.validateOnLoadFromDto()) this.validate();\r\n        };\r\n        \r\n        /** Saves this object into a data transfer object to send to the server. */\r\n        public saveToDto = (): any => {\r\n            var dto: any = {};\r\n            dto.id = this.id();\r\n            \r\n            dto.userId = this.userId();\r\n            if (!dto.userId && this.user()) {\r\n                dto.userId = this.user()!.id();\r\n            }\r\n            dto.claimType = this.claimType();\r\n            dto.claimValue = this.claimValue();\r\n            \r\n            return dto;\r\n        }\r\n        \r\n        /** \r\n            Loads any child objects that have an ID set, but not the full object.\r\n            This is useful when creating an object that has a parent object and the ID is set on the new child.\r\n        */\r\n        public loadChildren = (callback?: () => void): void => {\r\n            var loadingCount = 0;\r\n            // See if this.user needs to be loaded.\r\n            if (this.user() == null && this.userId() != null) {\r\n                loadingCount++;\r\n                var userObj = new User();\r\n                userObj.load(this.userId(), () => {\r\n                    loadingCount--;\r\n                    this.user(userObj);\r\n                    if (loadingCount == 0 && typeof(callback) == \"function\") { callback(); }\r\n                });\r\n            }\r\n            if (loadingCount == 0 && typeof(callback) == \"function\") { callback(); }\r\n        };\r\n        \r\n        public setupValidation(): void {\r\n            if (this.errors !== null) return;\r\n            this.errors = ko.validation.group([\r\n                this.userId.extend({ required: {params: true, message: \"User is required.\"} }),\r\n            ]);\r\n            this.warnings = ko.validation.group([\r\n            ]);\r\n        }\r\n        \r\n        constructor(newItem?: object, parent?: Coalesce.BaseViewModel | ListViewModels.UserClaimList) {\r\n            super(parent);\r\n            this.baseInitialize();\r\n            const self = this;\r\n            \r\n            this.userText = ko.pureComputed(function() {\r\n                if (self.user() && self.user()!.id()) {\r\n                    return self.user()!.id()!.toString();\r\n                } else {\r\n                    return \"None\";\r\n                }\r\n            });\r\n            \r\n            \r\n            \r\n            \r\n            this.showUserEditor = function(callback: any) {\r\n                if (!self.user()) {\r\n                    self.user(new User());\r\n                }\r\n                self.user()!.showEditor(callback)\r\n            };\r\n            \r\n            self.userId.subscribe(self.autoSave);\r\n            self.user.subscribe(self.autoSave);\r\n            self.claimType.subscribe(self.autoSave);\r\n            self.claimValue.subscribe(self.autoSave);\r\n            \r\n            if (newItem) {\r\n                self.loadFromDto(newItem, true);\r\n            }\r\n        }\r\n    }\r\n    \r\n    export namespace UserClaim {\r\n    }\r\n}\r\n","\r\n/// <reference path=\"../coalesce.dependencies.d.ts\" />\r\n\r\n// Generated by IntelliTect.Coalesce\r\n\r\nmodule ListViewModels {\r\n    \r\n    export namespace UserClaimDataSources {\r\n        export class Default extends Coalesce.DataSource<ViewModels.UserClaim> { }\r\n    }\r\n    \r\n    export class UserClaimList extends Coalesce.BaseListViewModel<ViewModels.UserClaim> {\r\n        public readonly modelName: string = \"UserClaim\";\r\n        public readonly apiController: string = \"/UserClaim\";\r\n        public modelKeyName: string = \"id\";\r\n        public itemClass: new () => ViewModels.UserClaim = ViewModels.UserClaim;\r\n        \r\n        public filter: {\r\n            userId?: string;\r\n            claimType?: string;\r\n            claimValue?: string;\r\n            id?: string;\r\n        } | null = null;\r\n        \r\n        /** The namespace containing all possible values of this.dataSource. */\r\n        public dataSources: typeof UserClaimDataSources = UserClaimDataSources;\r\n        \r\n        /** The data source on the server to use when retrieving objects. Valid values are in this.dataSources. */\r\n        public dataSource: Coalesce.DataSource<ViewModels.UserClaim> = new this.dataSources.Default();\r\n        \r\n        /** Configuration for all instances of UserClaimList. Can be overidden on each instance via instance.coalesceConfig. */\r\n        public static coalesceConfig = new Coalesce.ListViewModelConfiguration<UserClaimList, ViewModels.UserClaim>(Coalesce.GlobalConfiguration.listViewModel);\r\n        \r\n        /** Configuration for this UserClaimList instance. */\r\n        public coalesceConfig: Coalesce.ListViewModelConfiguration<UserClaimList, ViewModels.UserClaim>\r\n            = new Coalesce.ListViewModelConfiguration<UserClaimList, ViewModels.UserClaim>(UserClaimList.coalesceConfig);\r\n        \r\n        \r\n        protected createItem = (newItem?: any, parent?: any) => new ViewModels.UserClaim(newItem, parent);\r\n        \r\n        constructor() {\r\n            super();\r\n        }\r\n    }\r\n}\r\n","\r\n/// <reference path=\"../coalesce.dependencies.d.ts\" />\r\n\r\n// Generated by IntelliTect.Coalesce\r\n\r\nmodule ListViewModels {\r\n    \r\n    export namespace UserDataSources {\r\n        export class Default extends Coalesce.DataSource<ViewModels.User> { }\r\n        export class FetchUsersForApplication extends Coalesce.DataSource<ViewModels.User> {\r\n            public applicationName: KnockoutObservable<string | null> = ko.observable(null);\r\n            public saveToDto = () => {\r\n                var dto: any = {};\r\n                dto.applicationName = this.applicationName();\r\n                return dto;\r\n            }\r\n        }\r\n        export class FetchUsersForManagement extends Coalesce.DataSource<ViewModels.User> {\r\n        }\r\n    }\r\n    \r\n    export class UserList extends Coalesce.BaseListViewModel<ViewModels.User> {\r\n        public readonly modelName: string = \"User\";\r\n        public readonly apiController: string = \"/User\";\r\n        public modelKeyName: string = \"id\";\r\n        public itemClass: new () => ViewModels.User = ViewModels.User;\r\n        \r\n        public filter: {\r\n            firstName?: string;\r\n            lastName?: string;\r\n            emailAddress?: string;\r\n            emailConfirmed?: string;\r\n            phoneNumber?: string;\r\n            phoneNumberConfirmed?: string;\r\n            twoFactorEnabled?: string;\r\n            accessFailedCount?: string;\r\n            lockoutEnd?: string;\r\n            accountLocked?: string;\r\n            passwordHash?: string;\r\n            id?: string;\r\n        } | null = null;\r\n        \r\n        /** The namespace containing all possible values of this.dataSource. */\r\n        public dataSources: typeof UserDataSources = UserDataSources;\r\n        \r\n        /** The data source on the server to use when retrieving objects. Valid values are in this.dataSources. */\r\n        public dataSource: Coalesce.DataSource<ViewModels.User> = new this.dataSources.Default();\r\n        \r\n        /** Configuration for all instances of UserList. Can be overidden on each instance via instance.coalesceConfig. */\r\n        public static coalesceConfig = new Coalesce.ListViewModelConfiguration<UserList, ViewModels.User>(Coalesce.GlobalConfiguration.listViewModel);\r\n        \r\n        /** Configuration for this UserList instance. */\r\n        public coalesceConfig: Coalesce.ListViewModelConfiguration<UserList, ViewModels.User>\r\n            = new Coalesce.ListViewModelConfiguration<UserList, ViewModels.User>(UserList.coalesceConfig);\r\n        \r\n        \r\n        protected createItem = (newItem?: any, parent?: any) => new ViewModels.User(newItem, parent);\r\n        \r\n        constructor() {\r\n            super();\r\n        }\r\n    }\r\n}\r\n","\r\n/// <reference path=\"../coalesce.dependencies.d.ts\" />\r\n\r\n// Generated by IntelliTect.Coalesce\r\n\r\nmodule ViewModels {\r\n    \r\n    export class UsersRoles extends Coalesce.BaseViewModel {\r\n        public readonly modelName = \"UsersRoles\";\r\n        public readonly primaryKeyName: keyof this = \"userId\";\r\n        public readonly modelDisplayName = \"Users Roles\";\r\n        public readonly apiController = \"/UsersRoles\";\r\n        public readonly viewController = \"/UsersRoles\";\r\n        \r\n        /** Configuration for all instances of UsersRoles. Can be overidden on each instance via instance.coalesceConfig. */\r\n        public static coalesceConfig: Coalesce.ViewModelConfiguration<UsersRoles>\r\n            = new Coalesce.ViewModelConfiguration<UsersRoles>(Coalesce.GlobalConfiguration.viewModel);\r\n        \r\n        /** Configuration for the current UsersRoles instance. */\r\n        public coalesceConfig: Coalesce.ViewModelConfiguration<this>\r\n            = new Coalesce.ViewModelConfiguration<UsersRoles>(UsersRoles.coalesceConfig);\r\n        \r\n        /** The namespace containing all possible values of this.dataSource. */\r\n        public dataSources: typeof ListViewModels.UsersRolesDataSources = ListViewModels.UsersRolesDataSources;\r\n        \r\n        \r\n        public userId: KnockoutObservable<number | null> = ko.observable(null);\r\n        public roleId: KnockoutObservable<number | null> = ko.observable(null);\r\n        \r\n        \r\n        \r\n        \r\n        \r\n        \r\n        \r\n        /** \r\n            Load the ViewModel object from the DTO.\r\n            @param data: The incoming data object to load.\r\n            @param force: Will override the check against isLoading that is done to prevent recursion. False is default.\r\n            @param allowCollectionDeletes: Set true when entire collections are loaded. True is the default. \r\n            In some cases only a partial collection is returned, set to false to only add/update collections.\r\n        */\r\n        public loadFromDto = (data: any, force: boolean = false, allowCollectionDeletes: boolean = true): void => {\r\n            if (!data || (!force && this.isLoading())) return;\r\n            this.isLoading(true);\r\n            // Set the ID \r\n            this.myId = data.userId;\r\n            this.userId(data.userId);\r\n            // Load the lists of other objects\r\n            \r\n            // The rest of the objects are loaded now.\r\n            if (this.coalesceConfig.onLoadFromDto()){\r\n                this.coalesceConfig.onLoadFromDto()(this as any);\r\n            }\r\n            this.isLoading(false);\r\n            this.isDirty(false);\r\n            if (this.coalesceConfig.validateOnLoadFromDto()) this.validate();\r\n        };\r\n        \r\n        /** Saves this object into a data transfer object to send to the server. */\r\n        public saveToDto = (): any => {\r\n            var dto: any = {};\r\n            dto.userId = this.userId();\r\n            \r\n            \r\n            return dto;\r\n        }\r\n        \r\n        /** \r\n            Loads any child objects that have an ID set, but not the full object.\r\n            This is useful when creating an object that has a parent object and the ID is set on the new child.\r\n        */\r\n        public loadChildren = (callback?: () => void): void => {\r\n            var loadingCount = 0;\r\n            if (loadingCount == 0 && typeof(callback) == \"function\") { callback(); }\r\n        };\r\n        \r\n        public setupValidation(): void {\r\n            if (this.errors !== null) return;\r\n            this.errors = ko.validation.group([\r\n            ]);\r\n            this.warnings = ko.validation.group([\r\n            ]);\r\n        }\r\n        \r\n        constructor(newItem?: object, parent?: Coalesce.BaseViewModel | ListViewModels.UsersRolesList) {\r\n            super(parent);\r\n            this.baseInitialize();\r\n            const self = this;\r\n            \r\n            \r\n            \r\n            \r\n            \r\n            \r\n            \r\n            if (newItem) {\r\n                self.loadFromDto(newItem, true);\r\n            }\r\n        }\r\n    }\r\n    \r\n    export namespace UsersRoles {\r\n    }\r\n}\r\n","\r\n/// <reference path=\"../coalesce.dependencies.d.ts\" />\r\n\r\n// Generated by IntelliTect.Coalesce\r\n\r\nmodule ListViewModels {\r\n    \r\n    export namespace UsersRolesDataSources {\r\n        export class Default extends Coalesce.DataSource<ViewModels.UsersRoles> { }\r\n    }\r\n    \r\n    export class UsersRolesList extends Coalesce.BaseListViewModel<ViewModels.UsersRoles> {\r\n        public readonly modelName: string = \"UsersRoles\";\r\n        public readonly apiController: string = \"/UsersRoles\";\r\n        public modelKeyName: string = \"userId\";\r\n        public itemClass: new () => ViewModels.UsersRoles = ViewModels.UsersRoles;\r\n        \r\n        public filter: {\r\n            userId?: string;\r\n            roleId?: string;\r\n        } | null = null;\r\n        \r\n        /** The namespace containing all possible values of this.dataSource. */\r\n        public dataSources: typeof UsersRolesDataSources = UsersRolesDataSources;\r\n        \r\n        /** The data source on the server to use when retrieving objects. Valid values are in this.dataSources. */\r\n        public dataSource: Coalesce.DataSource<ViewModels.UsersRoles> = new this.dataSources.Default();\r\n        \r\n        /** Configuration for all instances of UsersRolesList. Can be overidden on each instance via instance.coalesceConfig. */\r\n        public static coalesceConfig = new Coalesce.ListViewModelConfiguration<UsersRolesList, ViewModels.UsersRoles>(Coalesce.GlobalConfiguration.listViewModel);\r\n        \r\n        /** Configuration for this UsersRolesList instance. */\r\n        public coalesceConfig: Coalesce.ListViewModelConfiguration<UsersRolesList, ViewModels.UsersRoles>\r\n            = new Coalesce.ListViewModelConfiguration<UsersRolesList, ViewModels.UsersRoles>(UsersRolesList.coalesceConfig);\r\n        \r\n        \r\n        protected createItem = (newItem?: any, parent?: any) => new ViewModels.UsersRoles(newItem, parent);\r\n        \r\n        constructor() {\r\n            super();\r\n        }\r\n    }\r\n}\r\n"]}